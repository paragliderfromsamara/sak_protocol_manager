% Программа описания функций формирования протокола атоматизированных испытаний
% язык: PostScript
% (C) Давыденко Сергей Владимирович, OOO "НПП "НОРМА" г.Самара 2008г.
% e-mail: npp_norma@rambler.ru
%
% Это свободная программа; вы можете повторно распространять ее и/или
% модифицировать ее в соответствии с Универсальной Общественной
% Лицензией GNU, опубликованной Фондом Свободного ПО; либо версии 2,
% либо (по вашему выбору) любой более поздней версии.
%
% Эта программа распространяется в надежде, что она будет полезной,
% но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ; даже без подразумеваемых гарантий
% КОММЕРЧЕСКОЙ ЦЕННОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ.  Для
% получения подробных сведений смотрите Универсальную Общественную
% Лицензию GNU.
%
% Вы должны были получить копию Универсальной Общественной Лицензии
% GNU вместе с этой программой; если нет, напишите по адресу: Free
% Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
% 02111-1307 USA
 
%---------------------------------------------------------------------------------------------------
% Общие определения
/mm {2.834646 mul} def % Преобразует мм в пункты
/deg_C { ( \260C) } def % Печатает знак градусы Цельсия
/Mult_symbol ( \65 ) def    % Символ умножения (перекрестья) в шрифте ZapfDingbats

/Inf 3.4e38 def % Определили значение плюс бесконечности
/-Inf -3.4e38 def   % Определили значение минус бесконечности

/pagewidth 210 mm def  % Ширина листа 
/pageheight 297 mm def  % Высота листа 

/SetPaper   % Устанавливает размер бумаги
{
<<
  /HWResolution [1200 1200]
  /PageSize [ pagewidth pageheight ]
>> setpagedevice
} def

SetPaper

/pole_left 15 mm  def % Левое поле
/pole_rigth { pagewidth 14.5 mm sub } def % Правое поле
/pole_top { pageheight 10 mm sub } def  % Верхнее поле
/pole_bot 9.5 mm def % Нижнее поле

/swap {exch} def
/over {1 index} def
/rot {3 -1 roll} def

/Kab_Goden true def % Флаг годности кабеля

/real_format    % Округляет до n знаков после запятой. На стеке: f, n
{
    swap over   % На стеке: n, f, n
    {10 mul} repeat
    round
    swap {10 div} repeat
} def

/01percent_format   % Форматирует вещественное число с точностью до 0.1%. На стеке: f
{   
    dup 1000 ge
    {   % Более или равно 1000
        round cvi
    }
    {   % Менее 1000
        dup 100 ge
        {   % Более или равно 100
            1 real_format
        }
        {       % Менее 100
            dup 10 ge
            {   % Более или равно 10
                2 real_format
            }
            {   % Менее 10
                dup 1 ge
                {   % Более или равно 1
                        3 real_format
                }
                {   % Менее 1
                        4 real_format
                } ifelse
            } ifelse
        } ifelse
    } ifelse
} def

/max    % Берёт на стеке два числа оставляет максимальное
{
    2 copy
    lt {swap} if
    pop
} def

/min    % Берёт на стеке два числа оставляет минимальное
{
    2 copy
    gt {swap} if
    pop
} def

/sred   % Берёт на стеке два числа оставляет среднее арифметическое
{
    add 2 div
} def

/max_el % Берёт на стеке массив возвращает значение максимального элемента
{
    dup 0 get swap  % Предварительно ложим на стек первый элемент массива
    {max} forall    % Проходим в цикле по всем элементам массива
} def

/max_znach  % Берёт на стеке массив возвращает значение максимального числового элемента игнорируя все строковые знач.
{
    -Inf swap  % Предварительно ложим на стек минус бесконечность на стеке: -Inf, [массив]
    {   % Проходим в цикле по всем элементам массива
        dup % На стеке:  тек-max, знач., знач.
        type dup    % На стеке: тек-max, знач., тип_знач., тип_знач.
        /integertype eq swap
        /realtype eq or % На стеке: тек-max, знач., true-числовое
        {   % Значение на стеке числовое сравниваем с тек-max
            max
        }
        {
            pop
        } ifelse
    } forall
    dup -Inf eq
    {   % Получена не минус бесконечность % На стеке:  max
        pop null
    } if
} def

/min_znach  % Берёт на стеке массив возвращает значение минимального числового элемента игнорируя все строковые знач.
{
    Inf swap  % Предварительно ложим на стек плюс бесконечность на стеке: Inf, [массив]
    {   % Проходим в цикле по всем элементам массива
        dup % На стеке:  тек-min, знач., знач.
        type dup    % На стеке: тек-min, знач., тип_знач., тип_знач.
        /integertype eq swap
        /realtype eq or % На стеке: тек-min, знач., true-числовое
        {   % Значение на стеке числовое сравниваем с тек-min
            min
        }
        {
            pop
        } ifelse
    } forall
    dup Inf eq
    {   % Получена не плюс бесконечность % На стеке:  max
        pop null
    } if
} def

/sred_znach % Берёт на стеке массив возвращает среднее ариф. значение элементов игнорируя все строковые знач.
{
    0 0 % Предварительно ложим сумму всех числовых элементов и их количество
    rot
    {   % Проходим в цикле по всем элементам массива
        dup % На стеке:  sum, n, знач., знач.
        type dup    % На стеке: sum, n, знач., тип_знач., тип_знач.
        /integertype eq swap
        /realtype eq or % На стеке: sum, n, знач., true-числовое
        {   % Значение на стеке числовое складываем с суммой
            rot add
            swap 1 add  % Увеличиваем счетчик
        }
        {
            pop
        } ifelse
    } forall    % На стеке:  sum, n
    dup 0 ne
    {   % Получено не нулевое количество числовых элементов массива % На стеке:  sum, n
        div
    }
    {
        pop pop null
    } ifelse
} def

/summ_el    % Берёт на стеке массив, возвращает сумму всех элементов
{
    0 swap {add} forall
} def

/in_array   % На стеке число и массив, проверяет наличие числа в массиве возвращает true
{
    false   % на стеке k, [m_i], false
    3 1 roll    % на стеке false, k, [m_i] 
    {               % на стеке false, k, m_i 
        over eq
        {
            swap pop true swap exit
        } if
    } forall
    pop
} def

/Concat_string  % Складывает две строки лежащие на стеке->возвращает объединённую строку
{ 
    2 copy length
    swap length dup
    rot add string dup
    rot 4 -1 roll putinterval
    dup 0 4 -1 roll putinterval
} def

/Concat_array   % Складывает двa массива лежащие на стеке->возвращает объединённый массив
{ 
    2 copy length
    swap length dup
    rot add array dup
    rot 4 -1 roll putinterval
    dup 0 4 -1 roll putinterval
} def

/Null_array % Возвращает true, если все элементы массива типа null, иначе false
{   % На стеке: проверяемый массив
    true
    swap
    {   type /nulltype ne
        {   % Элемент массива не пустой
            pop % Удаляем предварительно положенный true
            false
            exit
        } if
    } forall
} def

/center % Размещает объёкт по центру меж x1 x2 на стеке: размер объёкта, x1 x2 возвращает координату x
{ over sub rot sub 2 div add } def

/center_page % Размещает объёкт по центру страницы на стеке: размер объёкта возвращает координату x
{ pole_left pole_rigth center } def

/center_print % Печатает строку по центру меж x1 x2 на стеке: x1, x2, y и строка
{
    dup         % на стеке: x1, x2, y, строка, строка
    5 1 roll    % на стеке: строка, x1, x2, y, строка 
    stringwidth pop % на стеке: строка, x1, x2, y, её длина
    4 -2 roll   % на стеке: строка, y, её длина, x1, x2
    center      % на стеке: строка, y, x
    swap moveto show
} def

/rigth_print % Печатает строку выравнивая по правому краю на x1 на стеке: x1, y и строка
{dup stringwidth pop 4 -1 roll swap sub rot moveto show} def

/RowHeigth 4 mm def % Межстрочный интервал
/Print_string_perenos   % Проверяет размещение входной строки в границах полей листа, если данная строка 
            % не поместится, то переносим на следующую строку и печатаем.
{   % На стеке: (строка)
    currentpoint swap   % На стеке: (строка), y, x
    2 index stringwidth pop % На стеке: (строка), y, x, dx
    add pole_rigth 0.1 add gt
    {   % Строка не уместится в текущей строке переносим её
        RowHeigth sub dup pole_bot lt
        {   % Новая строка не уместится на текущей странице
            pop
            NewPage
            RowHeigth 1.5 mul dec_bot
            pole_left bot
        }
        {
            pole_left swap
        } ifelse
        moveto show ( ) show
        RowHeigth dec_bot
    }
    {   % Строка уместится в текущей строке печатаем её
        pop show ( ) show
    } ifelse
} def

/page_num 1 def % Переменная номер страницы

/newsize % На стеке размер шрифта
{ scalefont setfont } def

/Times_Regular % Устанавливает шрифт TimesNewRoman
{/TimesNewRomanPSMT-Regular findfont} def
/Times_Bold % Устанавливает шрифт TimesNewRoman жирный
{/TimesNewRomanPSMT-Bold findfont} def
/Times_Italic % Устанавливает шрифт TimesNewRoman курсив
{/TimesNewRomanPSMT-Italic findfont} def
/Textbook_Regular % Устанавливает шрифт TextbookPSCyr-Regular
{/TextbookPSCyr-Regular findfont} def
/Academy_Bold % Устанавливает шрифт Academy жирный
{/AcademyPSCyr-Bold findfont} def
/ArialMT_Regular % Устанавливает шрифт Arial жирный
{/ArialMT-Regular findfont} def
/ArialMT_Bold % Устанавливает шрифт Arial жирный
{/ArialMT-Bold findfont} def
/ArialMT_Italic % Устанавливает шрифт Arial курсив
{/ArialMT-Italic findfont} def
/Symbol % Устанавливает шрифт Symbol 
{/Symbol findfont} def
/Zapf   % Устанавливает шрифт ZapfDingbats
{/ZapfDingbats findfont} def


/a_b % Печатает строку a и строку b как нижний индекс строки a
{ currentfont 3 1 roll swap show Times_Regular 6 newsize 0 -0.5 mm rmoveto show 0 0.5 mm rmoveto setfont } def

/a^b % Печатает строку a и строку b как верхний индекс строки a
{ currentfont 3 1 roll swap show Times_Regular 6 newsize 0 1.5 mm rmoveto show 0 -1.5 mm rmoveto setfont } def

/kgs-cm^2   % Печатает единицу измерения давления
{ (кгс\57см) (2) a^b } def

/f_x    % Печатает частоту с нижним индексом в текущей позиции пера. на стеке (ind), f[кГц]
{
    10 string cvs   % значение частоты ввиде строки
    swap
    Times_Italic 8 newsize (f) show gsave
    0 -2 rmoveto Times_Italic 4 newsize show grestore 1 0 rmoveto (=) show
    Times_Regular 8 newsize
    1 0 rmoveto show
    Times_Italic 6 newsize
    1 0 rmoveto (кГц) show
} def

/a-b_center_print % На стеке: координаты x1, x2, y, i -> строку ( 2*(i-1)+1-2*(i-1)+2 ) для печати подписи пар
{   1 sub 2 mul dup 1 add swap 2 add % на стеке пара вычисленых по индексу чисел
    swap 3 string cvs (\226) rot 3 string cvs   % на стеке три строки с написанием символов дальше изврат, 
                            % так как не знаю как склеивать строки
    3 copy stringwidth pop
    rot stringwidth pop 
    rot stringwidth pop 
    add add % на вершине суммарная длина строки
                           % на стеке: x1, x2, y, (a), (-), (b), len
    7 -2 roll % на стеке y, (a), (-), (b), len, x1, x2
    center  % на стеке y, (a), (-), (b), x
    5 -1 roll moveto -0.15 mm 0 rmoveto  
    rot  show   % Вывели (a)
    swap 0.1 mm 0 rmoveto show 0.2 mm 0 rmoveto show    % Вывели (-) и (b)
} def
                                                                  
/String_index_width % Вычисляет размер строки с индексом на стеке две строки (a), (b) ->  размер
{
    swap stringwidth pop swap currentfont swap Times_Regular 6 newsize stringwidth pop
    rot add swap setfont
} def

/position 
{   String_index_width 4 -2 roll % Подготовили данные на стеке
    center swap moveto % Определили координаты начала печати для размещения в центре
} def

/zpt {Times_Regular 10 newsize (,) show} def % Печатает запятую после параметра

%---------------------------------------------------------------------------------------------------
% Начертание параметров
/Rgil_0 {(R) (ж)} def % Определяем написание параметра сопротивление жил
/Riz_0 {(R) (из)} def % Определяем написание параметра сопротивление изоляции
/Tiz_0 {(T) (из)} def % Определяем написание параметра времени достижения сопротивление изоляции
/Cr_0 {(C) (р)} def % Определяем написание параметра рабочей ёмкости
/Co_0 {(C) (0)} def % Определяем написание параметра ёмкости жилы
/Ea_0 {(E) (a)} def % Определяем написание параметра ёмкостной ассиметрии жил
/K1_0 {(K) (1)} def % Определяем написание параметра ёмкостной связи K1
/K2_0 {(K) (2)} def % Определяем написание параметра ёмкостной связи K2
/K3_0 {(K) (3)} def % Определяем написание параметра ёмкостной связи K3
/K9_0 {(K) (9)} def % Определяем написание параметра ёмкостной связи K9
/K10_0 {(K) (10)} def % Определяем написание параметра ёмкостной связи K10
/K11_0 {(K) (11)} def % Определяем написание параметра ёмкостной связи K11
/K12_0 {(K) (12)} def % Определяем написание параметра ёмкостной связи K12
/al_0 {(a) (l)} def % Определяем написание параметра рабочего затухания
/A0_0 {(A) (0)} def % Определяем написание параметра переходного затухания на ближнем конце
/Az_0 {(A) (з)} def % Определяем написание параметра защищенности на дальнем конце

/ParamInd_Nach 1 def

/NumNum % На стеке x1, x2, y печатает строку №/№ по центуру меж x1 b x2 с y координатой
{
    Times_Regular 8 newsize (№/№) center_print
} def

/Rgil % На стеке x1, x2, y печатает параметр сопротивление жил по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Rgil_0 position 
    Rgil_0 a_b
} def % Печатает параметр сопротивление жил

/DR % На стеке x1, x2, y печатает параметр омической ассиметрии жил по центру меж x1 и x2 с y координатой
{
    Symbol 10 newsize (D) stringwidth pop Times_Italic 10 newsize (R) stringwidth pop add % определили ширину
    4 -2 roll % Подготовили данные на стеке
    center swap moveto % Определили координаты начала печати для размещения в центре
    Symbol 10 newsize (D) show Times_Italic 10 newsize (R) show
} def

/Riz % На стеке x1, x2, y печатает параметр сопротивление изоляции жил по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Riz_0 position
    Riz_0 a_b
} def % Печатает параметр сопротивление изоляции

/Tiz % На стеке x1, x2, y печатает параметр время достижения сопротивления изоляции жил по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Tiz_0 position
    Tiz_0 currentfont 3 1 roll swap show % Напечатали T
    Times_Regular 9 newsize
    gsave 0.5 mm 0.8 mm rmoveto (*) show grestore 
    Times_Regular 6 newsize
    0 -0.5 mm rmoveto show 0 0.5 mm rmoveto setfont
} def % Печатает параметр сопротивление изоляции

/Tiz_prim   % Печатает примечание по сопротивлению изоляции на стеке строка с нормой
{
    3 mm dec_bot
    pole_left bot moveto
    Times_Regular 9 newsize
    0 0.8 mm rmoveto (*) show 
    1 mm -0.8 mm rmoveto 
    Times_Italic 10 newsize Tiz_0 a_b
    Times_Regular 8 newsize
    (\227время достижения сопротивления изоляции свыше ) show
    show (.) show
} def

/Cr % На стеке x1, x2, y печатает параметр рабочей ёмкости жил по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Cr_0 position
    Cr_0 a_b
} def % Печатает параметр рабочей ёмкости

/DCr % На стеке x1, y печатает параметр разброс рабочей ёмкости пар  x1 с y координатой
{
    moveto % Определили координаты начала печати для размещения в центре
    Symbol 10 newsize (D) show Times_Italic 10 newsize Cr_0 a_b
} def


/Co % На стеке x1, x2, y печатает параметр ёмкости жилы по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Co_0 position
    Co_0 a_b
} def % Печатает параметр ёмкости жилы

/Ea % На стеке x1, x2, y печатает параметр ёмкостной ассиметрии жилы по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    Ea_0 position
    Ea_0 a_b
} def % Печатает параметр ёмкостной ассиметрии жилы

/K1_ % На стеке x1, x2, y печатает параметр ёмкостной связи K1 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K1_0 position   
    K1_0 a_b
} def % Печатает параметр ёмкостной связи K1

/K2_ % На стеке x1, x2, y печатает параметр ёмкостной связи K2 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K2_0 position   
    K2_0 a_b
} def % Печатает параметр ёмкостной связи K2

/K3_ % На стеке x1, x2, y печатает параметр ёмкостной связи K3 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K3_0 position
    K3_0 a_b
} def % Печатает параметр ёмкостной связи K3

/K9_ % На стеке x1, x2, y печатает параметр ёмкостной связи K9 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K9_0 position
    K9_0 a_b
} def % Печатает параметр ёмкостной связи K9

/K10_ % На стеке x1, x2, y печатает параметр ёмкостной связи K10 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K10_0 position
    K10_0 a_b
} def % Печатает параметр ёмкостной связи K10

/K11_ % На стеке x1, x2, y печатает параметр ёмкостной связи K11 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K11_0 position
    K11_0 a_b
} def % Печатает параметр ёмкостной связи K11

/K12_ % На стеке x1, x2, y печатает параметр ёмкостной связи K12 по центру меж x1 и x2 с y координатой
{
    Times_Italic 10 newsize % Установили шрифт
    K12_0 position
    Times_Italic 10 newsize % Установили шрифт
    K12_0 a_b
} def % Печатает параметр ёмкостной связи K12

/al % На стеке x1, x2, y печатает параметр рабочее затухание по центру меж x1 и x2 с y координатой
{
    Symbol 10 newsize % Установили шрифт
    al_0 position
    al_0 a_b
} def % Печатает параметр рабочее затухание

/al* % На стеке x1, x2, y печатает параметр рабочее затухание со (* звёздочкой) по центру меж x1 и x2 с y координатой
{
    Symbol 10 newsize % Установили шрифт
    al_0 position
    al_0 currentfont 3 1 roll swap show % Напечатали T
    Times_Regular 9 newsize
    gsave 0.5 mm 0.8 mm rmoveto (*) show grestore 
    Times_Regular 6 newsize
    0 -0.5 mm rmoveto show 0 0.5 mm rmoveto setfont
} def % Печатает параметр расчётное рабочее затухание

/al*_prim   % Печатает примечание про расчётное значение рабочего затухания
{
    3 mm dec_bot
    pole_left bot moveto
    Times_Regular 9 newsize
    0 0.8 mm rmoveto (*) show 
    1 mm -0.8 mm rmoveto 
    Times_Regular 8 newsize
    (Расчитанное значение полученное по результатам измерений ) show
    Times_Italic 10 newsize Rgil_0 a_b 
    Times_Regular 9 newsize ( и ) show
    Times_Italic 10 newsize Cr_0 a_b
    Times_Regular 9 newsize (.) show
} def

/A0 % На стеке x1, x2, y печатает параметр A0 по центру меж x1 и x2 с y координатой
{
    Symbol 10 newsize % Установили шрифт
    A0_0 position
    A0_0 a_b
} def % Печатает параметр переходное затухание на ближнем конце

/Az % На стеке x1, x2, y печатает параметр Az по центру меж x1 и x2 с y координатой
{
    Symbol 10 newsize % Установили шрифт
    Az_0 position
    Az_0 a_b
} def % Печатает параметр защищенность на дальнем конце

/Zamena_umnog_show  % На стеке: размер симв. умнож, строка в которой x заменяем символом умножения и печатаем
{
    {   % Проходим по каждому символу строки описания структур
        dup 120 eq
        {   % Сомвол x заменяем на знак умножения (перекрестьем)
            pop
            currentfont % Сохранили текущий шрифт
            Zapf 2 index newsize
            Mult_symbol show
            setfont % Востановили текущий шрифт
        }
        {
            1 string dup 0 4 -1 roll put
                show
        } ifelse
    } forall
} def

/CabNameStr_print   % Печатает структуру кабеля символы x заменяются на знак умножения (перекрестьем)
{   % на стеке размер шрифта
% Добавить при вызове флаг переноса по структурам на другую строку или обрывания многоточием
    1.5 div % Уменьшаем размер шрифта символа умножения
    CabNameStruct Zamena_umnog_show
    pop % Удалили со стека размер шрифта символа умножения
} def

/DocNum_convert % Заменяет в строке номера нормативного документа - на длиное тире (\227)
{   
    0 1 DocNum length 1 sub
    {   % Проходим по каждому символу строки описания структур. на стеке ind
        DocNum over get
        45 eq
        {   % Сомвол - заменяем на длинное тире код 151
            DocNum swap 151 put
        }
        {
            pop
        } ifelse
    } for
} def

/ExpStr % на стеке: число
{
    dup
    9999 gt
    {   % число более 9999 преобразуем его
        1 swap % порядок числа
        {       % На стеке p, x
                dup 10 div
            10 lt
            { round 10 div exit } if
            swap 1 add swap
            10 div
        } loop  % На стеке p, x<10
        10 string cvs (e) Concat_string swap
        3 string cvs Concat_string
    } if 
} def   % По выходу на стеке или число или строка числа в экспоненциальном формате

%---------------------------------------------------------------------------------------------------
/H_colontitul   % Рисует верхний колонтитул 
{
    % Рисуем горизонтальную отделяющую линию
    newpath
    pole_left pole_top moveto
    pole_rigth pole_top lineto
    0.3 mm setlinewidth
    stroke
    
    % Пишем название завода
    Times_Regular 8 newsize
    pole_left pole_top 0.5 mm add moveto
    Zavod show

    % Пишем марку кабеля и структуру
    5 mm 0 rmoveto
    ArialMT_Italic 8 newsize
    CabName show ( ) show
    8 CabNameStr_print  % Печатает структуру кабеля. на стеке размер шрифта
    
    % Пишем номер барабана
    Times_Regular 8 newsize
    pole_rigth 10 mm sub pole_top 0.5 mm add

    PortNum type /nulltype ne
    {   % Определено значение номера протокола печатаем его
        (\(Протокол № ) PortNum Concat_string
    }
    {
        (\(Барабан № ) BarabanNum Concat_string
    } ifelse
    (\)) Concat_string rigth_print

    % Печатаем номер страницы
    Times_Regular 10 newsize
    pole_rigth pole_top 0.5 mm add
    page_num 2 string cvs
    rigth_print

} def

/NewPage    % Функция создания новой страницы
{
    showpage
    
    /page_num 1 page_num add def    % Увеличили номер текущей страницы

    H_colontitul    % Рисует верхний колонтитул 

    % Устанавливаем переменные на странице
    /bot pole_top def
    /Yk bot def
    /Yk_min bot def
    /Y0 bot def
} def
%---------------------------------------------------------------------------------------------------
% Основные части протокола
/title (Паспорт качества) def % Текст заголовка

/title_bot pole_top 14 sub def

/PrinTitle % Печатает заголовок протокола
{
    Times_Bold 14 newsize % Установили шрифт заголовка
    % Определяем координаты вывода заголовока
    title stringwidth pop center_page title_bot moveto
    title show % Печатаем заголовок
} def


/PortNum null def   % Предопределённое значение номера

/PortNum_print  % Печатает номер протокола 
{
    PortNum type /nulltype ne
    {   % Значение номера протокола определено
        currentfont % Сохраним текущий шрифт

        ArialMT_Bold 15 newsize % Установили шрифт номера протокола
        pole_rigth 12 mm sub title_bot PortNum rigth_print

        setfont     % Восстанавливаем исходный шрифт
    } if
} def   

/dec_bot % Уменьшает значение переменной bot нижняя граница вывода на листе на число лежащее на стеке
{
    bot swap sub /bot swap def
} def

title_bot 20 sub /bot swap def
/ZakazNum (______) def % Заготовка для номера заказа

/Head_isp % Печатает заголовок испытания
{
    Times_Regular 10 newsize % Установили шрифт
    15 mm pole_left add bot moveto
    (Марка кабеля: ) show
% Добавить проверку не выхода строки поля
    ArialMT_Italic 10 newsize % До конца первой строки ставим курсив
    CabName show (  ) show 10 CabNameStr_print  % Печатает структуру кабеля. на стеке размер шрифта
%   (  ) show
%   DocNum_convert
%   DocNum show
    Times_Regular 10 newsize % Установили шрифт
    10 dec_bot % Переносим координату вывода вниз на 10 пунктов
    15 mm pole_left add bot moveto 
    ZakazNum show 
    (№ Барабана: ) show BarabanNum show
    90 mm pole_left add bot moveto 
    (Тип барабана: ) show TipName show 
    10 dec_bot % Переносим координату вывода вниз на 10 пунктов
    15 mm pole_left add bot moveto 
    (Длина кабеля: ) show CabelLengt show ( м.) show
    90 mm pole_left add bot moveto 
    (Температура: ) show Temperatur show deg_C show
    10 dec_bot % Переносим координату вывода вниз на 10 пунктов
    15 mm pole_left add bot moveto 
    (БРУТТО: ) show Brutto show ( кг.) show
    90 mm pole_left add bot moveto 
    (Дата испытания: ) show IspData show

%   130 mm pole_left add bot moveto 
%   (НЕТТО: ) show 
%   147 mm pole_left add bot moveto Netto show ( кг.) show
%   10 dec_bot % Переносим координату вывода вниз на 10 пунктов
%   20 mm pole_left add bot moveto 
%   (Тип барабана: ) show TipName show 
%   68.5 mm pole_left add bot moveto 
%   (№ Барабана: ) show BarabanNum show
%   130 mm pole_left add bot moveto 
%   (БРУТТО: ) show 
%   147 mm pole_left add bot moveto Brutto show ( кг.) show
%   10 dec_bot % Переносим координату вывода вниз на 10 пунктов
%   20 mm pole_left add bot moveto 
%   (Дата испытания: ) show IspData show
%   68.5 mm pole_left add bot moveto 
%   (Температура: ) show Temperatur show deg_C show

    1.5 mm dec_bot
    /Yk_min bot def
} def

/Def_col_width 8 mm def % ширина столбца по умолчанию

/graniz_el_cols
{       % Печатаем отделяющую линию номеров пар
    2 copy  % Продублировали координаты X элементарных столбцов
    counttomark 1 add index % Продублировали координату Y
    newpath
    1 mm sub moveto 0 4 mm rlineto 
    counttomark 1 add index % Продублировали координату Y
    3 mm add
    lineto 0.15 mm setlinewidth stroke
} def

/Rama_Head_Table
{   % Рисуем рамку ограничения шапки таблицы ниже на 1 мм

    dup % на стеке: x0, y0, y, y
    3 index swap % на стеке: x0, y0, y, x0, y
    newpath moveto  % на стеке: x0, y0, y
    XCols ParamInd_Kon  1 add get over lineto % на стеке: x0, y0, y
    2 copy sub  % на стеке: x0, y0, y, dy
    0 swap rlineto  % на стеке: x0, y0, y
    XCols ParamInd_Kon 1 add get % на стеке: x0, y0, y, xk
    3 index swap sub 0 rlineto
    closepath
    0.4 mm setlinewidth stroke  % отрисовали линию толщиной 0.4 мм   на стеке: x0, y0, y
} def

/Vert_gl_st_head   % на стеке x, y0, y1
{   % Рисует вертикальную линию отделяющию главные столбцы в шапке таблицы
    newpath   
    2 copy sub swap pop 
    3 1 roll moveto
    0 swap neg rlineto
    0.4 mm setlinewidth stroke  % отрисовали линию толщиной 0.4 мм
} def

/Numbers_Cols_print
{   % Печатаем столбец номеров на стеке: x0, y0, y
    2 index
    Def_col_width add 1 mm sub  % на стеке: x0, y0, y, xr-координата правой границы столбца номеров (жил, пар)
    0   % Ложим на стек ноль, для удаления 
    DataInd_Nach 1 DataInd_Nach Kolvo add 1 sub
    {   % на стеке: x0, y0, y, xr, ind
        swap pop    % Удалили индекс с предыдущей итерации цикла
        dup ?FirstNum
        {   % Первый элемент в пучке по подключению рисуем серый фон
            4 index 3 index % на стеке: x0, y0, y, xr, ind, x0, y
            0.3 mm sub
            gsave
            newpath moveto
            Def_col_width 0 rlineto
            0 3 mm rlineto
            Def_col_width neg 0 rlineto
            closepath
            0.7 setgray fill
            grestore
        } if
        over 3 index    % на стеке: x0, y0, y, xr, ind, xr, y
        2 index % на стеке: x0, y0, y, xr, ind, xr, y, ind
        4 string cvs rigth_print % на стеке: x0, y0, y, xr, ind     
        rot 3 mm sub dup 1 mm sub % на стеке: x0, y0, xr, ind, yi+1, yi+1 - 1mm для сравнения с нижнем полем
        pole_bot le % на стеке: x0, y0, xr, ind, yi+1
        {   % Вышли за границу нижнего поля
            3 1 roll    % на стеке: x0, y0, yi+1, xr, ind
            exit
        } if    % Нижнее поле не достигнуто продолжаем далее
        3 1 roll    % на стеке: x0, y0, yi+1, xr, ind
    } for
} def

/Vert_gl_st  % на стеке x, y0, yk
{   % Рисует вертикальную линию отделяющию главные столбцы данных таблицы
    newpath   
    2 copy sub swap pop 
    3 1 roll moveto
    0 swap neg rlineto
    0.3 mm setlinewidth stroke  % отрисовали линию толщиной 0.3 мм
} def

/Rama_Data_Table
{   % на стеке: x0, y0, yk
    % Рисуем замыкающую рамку таблицы
    dup % на стеке: x0, y0, yk, yk
    3 index swap % на стеке: x0, y0, yk, x0, yk
    newpath moveto  % на стеке: x0, y0, yk
    XCols ParamInd_Kon 1 add get over lineto % на стеке: x0, y0, yk
    2 copy sub  % на стеке: x0, y0, yk, dy
    0 swap rlineto  % на стеке: x0, y0, yk
    XCols ParamInd_Kon 1 add get % на стеке: x0, y0, yk, xk
    3 index swap sub 0 rlineto
    closepath
    0.3 mm setlinewidth stroke  % отрисовали линию толщиной 0.3 мм   на стеке: x0, y0, yk
} def

/Data_Print % Печатает столбец данных стек оставляет чистым
{   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные]
    Y1  % На стеке x-нач, x-кон, Norm_min, Norm_max, [Данные], y
    DataInd_Nach 1 DataInd_Kon
    {   % На стеке: x-нач, x-кон, Nom_min, Nom_max, [Данные], y, ind
        1 sub
        2 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, [Данные]
        swap get    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач.
        dup type /stringtype eq
        {   % Значение является строкой печатаем его
            6 index 6 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон
            3 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон, y
            4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, x-нач, x-кон, y, знач.
            Times_Italic 8 newsize
            center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y
        }
        {       % Значение не является строкой проверим его на пренадлежность числовому типу
            % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач.
            dup % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., знач.
            type dup    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., тип_знач., тип_знач.
            /integertype eq swap
            /realtype eq or % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., true-числовое
            {   % Значение на стеке числовое сравниваем с нормами
                % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач.
                dup abs dup % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., знач., знач.
                6 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., знач., знач., Norm_min
                lt  % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., знач., true-если меньше нормы
                swap 5 index    % % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., true-если меньше нормы, знач., Norm_max
                gt  % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., true-если меньше нормы, true-если больше нормы
                or
                {   % Значение выходит за нормы
                    Times_Bold 8 newsize
                }
                {   % Значение удовлетворяет нормам
                    Times_Regular 8 newsize
                } ifelse
                % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач.
                6 index 6 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон
                3 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон, y
                4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, x-нач, x-кон, y, знач.
                ExpStr 10 string cvs
                center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y
            }
            {   % Значение на стеке не числовое печатаем его тип
                6 index 6 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон
                3 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, знач., x-нач, x-кон, y
                4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, x-нач, x-кон, y, знач.
                type 16 string cvs
                Times_Italic 8 newsize
                center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y

            } ifelse
        } ifelse
        3 mm sub    % Уменьшили координату Y на Def_row_height стандартную высоту
    } for
    pop pop pop pop pop pop % Отчистили стек
} def

/vline_el_cols  % Рисует вертикальную линию разделяющую элементарные столбцы
{   Yh Yk
    newpath
    2 copy sub swap pop 
    3 1 roll moveto
    0 swap neg rlineto
    0.15 mm setlinewidth stroke  % отрисовали линию толщиной 0.15 мм
} def

/Part_Table_I % Печатает шапку таблицы первичных параметров для жил на стеке x0, y0 
{

    dup /Y0 swap def
    /Captoin_Table1 (Первичные параметры) def
    /tetx_table (Таблица) def
    /XCols pole_rigth pole_left sub Def_col_width div floor cvi 2 mul array def % Массив X-координат границ
                        % главных (ограничивающих разные параметры) столбцов

    over dup XCols 0 rot put % Сохранили x0 в нулевой элемент массива координат
    over % на стеке x0, y0, x0, y0
    3.5 mm sub % Строка вывода названий параметров ниже на 3.5 мм (y=y0-3.5mm)

    over Def_col_width add  % Ширина нулевого столбца определена на стеке: x0, y0,  x0, y, x1
    swap over XCols ParamInd_Nach rot put  % Сохранили в массиве координату дальней границы текущего столбца
    2 copy  % на стеке: x0, y0,  x0, x1, y, x1, y
    5 -1 roll 3 1 roll  % на стеке: x0, y0, x1, y, x0, x1, y
    NumNum

    0 % Для первого удаления со стека в цикле (типа индекс последнего напечатанного элемента)

    ParamInd_Nach 1 Param length 1 sub % На стеке: x0, y0, x0, y, 0, 1, индекс последнего элемента
    {
        swap pop    % удалили индекс последнего напечатаного параметра
        dup 1 add swap dup % Дублируем индекс массива для определения числа столбцов
        5 1 roll % Для переноса индекса массива
        Cols swap get Def_col_width mul 
        3 index add % Ширина столбца определена на стеке: x_ind-1, y, x_ind
        dup pole_rigth gt  % Проверка выхода за поля страницы
        {   % Произошел выход за поля страницы
            pop pop rot 1 sub
            exit % Выходим из цикла
        } if    % Поля не достигнуты продолжаем
        swap over XCols 3 1 roll put  % Сохранили в массиве координату дальней границы текущего столбца
        swap        % x0, x1, y
        2 copy          % x0, x1, y, x1, y
        5 -1 roll       % x1, y, x1, y, x0
        3 1 roll % x1   % x1, y, x0, x1, y стек готов к вызову процедуры печати по центру меж x_ind-1 x_ind
        Param 6 index get cvx exec % Извлекает из массива имя функции и выполняет его
        zpt
        rot
    } for % на стеке: x0, y0, xk, y, ind где ind индекс последнего напечатаного параметра в массиве параметров

    /ParamInd_Kon swap def % Сохраняем в переменную IndParam индекс последнего напечатаного параметра в массиве параметров

    % Определим сколько раз можно повторить столбцы таблицы по оси X
%   /Count_X_copy pole_rigth pole_left sub 3 index 5 index sub div floor cvi def

    % Рисуем верхнюю линию шапки таблицы
%   newpath % на стеке: x0, y0, xk, y
%   swap 2 index moveto % установили перо в правый верхний угол таблицы. на стеке: x0, y0, y
%   2 index 2 index     % скопировали на вершину стека x0, y0
%   lineto 0.4 mm setlinewidth stroke  % отрисовали линию толщиной 0.4 мм   на стеке: x0, y0, y
    swap pop

    % Печатаем строку единиц измерения ниже строки параметров на 3.5 мм
    Times_Regular 6.5 newsize % Установили шрифт 8 пт.
    3 mm sub % на стеке: x0, y0, y-3.5мм

    % Печатаем строку наименований структур (нулевой столбец)
    XCols 0 get % на стеке: x0, y0, y, x_0
    XCols ParamInd_Nach get % на стеке: x0, y0, y, x_0, x_1
    2 index % на стеке: x0, y0, y, ind, x_i, x_i+1, y
    EdIsm 0 get
    center_print

    % Печатаем строку наименований структур (остальные столбцы)
    ParamInd_Nach 1 ParamInd_Kon
    {   % на стеке: x0, y0, y, ind
        XCols over get  % на стеке: x0, y0, y, ind, x_i
        XCols 2 index 1 add get % на стеке: x0, y0, y, ind, x_i, x_i+1
        3 index % на стеке: x0, y0, y, ind, x_i, x_i+1, y
        EdIsm 5 -1 roll get
        center_print
    } for   % на стеке: x0, y0, y

    Times_Regular 8 newsize % Установили шрифт 10 пт.
    % Печатаем строку с номерами жил (пар)
    % Предваретельно определим максимальное число элементарных столбцов (обычно оно равно числу жил в структуре)
    Cols max_el dup 
    1 gt
    {   % Таблица не по жилам значит печатаем строку нумерации жил
        % на стеке: x0, y0, y, col_max
        swap 4.5 mm sub % перенесли строку вывода вниз на 4.5 мм % на стеке: x0, y0, col_max, y
        mark    % Положили на стек метку под ней лежит координата y
        ParamInd_Nach 1 ParamInd_Kon
        {   % Проходим по главным столбцам со второго на стеке: x0, y0, col_max, y, mark, ind
            XCols over get      % на стеке: x0, y0, col_max, y, mark, ind, x_нач главного столбца
            Cols rot get    % получили число элементарных столбцов n, на стеке: x0, y0, col_max, y, mark, x_i, n
            dup 1 gt  
            {   % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, col_max, y, mark, x_i, n
                % Определим как печатать номера элементарных столбцов
                dup counttomark 2 add index swap    % на стеке: x0, y0, col_max, y, mark, x_i, n, col_max, n
                idiv 1 gt   % на стеке: x0, y0, y, mark, x_i, n, (col_max/n > 1)
                {   % Печатаем как для пар на стеке: x0, y0, y, mark, x_i, n
                    1 1 rot
                    {   % на стеке: x0, y0, col_max, y, mark, x_i, ...,xel_i ind_el
                        swap dup Def_col_width add  % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1
                        2 copy % на стеке: x0, col_max, y0, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1
                        counttomark 1 add index % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1, y
                        6 -1 roll   % на стеке: x0, y0, col_max, y, mark, x_i, ..., xel_i, xel_i+1, xel_i, xel_i+1, y, ind_el
                        a-b_center_print
                        graniz_el_cols  % Печатаем отделяющую линию номеров пар 
                    } for
                }
                {   % Печатаем как для жил
                    1 1 rot
                    {   % на стеке: x0, y0, col_max, y, mark, x_i, ...,xel_i ind_el
                        swap dup Def_col_width add  % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1
                        2 copy % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1
                        counttomark 1 add index % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1, y
                        6 -1 roll   % на стеке: x0, y0, col_max, y, mark, x_i, ..., xel_i, xel_i+1, xel_i, xel_i+1, y, ind_el
                        4 string cvs center_print   % на стеке: x0, y0, col_max, y, mark, x_i, xel_i+1
                        graniz_el_cols  % Печатаем отделяющую линию номеров жил 
                    } for
                } ifelse                
            }
            {pop pop}   % Удаляем со стека n и x-нач главного столбца
            ifelse
        } for 

        % Сохраняем координаты X елементарных столбцов в массиве
        counttomark array /XCols_el swap def
        counttomark 1 sub -1 0
        { XCols_el swap rot put
        } for
        pop % Удалили метку
        swap pop % Удалили col_max
        % на стеке: x0, y0, y
    }
    {
        pop % Удаляем максимальное число элементарных столбцов на стеке: x0, y0, y
    } ifelse
    
    
    1 mm sub % на стеке: x0, y0, y 

    % Рисуем вертикальные линии отделяющие главные столбцы в шапке таблицы

    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st_head     
    } for

    % Рисуем рамку ограничения шапки таблицы ниже на 1 мм
    Rama_Head_Table
    
    Times_Regular 8 newsize

    dup /Yh swap def    % Сохранили в переменную Yh координату нижней границы шапки таблицы
    
    3 mm sub dup    % на стеке: x0, y0, y, y
    /Y1 swap def    % Сохранили в переменную Y1 координату первой строки таблицы

    % Печатаем столбец номеров на стеке: x0, y0, y
    Numbers_Cols_print
    
    /DataInd_Kon swap def   % Сохранили индекс последнего напечатаного номера (жилы, пары)
    pop % Удалили xr
    2.5 mm add  % Нижняя координата таблицы ниже последенй выведенной строки на 1 мм
%   dup Yk lt   % Для таблиц выставляемых по столбцам необходимо проверять чтобы нижняя очередного столбца не 
%           % была выше предыдущих выводов этой же таблицы для подрисовки ровной грницы таблиц
%   { /Yk swap def }
%   { pop } ifelse  % Сохранили в переменную Yk нижнюю координату таблицы

    dup /Yk swap def    % Сохранили в переменную Yk нижнюю координату таблицы
    dup Yk_min min /Yk_min swap def % Сохранили в переменную Yk_min самую нижнюю координату таблицы

    % на стеке: x0, y0
%   Yk  % на стеке: x0, y0, yk

    % Рисуем вертикальные линии отделяющие главные столбцы данных таблицы
    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for

    Rama_Data_Table % Рисуем замыкающую рамку таблицы
    % на стеке: x0, y0, yk

    % Рисуем вертикальные линии разделяющие элементарные столбцы
    Cols max_el
    1 gt
    {
        XCols_el { vline_el_cols } forall
    } if

    % на стеке: x0, y0, yk

        % Печатаем столбцы данных
        ParamInd_Nach 1 ParamInd_Kon
    {       % Проходим по главным столбцам начиная с индекса печатаемого параметра на стеке: x0, y0, yk, ind
                XCols over get          % на стеке: x0, y0, yk, ind, x_нач главного столбца
                Cols 2 index get    % получили число элементарных столбцов n, на стеке: x0, y0, y, ind, x_нач, n
                dup 1 gt
                {       % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, y, ind, x_нач, n
            % Определим название параметра и нормы
            Param 4 -1 roll get 10 string cvs   % на стеке: x0, y0, y, x_нач, n, (Парам)
            dup (Norm) swap Concat_string dup   % на стеке: x0, y0, y, x_нач, n, (Парам), (NormПарам), (NormПарам)
            (Min) Concat_string cvx exec    % на стеке: x0, y0, y, x_нач, n, (Парам), (NormПарам), NormПарамMin
            swap (Max) Concat_string cvx exec   % на стеке: x0, y0, y, x_нач, n, (Парам), NormПарамMin, NormПарамMax
                        1 1 6 -1 roll
            {   % Проходим по элементарным столбцам. 
                % на стеке: x0, y0, y, x_нач, (Парам), NormПарамMin, NormПарамMax, ind_el
                    5 -1 roll   % на стеке: x0, y0, y, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач
                dup Def_col_width add   % на стеке: x0, y0, y, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач, x_кон
                dup % на стеке: x0, y0, y, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач, x_кон, x_кон
                7 1 roll    % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач, x_кон
                4 index 4 index % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач, x_кон, NormПарамMin, NormПарамMax
                7 index % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax, ind_el, x_нач, x_кон, NormПарамMin, NormПарамMax, (Парам)
                6 -1 roll   % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax, x_нач, x_кон, NormПарамMin, NormПарамMax, (Парам), ind_el
                2 string cvs Concat_string cvx exec
                % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax, x_нач, x_кон, NormПарамMin, NormПарамMax, [Парамind_el]
                Data_Print  % на стеке: x0, y0, y, x_кон, (Парам), NormПарамMin, NormПарамMax
            } for
            pop pop pop pop % на стеке: x0, y0, y
                }
                {   % Печатаем данные по главному столбцу
            % на стеке: x0, y0, y, ind, x_нач, n
            pop % на стеке: x0, y0, y, ind, x_нач
            dup Def_col_width add   % на стеке: x0, y0, y, ind, x_нач, x_кон
            Param 4 -1 roll get 10 string cvs   % на стеке: x0, y0, y, x_нач, x_кон, (Парам)
            dup (Norm) swap Concat_string dup   % на стеке: x0, y0, y, x_нач, x_кон, (Парам), (NormПарам), (NormПарам)
            (Min) Concat_string cvx exec    % на стеке: x0, y0, y, x_нач, x_кон, (Парам), (NormПарам), NormПарамMin
            swap (Max) Concat_string cvx exec   % на стеке: x0, y0, y, x_нач, x_кон, (Парам), NormПарамMin, NormПарамMax
            rot 1 2 string cvs Concat_string cvx exec   % на стеке: x0, y0, y, x_нач, x_кон, NormПарамMin, NormПарамMax, [Парам1]
            Data_Print
        }       
                ifelse  % на стеке: x0, y0, yk
        } for

        rot pop swap pop
    XCols ParamInd_Kon 1 add get
    swap    % На стеке: xk, yk  
} def

/Yn bot def % Предуcтановили в переменной Yn координату нижней части таблицы статистики

/Stat_Table_I   % Рисует таблицу статистических данных и норм для первичных параметров
{   % Печатаем нулевой столбец статистики 
    XCols 0 get dup Def_col_width add Yk    % На стеке: x0, x1, yk
    2.5 mm sub  % Перенесли y в низ на 4 мм
    Times_Italic 8 newsize
    3 copy (max) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    3 copy (Средн.) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    (min) center_print  % стек освобожден

    % Печатаем статистику по параметрам
    Times_Regular 8 newsize
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке индекс параметра
        dup XCols swap get  % на стеке ind, x-нач
        over 1 add XCols swap get % на стеке: ind, x-нач, x-кон
        Param 3 index get 10 string cvs % на стеке: ind, x-нач, x-кон, (Парам)
        Cols 5 -1 roll get  % на стеке: x-нач, x-кон, (Парам), число элем столбцов
        1 1 rot
        {   % проходим по всем элем. столбцам. на стеке: x-нач, x-кон, (Парам), ind
            dup 2 string cvs swap   % на стеке: x-нач, x-кон, (Парам), (ind), ind
            1 gt
            {   % Не первый элем. столбец на стеке: x-нач, x-кон, [Объед. по парам], (Парам), (ind)
                over swap Concat_string
                cvx exec    % на стеке: x-нач, x-кон, [Объед. по парам], (Парам), [Парамind]
                rot Concat_array swap % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (Парам)
            }
            {       % Первый элем. столбец на стеке: x-нач, x-кон, (Парам), (ind)
                over swap Concat_string
                cvx exec    % на стеке: x-нач, x-кон, (Парам), [Парам1]
                swap    % на стеке: x-нач, x-кон, [Парам1], (Парам)
            } ifelse
        } for
        % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (Парам)
        pop % Удалили строку названия параметра на стеке: x-нач, x-кон, [Объед. по парам с тек.]
        dup max_znach dup
        type /nulltype eq
        {   % Максимальное значение не определено
            pop (нет.)
        }
        {
            ExpStr 10 string cvs    % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач)
        } ifelse
        Yk 2.5 mm sub dup   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y
        5 index 5 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y, x-нач, x-кон
        rot 5 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
        2.5 mm sub
        over    % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, [Объед. по парам с тек.]
        sred_znach dup
        type /nulltype eq
        {   % Среднее значение не определено
            pop (нет.)
        }
        {
            01percent_format ExpStr 10 string cvs   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач)
        } ifelse
        4 index 4 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач), x-нач, x-кон
        3 index 4 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
        2.5 mm sub swap
        min_znach dup
        type /nulltype eq
        {   % Минимальное значение не определено
            pop (нет.)
        }
        {
            ExpStr 10 string cvs    % на стеке: x-нач, x-кон, y, (мин_знач)
        } ifelse
        center_print
        
%       Param 4 -1 roll get 10 string cvs   % на стеке: x-нач, x-кон, (Парам)
%       (Ism) swap Concat_string    % на стеке: x-нач, x-кон, (IsmПарам)
%       3 1 roll    % на стеке: (IsmПарам), x-нач, x-кон
%       Yk 4 mm sub % на стеке: (IsmПарам), x-нач, x-кон, y
%       3 copy  % на стеке: (IsmПарам), x-нач, x-кон, y, x-нач, x-кон, y
%       6 index (Max) Concat_string cvx exec 10 string cvs
%       center_print
%       3 mm sub
%       3 copy  % на стеке: (IsmПарам), x-нач, x-кон, y, x-нач, x-кон, y
%       6 index (Sred) Concat_string cvx exec 10 string cvs
%       center_print
%       3 mm sub
%       % на стеке: (IsmПарам), x-нач, x-кон, y
%       4 -1 roll (Min) Concat_string cvx exec 10 string cvs
%       center_print
    } for

    % Отрисовываем разделительные линии главных стоблцов статискики
    Yk dup 8 mm sub
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке yk, y, ind
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for
    /Ys swap def    % Сохранили в переменной Ys координату нижней части таблицы статистики
    pop % Удалили со стека значение yk

    % Рисуем горизотнтальный разделитель для норм
    XCols 0 get dup
    XCols ParamInd_Kon 1 add get
    swap sub dup rot Ys
    newpath moveto 0 rlineto
    0 -2.5 mm rlineto
    neg 0 rlineto
    closepath
    0.3 mm setlinewidth
    stroke
    
    % Подпись нормы
    XCols 0 get 3 mm add Ys 1.8 mm sub
    Times_Regular 6 newsize
    moveto (Нормы(100%)) show

    % Печатаем нулевой столбец норм 
    XCols 0 get dup Def_col_width add Ys    % На стеке: x0, x1, ys
    5 mm sub    % Перенесли y в низ на 7 мм
    Times_Italic 8 newsize
    3 copy (max) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    (min) center_print  % стек освобожден

    % Печатаем нормы по параметрам
    Times_Regular 8 newsize
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке индекс параметра
        dup XCols swap get  % на стеке ind, x-нач
        over 1 add XCols swap get % на стеке: ind, x-нач, x-кон
        Param 4 -1 roll get 10 string cvs   % на стеке: x-нач, x-кон, (Парам)
        (Norm) swap Concat_string   % на стеке: x-нач, x-кон, (NormПарам)
        3 1 roll    % на стеке: (NormПарам), x-нач, x-кон
        Ys 5 mm sub % на стеке: (NormПарам), x-нач, x-кон, y
        3 copy  % на стеке: (IsmПарам), x-нач, x-кон, y, x-нач, x-кон, y
        6 index (Max) Concat_string cvx exec    % на стеке: (IsmПарам), x-нач, x-кон, y, x-нач, x-кон, y, Знач максимальной нормы
        dup
        Inf eq
        {   % Максимальная норма не задана не печатаем ничего
            pop pop pop pop
        }
        {
            10 string cvs
            center_print
        } ifelse
        2.5 mm sub
        % на стеке: (NormПарам), x-нач, x-кон, y
        4 -1 roll (Min) Concat_string cvx exec 
        dup -Inf eq
        {
            pop pop pop pop
        }
        {
            10 string cvs
            center_print
        } ifelse
    } for

    % Отрисовываем разделительные линии главных стоблцов статискики
    Ys 2.5 mm sub dup 5.5 mm sub
    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for
%   Yk min
    /Yn swap def    % Сохранили в переменной Yn координату нижней части таблицы статистики
    pop % Удалили со стека значение y

    % Рисуем замыкающую рамку таблицы статистики и норм
    XCols 0 get Yk
    2 copy
    newpath
    moveto
    Yn swap sub dup
    0 swap rlineto
    swap XCols ParamInd_Kon 1 add get
    swap sub 0 rlineto
    0 swap neg rlineto
    closepath
    0.3 mm setlinewidth
    stroke
} def

/Print_Table_I  % Размещает таблицу первичных параметров по левому полю и на координате bot
{   % Определим число строк данных выводимой таблицы
    Param 1 get % на стеке: Парам
    10 string cvs (1) Concat_string cvx exec
    length /Data_count swap def % Сохранили в переменную Data_count число элементов в массиве данных

    /ParamInd_Kon 0 def
    {   % Проходим по не напечатанным частям таблицы
        /DataInd_Kon 0 def
        /ParamInd_Nach ParamInd_Kon 1 add def
        Cols ParamInd_Nach Cols length ParamInd_Nach sub getinterval    % На стеке: оставшаяся часть массива столбцов
        summ_el 1 add   % Определили число столбцов таблицы
        Def_col_width mul   % Определили ширину оставшейся части таблицы
        pole_rigth pole_left sub swap div % Определили число раз расположения таблицы K (число колонок)
        floor   % Округлили к меньшему целому 0 таблица целиком не уместится, 1 уместится, K уместится
        % Таблицу можно разместить в одной или более колонках
        bot 25 mm sub pole_bot lt
        {   % Таблица выводится в нижней части страницы и для не допускания висячей шапки переносим на др. стр.
            NewPage
            1 mm dec_bot
        } if
        % на стеке: K
        {
            /Data_ost Data_count DataInd_Kon sub def
            Data_ost 4 le
            {   % В таблице менее 4 строк данных, то она выводится в одну колонку
                pop 1   % На стеке: 1
            } if
            dup Data_ost ge
            {   % Может быть размещено колонок больше чем выводимых данных
                pop Data_ost
            } if
                
            dup % на стеке: K, K
            % Определим число строк данных в одной колонке
            1 gt
            {   % Более одной колонки
                dup Data_ost swap div ceiling cvi   % На стеке: K, Число строк в колонке из расчета размещения на одной стр.
                /RowCount swap def  % Сохранили в переменную число строк в одной колонке
            }
            {   % Одна и менее колонок
                /RowCount Data_ost def  % Сохранили в переменную число строк в одной колонке
                pop 1
            } ifelse

            % Печатаем таблицу, если она не умещается на текущем листе, то переносим на след. стараницу
            % На стеке: K (число колонок)
            dup
            0 1 rot 1 sub
            {   % Проходим по колонкам
                /DataInd_Nach DataInd_Kon 1 add def % Устанавливаем индекс начала данных печати
                % На стеке: K, ind
                RowCount Data_count DataInd_Kon sub
                le
                {   % Число не отпечатаных строк в таблице больше чем размер столбца
                    /Kolvo RowCount def
                }
                {       % Число строк данных для распечатки меньше чем осталось
                    /Kolvo Data_count DataInd_Kon sub def   % Установили в переменную количества оставшееся
                                        % число строк данных
                } ifelse    % на стеке: K, ind

                Kolvo 0 ne
                {
                    0 eq
                    {   % Печатаем первую колонку. на стеке: 
                        pole_left bot   % Положили на стек координаты начала таблицы
                        Part_Table_I
                        pop     % Удалили yk
                    }
                    {   % Печатаем остальные колонки
                        % на стеке: xk 
                        bot
                        Part_Table_I
                        pop     % Удалили yk на стеке: xk               
                    } ifelse
                }
                {
                    pop exit
                } ifelse
            } for
            pop % Удалили xk последней таблицы
            DataInd_Kon Data_count lt
            {   % Не все данные отпечатаны
                NewPage
                1 mm dec_bot
            }
            {   % Все данные отпечатаны
                exit
            } ifelse
        } loop
        % Проверяем размещение на текущем листе таблицы статистики
        Yk 22 mm sub pole_bot lt
        {   % Таблица статистики не уместится на текущем листе
            NewPage
            4 mm dec_bot
            XCols ParamInd_Kon 1 add get bot (Окончание таблицы) rigth_print
            1 mm dec_bot
            /Yk bot def
        } if

        Stat_Table_I    % Печатаем таблицу статистики и норм
        /bot Yn Yk_min min def  % Запишем в переменную bot нижнюю границу таблицы норм  
        
        ParamInd_Kon Param length 1 sub lt  % Сравниваем индекс последнего напечатанного параметра с длиной массива параметров
        {   % Не все параметры напечатаны
            1 mm dec_bot    % Следующая часть параметров выводится ниже на 5 мм             
        }
        {   % Все параметры напечатаны
            exit
        } ifelse    
    } loop

    % Ложим на стек xk, yk для дальнейшего использования
    XCols ParamInd_Kon 1 add get Yn
} def

/Komb_Riz
{   % Вставляет таблицу комбинационных измерений сопротивления изоляции
    % на стеке: x0, y0
    /ParamInd_Nach 1 def
    /DataInd_Nach 1 def
    dup 40 mm sub pole_bot lt
    {   % таблица комбинационных испытаний не уместится на текущем листе
        NewPage
        1 mm dec_bot
        pop pop pole_left bot
    } if

    over pole_left ne %sub abs 0.1 le
    {   % таблица выводится не по левому полю поднимим её на один уровень с предыдущей таблицей
        pop 1 mm add Y0
    } if
    
    over Def_col_width 2 mul add pole_rigth gt
    {   % таблица не уместится по ширине листа перенесём её к левому полю
        1 mm dec_bot
        pop pop pole_left bot
    } if

    % Определим число строк данных выводимой таблицы
    Param 1 get % на стеке: Парам
    10 string cvs (1) Concat_string cvx exec
    length /Kolvo swap def % Сохранили в переменную Kolvo число элементов в массиве данных

    2 copy
    Part_Table_I    % На стеке: x0, y0, xk, yk
    3 mm sub    % На стеке: x0, y0, xk, y
    4 -1 roll
    over    % На стеке: y0, xk, y, x0, y
    Times_Italic 8 newsize 
    moveto Riz_0 a_b 
    Times_Regular 8 newsize
    ( Норма:) show  % На стеке: y0, xk, y
    rot pop % На стеке: xk, y
    3 mm sub
    2 copy  

    NormRizMin 10 string cvs  ( ) Concat_string
    EdIsmNormRiz Concat_string
    rigth_print % На стеке: xk, y
    % Проверим какая таблица заканчивается ниже
    Yn min bot min
    dup /bot swap def
} def

/Def_col_width_al 15 mm def % ширина столбца по умолчанию

/al_ind_data    % Определяет индекс первого или единственного массива данных рабочего затух. в двумерном массиве данных
{   % На стеке индекс главного столбца
    dup
    -1
    1 1 4 -1 roll
    {
        Cols swap get add
    } for
    Cols rot get
    1 sub sub
} def

/Num_al* null def   % Индекс параметра рабочего затухания полученный расчётно

/Part_Table_al % Печатает часть таблицы рабочего затухания. на стеке x0, y0 
{

    dup /Y0 swap def
    /Captoin_Table1 (Рабочее затухание) def
    /tetx_table (Таблица) def
    /XCols pole_rigth pole_left sub Def_col_width div floor cvi 2 mul array def % Массив X-координат границ
                        % главных (ограничивающих разные параметры) столбцов

    over dup XCols 0 rot put % Сохранили x0 в нулевой элемент массива координат
    over % на стеке x0, y0, x0, y0
    3.5 mm sub % Строка вывода названий параметров ниже на 3.5 мм (y=y0-3.5mm)

    over Def_col_width add  % Ширина нулевого столбца определена на стеке: x0, y0,  x0, y, x1
    swap over XCols ParamInd_Nach rot put  % Сохранили в массиве координату дальней границы текущего столбца
    2 copy  % на стеке: x0, y0,  x0, x1, y, x1, y
    5 -1 roll 3 1 roll  % на стеке: x0, y0, x1, y, x0, x1, y
    NumNum

    0 % Для первого удаления со стека в цикле (типа индекс последнего напечатанного элемента)

    ParamInd_Nach 1 Cols length 1 sub % На стеке: x0, y0, x0, y, 0, 1, индекс последнего элемента
    {
        swap pop    % удалили индекс последнего напечатаного параметра
        dup 1 add swap dup % Дублируем индекс массива для определения числа столбцов
        5 1 roll % Для переноса индекса массива
        Cols swap get
        dup
        1 gt
        {   % Главный столбец содержит элементарные столбцы
            Def_col_width mul
        }
        {
            pop Def_col_width_al
        } ifelse
         
        3 index add % Ширина столбца определена на стеке: x_ind-1, y, x_ind
        dup pole_rigth gt  % Проверка выхода за поля страницы
        {   % Произошел выход за поля страницы
            pop pop rot 1 sub
            exit % Выходим из цикла
        } if    % Поля не достигнуты продолжаем
        swap over XCols 3 1 roll put  % Сохранили в массиве координату дальней границы текущего столбца
        swap        % x0, x1, y
        3 copy          % x0, x1, y, x0, x1, y
        6 -1 roll pop   % ind, x1, y, x0, x1, y стек готов к вызову процедуры печати по центру меж x_ind-1 x_ind
        Num_al* type /nulltype ne
        {   % Индекс расчётного параметра установлен
            Num_al* type /arraytype eq
            {
                5 index Num_al* in_array
                {   % Выводится столбец с расчётным параметром
                    al*
                }
                {
                    al
                } ifelse
            }
            {
                5 index Num_al* eq
                {   % Выводится столбец с расчётным параметром
                    al*
                }
                {
                    al
                } ifelse
            } ifelse
        }
        {
            al  % Печатаем обозначение рабочего затухания
        } ifelse
        zpt
        rot
    } for % на стеке: x0, y0, xk, y, ind где ind индекс последнего напечатаного параметра в массиве параметров

    /ParamInd_Kon swap def % Сохраняем в переменную IndParam индекс последнего напечатаного параметра в массиве параметров
    swap pop

    % Печатаем строку единиц измерения ниже строки параметров на 3.5 мм
    Times_Regular 8 newsize % Установили шрифт 8 пт.
    3.5 mm sub % на стеке: x0, y0, y-3.5мм

    % Печатаем строку наименований структур (нулевой столбец)
    XCols 0 get % на стеке: x0, y0, y, x_0
    XCols ParamInd_Nach get % на стеке: x0, y0, y, x_0, x_1
    2 index % на стеке: x0, y0, y, ind, x_i, x_i+1, y
    StructTip center_print

    % Печатаем строку единиц измерения (остальные столбцы)
    ParamInd_Nach 1 ParamInd_Kon
    {   % на стеке: x0, y0, y, ind
        XCols over get  % на стеке: x0, y0, y, ind, x_i
        XCols 2 index 1 add get % на стеке: x0, y0, y, ind, x_i, x_i+1
        3 index % на стеке: x0, y0, y, ind, x_i, x_i+1, y
        4 -1 roll
        Num_al* type /nulltype ne
        {   % Индекс расчётного параметра установлен
            Num_al* type /arraytype eq
            {
                Num_al* in_array
                {   % Выводится столбец с расчётным параметром
                    (дБ/км)
                }
                {
                    EdIsm_al
                } ifelse
            }
            {
                Num_al* eq
                {   % Выводится столбец с расчётным параметром
                    (дБ/км)
                }
                {
                    EdIsm_al
                } ifelse
            } ifelse
        }
        {
            pop
            EdIsm_al
        } ifelse
        center_print
    } for   % на стеке: x0, y0, y

    3.5 mm sub % на стеке: x0, y0, y-3.5мм
    % Печатаем строку частот (остальные столбцы)
    dup 1.5 mm sub /Yh swap def % сохранили значение координаты Y предположительного окончания шапки табл.
    ParamInd_Nach 1 ParamInd_Kon
    {   % на стеке: x0, y0, y, ind
        XCols over get  % на стеке: x0, y0, y, ind, x_i
        2 index % на стеке: x0, y0, y, ind, x_i, y

        Freq_min 3 index 1 sub get  % на стеке: x0, y0, y, ind, x_i, y, f_min
        dup type /nulltype eq
        {   % Минимальная частота не задана
            pop pop pop pop
        }
        {       % Минимальная частота задана проверяем заданность максимальной частоты
            Freq_max 4 index 1 sub get % на стеке: x0, y0, y, ind, x_i, y, f_min, f_max
            dup type /nulltype eq
            {   % Максимальная частота не задана
                pop % Удаляем остатки значение (null) от не заданой f_max
                % на стеке: x0, y0, y, ind, x_i, y, f_min
                rot 1.5 mm add rot 4 sub % на стеке: x0, y0, y, ind, f_min, x_i, y
                dup 1.5 mm sub Yh min /Yh swap def  % сохранили значение координаты Y
                                    % предположительного окончания шапки табл.
                moveto  % на стеке: x0, y0, y, ind, f_min
                swap 4 string cvs swap  % на стеке: x0, y0, y, (ind), f_min
                f_x % на стеке: x0, y0, y
            }
            {       % Максимальная частота задана печатаем оба значения частоты
                % на стеке: x0, y0, y, ind, x_i, y, f_min, f_max
                4 -1 roll 1.5 mm add    % на стеке: x0, y0, y, ind, y, f_min, f_max, x
                4 -1 roll 2 copy    % на стеке: x0, y0, y, ind, f_min, f_max, x, y, x, y
                moveto  % на стеке: x0, y0, y, ind, f_min, f_max, x, y
                (min) 5 -1 roll % на стеке: x0, y0, y, ind, f_max, x, y, (min), f_min
                f_x
                3.5 mm sub  % на стеке: x0, y0, y, ind, f_max, x, y
                dup 1.5 mm sub Yh min /Yh swap def  % сохранили значение координаты Y
                                    % предположительного окончания шапки табл.
                moveto  % на стеке: x0, y0, y, ind, f_max
                (max) swap f_x pop  % на стеке: x0, y0, y
            } ifelse
        } ifelse

    } for   % на стеке: x0, y0, y
    pop Yh
    
    Times_Regular 8 newsize % Установили шрифт 10 пт.
    % Печатаем строку с номерами жил (пар)
    % Предваретельно определим максимальное число элементарных столбцов (обычно оно равно числу жил в структуре)
    Cols max_el dup 
    1 gt
    {   % Таблица не по жилам значит печатаем строку нумерации жил
        % на стеке: x0, y0, y, col_max
        swap 3.5 mm sub % перенесли строку вывода вниз на 3.5 мм % на стеке: x0, y0, col_max, y
        mark    % Положили на стек метку под ней лежит координата y
        ParamInd_Nach 1 ParamInd_Kon
        {   % Проходим по главным столбцам со второго на стеке: x0, y0, col_max, y, mark, ind
            XCols over get      % на стеке: x0, y0, col_max, y, mark, ind, x_нач главного столбца
            Cols rot get    % получили число элементарных столбцов n, на стеке: x0, y0, col_max, y, mark, x_i, n
            dup 1 gt  
            {   % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, col_max, y, mark, x_i, n
                % Определим как печатать номера элементарных столбцов
                dup counttomark 2 add index swap    % на стеке: x0, y0, col_max, y, mark, x_i, n, col_max, n
                idiv 1 gt   % на стеке: x0, y0, y, mark, x_i, n, (col_max/n > 1)
                {   % Печатаем как для пар на стеке: x0, y0, y, mark, x_i, n
                    1 1 rot
                    {   % на стеке: x0, y0, col_max, y, mark, x_i, ...,xel_i ind_el
                        swap dup Def_col_width add  % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1
                        2 copy % на стеке: x0, col_max, y0, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1
                        counttomark 1 add index % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1, y
                        6 -1 roll   % на стеке: x0, y0, col_max, y, mark, x_i, ..., xel_i, xel_i+1, xel_i, xel_i+1, y, ind_el
                        a-b_center_print
                        graniz_el_cols  % Печатаем отделяющую линию номеров пар 
                    } for
                }
                {   % Печатаем как для жил
                    1 1 rot
                    {   % на стеке: x0, y0, col_max, y, mark, x_i, ...,xel_i ind_el
                        swap dup Def_col_width add  % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1
                        2 copy % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1
                        counttomark 1 add index % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1, y
                        6 -1 roll   % на стеке: x0, y0, col_max, y, mark, x_i, ..., xel_i, xel_i+1, xel_i, xel_i+1, y, ind_el
                        a-b_center_print
%                       4 string cvs center_print   % на стеке: x0, y0, col_max, y, mark, x_i, xel_i+1
                        graniz_el_cols  % Печатаем отделяющую линию номеров жил 
                    } for
                } ifelse                
            }
            {pop pop}   % Удаляем со стека n и x-нач главного столбца
            ifelse
        } for 

        % Сохраняем координаты X елементарных столбцов в массиве
        counttomark array /XCols_el swap def
        counttomark 1 sub -1 0
        { XCols_el swap rot put
        } for
        pop % Удалили метку
        swap pop % Удалили col_max
        % на стеке: x0, y0, y
        1 mm sub Yh min
        /Yh swap def

    }
    {
        pop pop % Удаляем максимальное число элементарных столбцов на стеке: x0, y0
    } ifelse

%   1 mm sub Yh min
%   /Yh swap def
    Yh

    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st_head     
    } for

        Times_Regular 8 newsize % Установили шрифт 10 пт.
    % Рисуем рамку ограничения шапки таблицы ниже на 1 мм
    Rama_Head_Table

    3 mm sub dup    % на стеке: x0, y0, y, y
    /Y1 swap def    % Сохранили в переменную Y1 координату первой строки таблицы

    % Печатаем столбец номеров
    Numbers_Cols_print

    /DataInd_Kon swap def   % Сохранили индекс последнего напечатаного номера (жилы, пары)
    pop % Удалили xr
    2.5 mm add  % Нижняя координата таблицы ниже последней выведенной строки на 1 мм
    dup /Yk swap def    % Сохранили в переменную Yk нижнюю координату таблицы
    dup Yk_min min  /Yk_min swap def    % Сохранили в переменную Yk_min самую нижнюю координату таблицы

    % на стеке: x0, y0
%   Yk  % на стеке: x0, y0, yk
    % Рисуем вертикальные линии отделяющие главные столбцы данных таблицы
    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for

    Rama_Data_Table % Рисуем замыкающую рамку таблицы
    % на стеке: x0, y0, yk

    % Рисуем вертикальные линии разделяющие элементарные столбцы
    Cols max_el
    1 gt
    {
        XCols_el { vline_el_cols } forall
    } if

    % на стеке: x0, y0, yk

    % Печатаем столбцы данных
    ParamInd_Nach 1 ParamInd_Kon
    {       % Проходим по главным столбцам начиная с индекса печатаемого параметра на стеке: x0, y0, yk, ind
                XCols over get          % на стеке: x0, y0, yk, ind, x_нач главного столбца
                Cols 2 index get    % получили число элементарных столбцов n, на стеке: x0, y0, y, ind, x_нач, n
                dup 1 gt
                {       % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, y, ind, x_нач, n
            NormalMax 3 index 1 sub get % на стеке: x0, y0, y, ind, x_нач, n, NormMax
            4 -1 roll   % на стеке: x0, y0, y, x_нач, n, NormMax, ind       
            al_ind_data % на стеке: x0, y0, y, x_нач, n, NormMax, data_ind_el1
            0 1 5 -1 roll 1 sub
            {   % Проходим по элементарным столбцам.
                % на стеке: x0, y0, y, x_нач, NormMax, data_ind_el1, ind_el
                over add    % на стеке: x0, y0, y, x_нач, NormMax, data_ind_el1, data_ind_el
                4 -1 roll   % на стеке: x0, y0, y, NormMax, data_ind_el1, data_ind_el, x_нач
                                dup Def_col_width add   % на стеке: x0, y0, y, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон
                dup 6 1 roll    % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон
                0 5 index   % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон, 0, NormMax
                al_data 6 -1 roll get
                Data_Print  % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1
            } for
            pop pop pop % на стеке: x0, y0, y
                }
                {   % Печатаем данные по главному столбцу
            % на стеке: x0, y0, y, ind, x_нач, n
            pop % на стеке: x0, y0, y, ind, x_нач
            dup Def_col_width_al add    % на стеке: x0, y0, y, ind, x_нач, x_кон
            0 NormalMax 4 index 1 sub get         % на стеке: x0, y0, y, ind, x_нач, x_кон, 0, NormMax
            al_data 6 -1 roll al_ind_data get   % на стеке: x0, y0, y, ind, x_нач, x_кон, 0, NormMax, [данные]
            Data_Print
        }       
                ifelse  % на стеке: x0, y0, yk
    } for

        rot pop swap pop
    XCols ParamInd_Kon 1 add get
    swap    % На стеке: xk, yk  
} def

/Stat_Table_al  % Рисует таблицу статистических данных и норм для рабочего затухания
{   % Печатаем нулевой столбец статистики 
    XCols 0 get dup Def_col_width add Yk    % На стеке: x0, x1, yk
    2.5 mm sub  % Перенесли y в низ на 4 мм
    Times_Italic 8 newsize
    3 copy (max) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    3 copy (Средн.) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    (min) center_print  % стек освобожден

    % Печатаем статистику по параметрам
    Times_Regular 8 newsize
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке индекс параметра
        dup XCols swap get  % на стеке: ind, x-нач
        over 1 add XCols swap get % на стеке: ind, x-нач, x-кон
        Cols 3 index get    % на стеке: ind, x-нач, x-кон, n число элем столбцов
        4 -1 roll al_ind_data   % на стеке: x-нач, x-кон, n число элем столбцов, data_ind_el1
        swap
        0 1 rot 1 sub
        {   % проходим по всем элем. столбцам. на стеке: x-нач, x-кон, data_ind_el1, ind_el
            dup 0 gt
            {   % Не первый элем. столбец на стеке: x-нач, x-кон, data_ind_el1, [данные], ind_el
                2 index add % на стеке: x-нач, x-кон, data_ind_el1, [данные], data_ind_el
                al_data swap get    % на стеке: x-нач, x-кон, data_ind_el1, [данные], [данныеind_el]
                Concat_array    % на стеке:  x-нач, x-кон, data_ind_el1, [Объед. по частоте]
            }
            {       % Первый элем. столбец на стеке: x-нач, x-кон, data_ind_el1, ind_el
                pop
                al_data over get    % на стеке: x-нач, x-кон, data_ind_el1, [данные]
            } ifelse
        } for
        % на стеке: x-нач, x-кон, data_ind_el1, [Объед. по частоте]
        swap pop    % Удалили строку названия параметра на стеке: x-нач, x-кон, [Объед. по частоте]
        dup max_znach dup
        type /nulltype eq
        {   % Максимальное значение не определено
            pop (нет.)
        }
        {
            10 string cvs   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач)
        } ifelse
        Yk 2.5 mm sub dup   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y
        5 index 5 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y, x-нач, x-кон
        rot 5 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
        2.5 mm sub
        over    % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, [Объед. по парам с тек.]
        sred_znach dup
        type /nulltype eq
        {   % Среднее значение не определено
            pop (нет.)
        }
        {
            01percent_format 10 string cvs  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач)
        } ifelse
        4 index 4 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач), x-нач, x-кон
        3 index 4 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
        2.5 mm sub swap
        min_znach dup
        type /nulltype eq
        {   % Минимальное значение не определено
            pop (нет.)
        }
        {
            10 string cvs   % на стеке: x-нач, x-кон, y, (мин_знач)
        } ifelse
        center_print
    } for

    % Отрисовываем разделительные линии главных стоблцов статискики
    Yk dup 8 mm sub
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке yk, y, ind
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for
    /Ys swap def    % Сохранили в переменной Ys координату нижней части таблицы статистики
    pop % Удалили со стека значение yk

    % Рисуем горизотнтальный разделитель для норм
    XCols 0 get dup
    XCols ParamInd_Kon 1 add get
    swap sub dup rot Ys
    newpath moveto 0 rlineto
    0 -2.5 mm rlineto
    neg 0 rlineto
    closepath
    0.3 mm setlinewidth
    stroke
    
    % Подпись нормы
    XCols 0 get 3 mm add Ys 1.8 mm sub
    Times_Regular 6 newsize
    moveto (Нормы(100%)) show

    % Печатаем нулевой столбец норм 
    XCols 0 get dup Def_col_width add Ys    % На стеке: x0, x1, ys
    5 mm sub    % Перенесли y в низ на 7 мм
    Times_Italic 8 newsize
    3 copy (max) center_print

    % Печатаем нормы по параметрам
    Times_Regular 8 newsize
    ParamInd_Nach 1 ParamInd_Kon
    {   % На стеке индекс параметра
        dup XCols swap get  % на стеке ind, x-нач
        over 1 add XCols swap get % на стеке: ind, x-нач, x-кон
        NormalMax 4 -1 roll 1 sub get 10 string cvs % на стеке: x-нач, x-кон, (Норма al max)
        Ys 5 mm sub swap    % на стеке: x-нач, x-кон, y, (Норма al max)
        center_print
    } for

    % Отрисовываем разделительные линии главных стоблцов статискики
    Ys 2.5 mm sub dup 3 mm sub
    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        2 index 2 index
        Vert_gl_st
    } for
    /Yn swap def    % Сохранили в переменной Yn координату нижней части таблицы статистики
    pop % Удалили со стека значение y

    % Рисуем замыкающую рамку таблицы статистики и норм
    XCols 0 get Yk
    2 copy
    newpath
    moveto
    Yn swap sub dup
    0 swap rlineto
    swap XCols ParamInd_Kon 1 add get
    swap sub 0 rlineto
    0 swap neg rlineto
    closepath
    0.3 mm setlinewidth
    stroke
} def

/Print_Table_al
{   % Печатает таблицу рабочего затухания
    % Определим число строк данных выводимой таблицы
%   5 mm dec_bot
    al_data 0 get % на стеке: [al]
    length /Data_count swap def % Сохранили в переменную Data_count число элементов в массиве данных

    Cols    % На стеке: массив столбцов
    % Определим ширину всей таблицы
    Def_col_width swap
    {
        dup
        1 gt
        {   % В текущем столбце существуют элементарные столбцы
            Def_col_width mul   % Определили ширину необходимую для отображения главного столбца
            add
        }
        {   % В текущем столбце нет элементарных столбцов
            pop
            Def_col_width_al add
        } ifelse
    } forall    % Определили ширину необходимую для отображения всей таблицы

    swap pop    % Удалили yk с предыдущего вывода таблицы
    /XNach rot 
    dup pole_left sub abs 0.1 mm ge
    {   % Таблица выводится не по левому полю тогда делаем отступ
        1 mm add
    } if
    def % Попробуем вывести таблицу справа с отступом 5 мм.
    pole_rigth 0.1 add XNach sub    % на стеке: Ширина таблицы, ширина свободной области печати
    gt
    {   % Оставшаяся часть листа меньше ширины таблицы
        /XNach pole_left def    % Таблица выводится по левому краю
        /YNach bot 1 mm sub def
    }
    {   % Таблица может быть выведена справа
        /YNach Y0 def
    } ifelse
    YNach 35 mm sub pole_bot lt
    {   % Таблица выводится в нижней части страницы и для не допускания висячей шапки переносим на др. стр.
        NewPage
        1 mm dec_bot
        /XNach pole_left def    % Таблица выводится по левому краю
        /YNach bot def
    } if

    /ParamInd_Kon 0 def
    {   % Проходим по не напечатанным частям таблицы
        /DataInd_Kon 0 def
        /ParamInd_Nach ParamInd_Kon 1 add def
        Cols ParamInd_Nach Cols length ParamInd_Nach sub getinterval    % На стеке: оставшаяся часть массива столбцов
        % Определим ширину оставшейся части таблицы
        Def_col_width swap
        {
            dup
            1 gt
            {   % В текущем столбце существуют элементарные столбцы
                Def_col_width mul   % Определили ширину необходимую для отображения главного столбца
                add
            }
            {   % В текущем столбце нет элементарных столбцов
                pop
                Def_col_width_al add
            } ifelse
        } forall    % Определили ширину необходимую для отображения оставшейся таблицы

        pole_rigth XNach sub swap div % Определили число раз расположения таблицы K (число колонок)
        floor   % Округлили к меньшему целому 0 таблица целиком не уместится, 1 уместится, K уместится
        % Таблицу можно разместить в одной или более колонках
        bot 35 mm sub pole_bot lt
        {   % Таблица выводится в нижней части страницы и для не допускания висячей шапки переносим на др. стр.
            NewPage
            1 mm dec_bot
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot def
        } if
        % на стеке: K
        {
            /Data_ost Data_count DataInd_Kon sub def
            Data_ost 4 le
            {   % В таблице менее 4 строк данных, то она выводится в одну колонку
                pop 1   % На стеке: 1
            } if
            dup Data_ost ge
            {   % Может быть размещено колонок больше чем выводимых данных
                pop Data_ost
            } if
                
            dup % на стеке: K, K
            % Определим число строк данных в одной колонке
            1 gt
            {   % Более одной колонки
                dup Data_ost swap div ceiling cvi   % На стеке: K, Число строк в колонке из расчета размещения на одной стр.
                /RowCount swap def  % Сохранили в переменную число строк в одной колонке
            }
            {   % Одна и менее колонок
                /RowCount Data_ost def  % Сохранили в переменную число строк в одной колонке
                pop 1
            } ifelse

            % Печатаем таблицу, если она не умещается на текущем листе, то переносим на след. стараницу
            % На стеке: K (число колонок)
            dup
            0 1 rot 1 sub
            {   % Проходим по колонкам
                /DataInd_Nach DataInd_Kon 1 add def % Устанавливаем индекс начала данных печати
                % На стеке: K, ind
                RowCount Data_count DataInd_Kon sub
                le
                {   % Число не отпечатаных строк в таблице больше чем размер столбца
                    /Kolvo RowCount def
                }
                {       % Число строк данных для распечатки меньше чем осталось
                    /Kolvo Data_count DataInd_Kon sub def   % Установили в переменную количества оставшееся
                                        % число строк данных
                } ifelse    % на стеке: K, ind

                                Kolvo 0 ne
                {       % Не все данные отпечатаны
                    0 eq
                    {   % Печатаем первую колонку. на стеке: 
                        XNach YNach
%                       pole_left bot   % Положили на стек координаты начала таблицы
                        Part_Table_al
                        pop     % Удалили yk
                    }
                    {   % Печатаем остальные колонки
                        % на стеке: xk 
%                       bot
                        YNach
                        Part_Table_al
                        pop     % Удалили yk на стеке: xk               
                    } ifelse
                }
                {
                    pop
                    exit
                } ifelse
            } for
            pop % Удалили xk последней таблицы
            DataInd_Kon Data_count lt
            {   % Не все данные отпечатаны
                NewPage
                1 mm dec_bot
                /YNach bot def
            }
            {   % Все данные отпечатаны
                exit
            } ifelse
        } loop
        % Проверяем размещение на текущем листе таблицы статистики
        Yk 19 mm sub pole_bot lt
        {   % Таблица статистики не уместится на текущем листе
            NewPage
            4 mm dec_bot
            XCols ParamInd_Kon 1 add get bot (Окончание таблицы) rigth_print
            1 mm dec_bot
            /Yk bot def
        } if

        Stat_Table_al   % Печатаем таблицу статистики и норм
        /bot Yk_min Yn min def  % Запишем в переменную bot нижнюю границу таблицы норм  
        
        ParamInd_Kon Cols length 1 sub lt  % Сравниваем индекс последнего напечатанного параметра с длиной массива параметров
        {   % Не все параметры напечатаны
            1 mm dec_bot    % Следующая часть параметров выводится ниже на 5 мм
            /YNach bot def
        }
        {   % Все параметры напечатаны
            exit
        } ifelse    
    } loop

    % Ложим на стек xk, yk для дальнейшего использования
    Num_al* type /nulltype ne
    {   % Индекс расчётного параметра установлен
        al*_prim
    } if 
    XCols ParamInd_Kon 1 add get Yn
} def

/Def_col_width_Az 8 mm def  % Ширина столбца в шахматке
/Def_row_height_Az 3.5 mm def   % Высота строки в шахматке

/Horiz_line % Рисуем горизонтальную линию
{
    newpath
    over swap   % на стеке: x0, y0, x1, xk, y, x1, xk, xk, y
    moveto sub 0 rlineto
} def

/Horiz_line_gl_row  % Рисуем горизонтальную линию отделяющую главные строки данных
{
    Horiz_line
    0.3 mm setlinewidth stroke
} def

/Horiz_line_el_row  % Рисуем горизонтальную линию отделяющую элементарные строки данных
{
    Horiz_line
    0.15 mm setlinewidth stroke
} def

/Part_Table_A0z % Печатает таблицу (шахматку) параметров влияния
{   % на стеке: x0, y0

    dup /Y0 swap def
    /XCols pole_rigth pole_left sub Def_col_width_Az div floor cvi 4 mul array def % Массив X-координат границ
                                % главных (ограничивающих разные параметры) столбцов

    over dup XCols 0 rot put % Сохранили x0 в нулевой элемент массива координат
    over    % на стеке x0, y0, x0, y0
    3 mm sub % Строка вывода названий параметров ниже на 3.5 мм (y=y0-3.5mm)

    swap 
    Cols max_el
    1 gt
    {   % Таблица содержит элементарные столбцы и строки значит нулевой столбец шире
        Def_col_width_Az 2 mul
    }
    {
        Def_col_width_Az
    } ifelse
    add % Ширина нулевого столбца определена. на стеке: x0, y0, y, x1
    swap over XCols ParamInd_Nach rot put  % Сохранили в массиве координату дальней границы текущего столбца
    % на стеке: x0, y0, x1, y
    
    % Печатаем номер в углу таблицы
    3 index 2 index 2 index NumNum
    
    Cols ParamInd_Nach Cols length ParamInd_Nach sub getinterval    % На стеке: оставшаяся часть массива столбцов
    summ_el 2 le
    {   % Элементарных столбцов меньше или равно 2
        /Def_col_width_Az 15 mm def
    }
    {
        /Def_col_width_Az 8 mm def
    } ifelse
    
    0
    ParamInd_Nach 1 Cols length 1 sub
    {   
        swap pop
        % на стеке: x0, y0, x1, y, ind
        dup Cols swap get       
        Def_col_width_Az mul    % на стеке: x0, y0, x1, y, ind, dx
        3 index add % на стеке: x0, y0, x1, y, ind, x_i+1
        dup pole_rigth 0.1 add gt
        {   % Очередной столбец не поместится на ширину страницы
            pop 1 sub exit % по выходу на стеке x0, y0, x0, xk, y, индекс последнего напечатаного столбца
        } if
        % на стеке: x0, y0, x1, y, ind, x_i+1
        dup XCols 3 index 1 add rot put % Сохранили в массив координату главного столбца
        % на стеке: x0, y0, x0, x1, y, ind, x_i+1
        4 -1 roll pop   % на стеке: x0, y0, y, ind, x_i+1
        3 1 roll    % на стеке: x0, y0, x_i+1, y, ind
    } for
    /ParamInd_Kon swap def  % на стеке: x0, y0, xk, y

    % Печатаем заголовок таблицы
    XCols ParamInd_Nach get % на стеке: x0, y0, xk, y, x1
    3 1 roll    % на стеке: x0, y0, x1, xk, y
    3 copy  % на стеке: x0, y0, x1, xk, y, x1, xk, y
    ParamNameA0z % на стеке: x0, y0, x1, xk, y, x1, xk, y, (A0)
    (_0) Concat_string  % на стеке: x0, y0, x1, xk, y, x1, xk, y, (A0_0)
    dup % на стеке: x0, y0, x1, xk, y, x1, xk, y, (A0_0), (A0_0)
    cvx exec % zpt
    String_index_width % Вычисляет размер строки с индексом на стеке две строки (a), (b) ->  размер
    % на стеке: x0, y0, x1, xk, y, x1, xk, y, (A0_0), размер
    Times_Regular 10 newsize (, ) stringwidth pop swap add  % на стеке: x0, y0, x1, xk, y, x1, xk, y, (A0_0), размер
    Times_Regular 8 newsize EdIsm_A0z stringwidth pop add
    5 -1 roll 5 -1 roll
    2 copy swap sub 39 mm lt
    {   % Ширина столбцов данных меньше 39 мм выравниваем вправо
        rot sub 1 mm sub
        swap pop
    }
    {   % Ширина столбцов данных больше или равна 39 мм выравниваем по центру
        center  % на стеке: x0, y0, x1, xk, y, y, (A0_0), x
    } ifelse
    rot % на стеке: x0, y0, x1, xk, y, (A0_0), x, y
    Times_Regular 10 newsize
    moveto cvx exec a_b zpt ( ) show Times_Regular 8 newsize EdIsm_A0z show % на стеке: x0, y0, x1, xk, y

    2 index 1 mm add over 0.5 mm add moveto Times_Italic 8 newsize () show % в скобках было приёмник

    % Печатаем значения частот. на стеке: x0, y0, x1, xk, y
    3 mm sub    % на стеке: x0, y0, x1, xk, y
    Freq_min type /nulltype ne
    {   % Минимальная частота задана
        Freq_max type /nulltype eq
        {   % Максимальная частота не задана
            15 mm 3 index 3 index center over   % на стеке: x0, y0, x1, xk, y, x, y
            moveto  % на стеке: x0, y0, x1, xk, y
                        () Freq_min f_x
        }
        {   % Максимальная частота задана
            30 mm 3 index 3 index center over   % на стеке: x0, y0, x1, xk, y, x, y
            moveto  % на стеке: x0, y0, x1, xk, y
            gsave
            1.5 mm 0 rmoveto (min) Freq_min f_x
            grestore
            16.5 mm 0 rmoveto (max) Freq_max f_x
        } ifelse
    } if    % на стеке: x0, y0, x1, xk, y

    % Рисуем горизонтальную линию отделяющую заголовок от номеров структур
    1 mm sub    % на стеке: x0, y0, x1, xk, y
    /Yh1 over def   % Сохранили координату y в переменную Yh1
    3 copy  % на стеке: x0, y0, x1, xk, y, x1, xk, y
    newpath
    over swap   % на стеке: x0, y0, x1, xk, y, x1, xk, xk, y
    moveto sub 0 rlineto
    0.4 mm setlinewidth stroke

    % Печатаем имя стуктуры
    Times_Regular 8 newsize
    3 mm sub    % на стеке: x0, y0, x1, xk, y
    4 index 3 index 2 index
    StructTip center_print
    
    % Печатаем номера структур по горизонтали
    Times_Regular 8 newsize
%   /Puch_Nach PuchNum 1 sub Cols length 1 sub mul def  % Номер нулевого элемента пучка расчитывается 
                        % по номеру пучка  структуры пучка используя размер пучка определённый
                        %  по количеству элементов структуры (главных столбцов)
%   Начало пучка вычисляется во внешней программе
    ParamInd_Nach 1 ParamInd_Kon
    {   % Проходим по главным столбцам
        % на стеке: x0, y0, x1, xk, y, ind
        XCols over get  % на стеке: x0, y0, x1, xk, y, ind, x_i
        XCols 2 index 1 add get % на стеке: x0, y0, x1, xk, y, ind, x_i, x_i+1
        3 index
        4 -1 roll
        Puch_Nach add 
        4 string cvs center_print
    } for
    swap pop swap pop   %  на стеке: x0, y0, y
    1 mm sub dup
    /Yh swap def    % Сохранили в переменную Yh координату нижней границы шапки таблицы


    % Печатаем строку с номерами пар для многопарных структур
    % Предваретельно определим максимальное число элементарных столбцов (обычно оно равно числу жил в структуре)
    Cols max_el dup 
    1 gt
    {   % Таблица содержит элементарные столбцы значит печатаем строку нумерации пар
        % на стеке: x0, y0, y, col_max
        swap 3 mm sub   % перенесли строку вывода вниз на 3.5 мм % на стеке: x0, y0, col_max, y
        mark    % Положили на стек метку под ней лежит координата y
        ParamInd_Nach 1 ParamInd_Kon
        {   % Проходим по главным столбцам со второго на стеке: x0, y0, col_max, y, mark, ind
            XCols over get      % на стеке: x0, y0, col_max, y, mark, ind, x_нач главного столбца
            Cols rot get    % получили число элементарных столбцов n, на стеке: x0, y0, col_max, y, mark, x_i, n
            dup 1 gt  
            {   % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, col_max, y, mark, x_i, n
                % Печатаем как для пар на стеке: x0, y0, y, mark, x_i, n
                1 1 rot
                {   % на стеке: x0, y0, col_max, y, mark, x_i, ...,xel_i ind_el
                    swap dup Def_col_width_Az add   % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1
                    2 copy % на стеке: x0, col_max, y0, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1
                    counttomark 1 add index % на стеке: x0, y0, col_max, y, mark, x_i, ..., ind_el, xel_i, xel_i+1, xel_i, xel_i+1, y
                    6 -1 roll   % на стеке: x0, y0, col_max, y, mark, x_i, ..., xel_i, xel_i+1, xel_i, xel_i+1, y, ind_el
                    a-b_center_print
                    graniz_el_cols  % Печатаем отделяющую линию номеров пар 
                } for               
            }
            {pop pop}   % Удаляем со стека n и x-нач главного столбца
            ifelse
        } for 

        % Сохраняем координаты X элементарных столбцов в массиве
        counttomark array /XCols_el swap def
        counttomark 1 sub -1 0
        { XCols_el swap rot put
        } for
        pop % Удалили метку
        swap pop % Удалили col_max
        % на стеке: x0, y0, y

        % Пишем подпись пары для элементарных пар
        XCols ParamInd_Nach get dup
        XCols 0 get sred swap 2 copy
        4 index Times_Regular 8 newsize (пара) center_print
        swap dup 3 index
        newpath
        1 mm sub moveto 0 4 mm rlineto
        sub 0 rlineto
        0.15 mm setlinewidth stroke

        1 mm sub Yh min
        /Yh swap def    % Сохранили в переменную Yh координату нижней границы шапки таблицы
    }
    {
        pop pop % Удаляем максимальное число элементарных столбцов на стеке: x0, y0
    } ifelse

    % Рисуем вертикальные линии отделяющие главные столбцы в шапке таблицы
    Yh1 Yh
    ParamInd_Nach 1 ParamInd_Kon
    {
        dup ParamInd_Nach eq
        {   % Рисуем отделитель первого главного столбца
            XCols swap get
            3 index 2 index
            Vert_gl_st_head     
        }
        {
            XCols swap get
            2 index 2 index
            Vert_gl_st_head     
        } ifelse
    } for
    swap pop

    % Пишем подпись генератор повёрнуто на 90 градусов
    % на стеке: x0, y0, y
    gsave   % Запомнили состояние графики
    2 index over translate  % Перенесли начало координат в левый нижний угол шапки таблицы
    90 rotate   % Повернули оси координат
    -1 mm -2.5 mm Times_Italic 8 newsize () rigth_print % в скобках было генератор
    grestore    % Восстановили состояние графики
    
    Times_Regular 8 newsize
        
    2.7 mm sub dup  % на стеке: x0, y0, y, y
    /Y1 swap def    % Сохранили в переменную Y1 координату первой строки таблицы
        
    % Определяем разметку строк
    /YRows Cols length array def    % Массив координат Y разделяющих строк данных
    YRows 0 Yh put  % Сохранили в нулевой элемент координату y шапки таблицы

    % Печатаем столбец номеров структур (нулевой столбец)
    Cols max_el 1 gt
    {   % Таблица содержит элементарные строки значит печатаем и столбец нумерации пар
        XCols 0 get
        XCols ParamInd_Nach get
        sred 1 mm sub   % на стеке: x0, y0, y, xr-координата правой границы столбца номеров (жил, пар)
        0   % Ложим на стек ноль, для удаления 
        DataInd_Nach 1 Cols length 1 sub
        {   % Проходим по всем главным строкам
            % на стеке: x0, y0, y, xr, ind_old, ind
            swap pop    % Удалили индекс с предыдущей итерации цикла
            dup Cols swap get   % на стеке: x0, y0, y, xr, ind, n
            1 1 2 index
            {   % на стеке: x0, y0, y, xr, ind, n, ind_el
                4 index % на стеке: x0, y0, y, xr, ind, n, ind_el, y
                over 1 sub Def_row_height_Az mul sub
                XCols ParamInd_Nach get dup XCols 0 get sred swap rot
                            % на стеке: x0, y0, y, xr, ind, n, ind_el, x01, x1, y
                4 -1 roll a-b_center_print
            } for
            % на стеке: x0, y0, y, xr, ind, n
            % Определим координату y вывода номера структуры
            4 -1 roll dup rot 1 sub Def_row_height_Az mul sub
            dup % на стеке: x0, y0, xr, ind, y, y_низ, y_низ
            5 1 roll    % на стеке: x0, y0, y_низ, xr, ind, y, y_низ
            sred
            % на стеке: x0, y0, y_низ, xr, ind, y_сред
            2 index swap    % на стеке: x0, y0, y_низ, xr, ind, xr, y_сред
            2 index 
            Puch_Nach add
            4 string cvs rigth_print % на стеке: x0, y0, y_низ, xr, ind
                
            % Проверим уместится ли следующая главная строка на листе
            dup Cols length 1 sub lt
            {   % Выведена не последняя главная строка
                % на стеке: x0, y0, y_низ, xr, ind
                Cols over 1 add get % на стеке: x0, y0, y_низ, xr, ind, n_i+1
                Def_row_height_Az mul   % на стеке: x0, y0, y_низ, xr, ind, dy
                3 index swap sub 0.8 mm sub
                pole_bot lt
                {   % Следующая главная строка не уместится на текущем листе
                        rot 0.8 mm sub
                    YRows 2 index 2 index put
                    3 1 roll
                    exit    % на стеке: x0, y0, y_низ, xr, ind
                } if
                rot % на стеке: x0, y0, xr, ind, y_низ
                dup YRows 3 index rot 0.8 mm sub put    % Сохраняем в массиве коордунату Y текущей разделительной линии
                Def_row_height_Az sub
                3 1 roll % на стеке: x0, y0, y_низ, xr, ind
            } 
            {   
                rot % на стеке: x0, y0, xr, ind, y_низ
                0.8 mm sub
                dup YRows 3 index rot put   % Сохраняем в массиве коордунату Y текущей разделительной линии
                3 1 roll % на стеке: x0, y0, y_низ, xr, ind
            } ifelse
        } for
        /DataInd_Kon swap def
        pop % на стеке: x0, y0, yi+1
        
        % Сохраняем координаты элементарных строк
        /YRows_el Cols summ_el array def    % Создали массив координат y элементарных строк
        /Row_Ind_el 0 def   % Счетчик элементарной строки

        DataInd_Nach 1 DataInd_Kon
        {   % Проходим по главным строкам. на стеке: ind
            Cols over get   % на стеке: ind, n
            dup 1 gt
            {   % Строка содержит элементарные строки вычислим и сохраним их координаты
                % на стеке: ind, n
                1 sub -1 1 
                {   % на стеке: ind, ind_el
                    YRows 2 index get   % на стеке: ind, ind_el, y_нач
                    swap Def_row_height_Az mul add  % на стеке: ind, y_ел
                    YRows_el Row_Ind_el rot put % Сохранили координату элементарной строки
                    /Row_Ind_el Row_Ind_el 1 add def    % Инкрементировали счётчик елементарной строки
                } for
                pop
            }
            {
                pop pop
            } ifelse
        } for
        /YRows_el YRows_el 0 Row_Ind_el getinterval def % Сохранили массив по количеству не пустых элементов
    }
    {
        XCols ParamInd_Nach get
        1 mm sub    % на стеке: x0, y0, y, xr-координата правой границы столбца номеров (жил, пар)
        0   % Ложим на стек ноль, для удаления 
        DataInd_Nach 1 Cols length 1 sub
        {   % на стеке: x0, y0, y, xr, ind
            swap pop    % Удалили индекс с предыдущей итерации цикла
            over 3 index    % на стеке: x0, y0, y, xr, ind, xr, y
            2 index % на стеке: x0, y0, y, xr, ind, xr, y, ind
            Puch_Nach add
            4 string cvs rigth_print % на стеке: x0, y0, y, xr, ind
            rot dup Def_row_height_Az sub dup 0.8 mm sub % на стеке: x0, y0, xr, ind, yi, yi+1, yi+1 - 1.3mm для сравнения с нижнем полем           
            pole_bot le % на стеке: x0, y0, xr, ind, yi, yi+1
            {   % Вышли за границу нижнего поля
                pop
                0.8 mm sub
                YRows 2 index 2 index put
                3 1 roll    % на стеке: x0, y0, yi, xr, ind
                exit
            } if    % Нижнее поле не достигнуто продолжаем далее
            % на стеке: x0, y0, xr, ind, yi, yi+1
            over YRows 4 index rot 0.8 mm sub put   % Сохраняем в массиве коордунату Y текущей разделительной строки
            2 index Cols length 1 sub lt
            {   % Не последняя главная строка
                % на стеке: x0, y0, xr, ind, yi, yi+1
                swap pop
                3 1 roll    % на стеке: x0, y0, yi+1, xr, ind
            }
            {   % на стеке: x0, y0, xr, ind, yi, yi+1
                pop 0.8 mm sub
                3 1 roll    % на стеке: x0, y0, yi, xr, ind
            } ifelse
        } for
        /DataInd_Kon swap def
        pop % на стеке: x0, y0, yi+1
    } ifelse    % на стеке: x0, y0, yi+1

    % Закрашиваем главную диагональ 30 % серым
    /Diag_box   % Закрашивает прямоугольник размером с элементарную ячейку
    {
        gsave
        newpath moveto
        Def_col_width_Az 0 rlineto
        0 Def_row_height_Az rlineto
        Def_col_width_Az neg 0 rlineto
        closepath
        0.7 setgray fill
        grestore
    } def

    Cols max_el
    1 gt
    {   % С элементарными столбцами
                ParamInd_Nach 1 ParamInd_Kon
        {   % Проходим по столбцам. на стеке: ind_col
            DataInd_Nach 1 DataInd_Kon
            {   % Проходим по строкам. на стеке: ind_col, ind_row
                2 copy eq
                {   % Для равных индексов
                    XCols 2 index get YRows rot get
                    Cols 3 index get 1 sub dup
                    0 1 rot
                    {   % Проходим по элементарным ячейкам
                        % На стеке: ind_col, x_i, y_i, n-1, ind_el
                        dup Def_col_width_Az mul    % На стеке: ind_col, x_i, y_i, n-1, ind_el, dx
                        4 index add % На стеке: ind_col, x_i, y_i, n-1, ind_el, x
                        2 index rot % На стеке: ind_col, x_i, y_i, n-1, x, n-1, ind_el
                        sub Def_row_height_Az mul   % На стеке: ind_col, x_i, y_i, n-1, x, dy
                        3 index add % На стеке: ind_col, x_i, y_i, n-1, x, y
                        Diag_box    % На стеке: ind_col, x_i, y_i, n-1
                    } for
                    pop pop pop
                    exit
                }
                {
                    pop
                } ifelse
            } for
            pop
        } for
    }
    {   % Без элементарных столбцов
        ParamInd_Nach 1 ParamInd_Kon
        {   % Проходим по столбцам. на стеке: ind_col
            DataInd_Nach 1 DataInd_Kon
            {   % Проходим по строкам. на стеке: ind_col, ind_row
                2 copy eq
                {   % Для равных индексов
                    XCols 2 index get YRows rot get
                    Diag_box    % Закрашивает прямоугольник размером с элементарную ячейку
                    exit
                }
                {
                    pop
                } ifelse
            } for
            pop
        } for
    } ifelse

    % Рисуем рамку ограничения шапки таблицы
    2 index 2 index Yh
    Rama_Head_Table pop pop pop
    
    % Рисуем горизонтальные разделительные линии оделяющие главные строки
    Cols max_el 1 gt
    {   % Таблица содержит элементарные строки значит рисуем от середины нулевого столбца
        XCols ParamInd_Nach get
        XCols 0 get sred
    }
    {
        XCols ParamInd_Nach get
    } ifelse
    XCols ParamInd_Kon 1 add get % на стеке: x0, y0, yi+1, x1, xk

    DataInd_Nach 1 DataInd_Kon 1 sub
    {   % на стеке: x0, y0, yi+1, x1, xk, ind
        YRows swap get % на стеке: x0, y0, yi+1, x1, xk, y_i
        2 index 2 index rot Horiz_line_gl_row
    } for

    % Рисуем горизонтальные разделительные линии оделяющие элементарные строки
    Cols max_el 1 gt
    {   % Таблица содержит элементарные строки значит рисуем от середины нулевого столбца
        YRows_el
        {
            2 index 2 index rot Horiz_line_el_row
        } forall
    } if
    pop pop % Удаляем координаты x1, xk

    dup /Yk swap def    % Сохранили в переменную Yk нижнюю координату таблицы

    % на стеке: x0, y0, yk
    % Рисуем вертикальные линии отделяющие главные столбцы данных таблицы
    ParamInd_Nach 1 ParamInd_Kon
    {
        XCols swap get
        Yh 2 index
        Vert_gl_st
    } for

    Rama_Data_Table % Рисуем замыкающую рамку таблицы
    % на стеке: x0, y0, yk

    % Рисуем вертикальные линии разделяющие элементарные столбцы
    Cols max_el
    1 gt
    {
        XCols_el { vline_el_cols } forall
        XCols 0 get XCols ParamInd_Nach get sred vline_el_cols
    } if

    % на стеке: x0, y0, yk
    
    % Рисуем рамку окружающую нулевой столбец
    newpath
    2 index Yh moveto
    XCols ParamInd_Nach get dup Yh lineto
    Yk lineto
    2 index Yk lineto closepath
    0.4 mm setlinewidth stroke

    /Data_Print_PV  % Печатает столбец данных стек оставляет чистым
    {   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные]
        Y1  % На стеке x-нач, x-кон, Norm_min, Norm_max, [Данные], y
        DataInd_Nach 1 DataInd_Kon
        {   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind
            dup Cols swap get   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, n
            0 1 rot 1 sub
            {   % Проходим по элементарным строкам или один раз по главной строке
                % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, ind_el
                over al_ind_data add    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, ind_данных
                3 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, [Данные]
                swap get    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач.
                dup type /stringtype eq
                {   % Значение является строкой печатаем его
                    7 index 7 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон
                    4 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон, y
                    4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, x-нач, x-кон, y, знач.
                    Times_Italic 8 newsize
                    center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind
                }
                {       % Значение не является строкой проверим его на пренадлежность числовому типу
                    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач.
                    dup % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., знач.
                    type dup    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., тип_знач., тип_знач.
                    /integertype eq swap
                    /realtype eq or % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., true-числовое
                    {   % Значение на стеке числовое сравниваем с нормами
                        % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач.
                        dup dup % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., знач., знач.
                        7 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., знач., знач., Norm_min
                        lt  % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., знач., true-если меньше нормы
                        swap 6 index    % % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., true-если меньше нормы, знач., Norm_max
                        gt  % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., true-если меньше нормы, true-если больше нормы
                        or
                        {   % Значение выходит за нормы
                            Times_Bold 8 newsize
                        }           
                        {   % Значение удовлетворяет нормам
                            Times_Regular 8 newsize
                        } ifelse
                        % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач.
                        7 index 7 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон
                        4 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон, y
                        4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, x-нач, x-кон, y, знач.
                        10 string cvs
                        center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind
                    }
                    {   % Значение на стеке не числовое печатаем его тип
                        7 index 7 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон
                        4 index % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, знач., x-нач, x-кон, y
                        4 -1 roll   % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind, x-нач, x-кон, y, знач.
                        type 16 string cvs
                        Times_Italic 8 newsize
                        center_print    % На стеке: x-нач, x-кон, Norm_min, Norm_max, [Данные], y, ind
                    } ifelse
                } ifelse
                swap
                Def_row_height_Az sub   % Уменьшили координату Y на Def_row_height стандартную высоту
                swap
            } for
            pop
        } for
        pop pop pop pop pop pop % Отчистили стек
    } def


    % Печатаем столбцы данных
    ParamInd_Nach 1 ParamInd_Kon
    {       % Проходим по главным столбцам начиная с индекса печатаемого параметра на стеке: x0, y0, yk, ind
                XCols over get          % на стеке: x0, y0, yk, ind, x_нач главного столбца
                Cols 2 index get    % получили число элементарных столбцов n, на стеке: x0, y0, y, ind, x_нач, n
                dup 1 gt
                {       % Главный столбец содежит элементарные столбцы. на стеке: x0, y0, y, ind, x_нач, n
            NormPVMin   % на стеке: x0, y0, y, ind, x_нач, n, NormMax
            4 -1 roll   % на стеке: x0, y0, y, x_нач, n, NormMax, ind       
            al_ind_data % на стеке: x0, y0, y, x_нач, n, NormMax, data_ind_el1
            0 1 5 -1 roll 1 sub
            {   % Проходим по элементарным столбцам.
                % на стеке: x0, y0, y, x_нач, NormMax, data_ind_el1, ind_el
                over add    % на стеке: x0, y0, y, x_нач, NormMax, data_ind_el1, data_ind_el
                4 -1 roll   % на стеке: x0, y0, y, NormMax, data_ind_el1, data_ind_el, x_нач
                                dup Def_col_width_Az add    % на стеке: x0, y0, y, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон
                dup 6 1 roll    % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон
                4 index Inf % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1, data_ind_el, x_нач, x_кон, 0, NormMax
                PV_Data 6 -1 roll get
                Data_Print_PV   % на стеке: x0, y0, y, x_кон, NormMax, data_ind_el1
            } for
            pop pop pop % на стеке: x0, y0, y
                }
                {   % Печатаем данные по главному столбцу
            % на стеке: x0, y0, y, ind, x_нач, n
            pop % на стеке: x0, y0, y, ind, x_нач
            dup Def_col_width_Az add    % на стеке: x0, y0, y, ind, x_нач, x_кон
            NormPVMin Inf         % на стеке: x0, y0, y, ind, x_нач, x_кон, NormMin, NormMax
            PV_Data 6 -1 roll al_ind_data get   % на стеке: x0, y0, y, ind, x_нач, x_кон, NormMin, NormMax, [данные]
            Data_Print_PV
        }       
                ifelse  % на стеке: x0, y0, yk
    } for

        rot pop swap pop
    XCols ParamInd_Kon 1 add get
    swap    % На стеке: xk, yk

    /Def_col_width_Az 8 mm def  % Ширина столбца в шахматке
} def

/Stat_Table_PV  % Рисует таблицу статистических данных и норм для параметров влияния
{   % Печатаем нулевой столбец статистики 
    XCols 0 get XCols ParamInd_Nach get  Yk % На стеке: x0, x1, yk
    2.5 mm sub  % Перенесли y в низ на 4 мм
    Times_Italic 8 newsize
    3 copy (max) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    3 copy (Средн.) center_print
    2.5 mm sub  % Перенесли y в низ на 3 мм
    (min) center_print  % стек освобожден

    % Печатаем статистику по параметрам влияния
    Times_Regular 8 newsize
    XCols ParamInd_Nach get % на стеке: x-нач
    XCols ParamInd_Kon 1 add get    % на стеке: x-нач, x-кон
    0 1 PV_Data length 1 sub
    {   % Проходим по всем столбцам данных параметров влияния. На стеке индекс столбца
            dup 0 gt
        {   % Не первый столбец данных. на стеке: [данные], ind
            PV_Data swap get    % на стеке: [данные], [данные1]
            Concat_array    % на стеке: [Объед. данные]
        }
        {   % Первый столбец данных. на стеке: ind
            PV_Data swap get    % на стеке: [данные]
        } ifelse
    } for   % на стеке: x-нач, x-кон, [Объед. данные]
    dup max_znach dup
    type /nulltype eq
    {   % Максимальное значение не определено
        pop (нет.)
    }
    {
        10 string cvs   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач)
    } ifelse
    Yk 2.5 mm sub dup   % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y
    5 index 5 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], (max_знач), y, y, x-нач, x-кон
    rot 5 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
    2.5 mm sub
    over    % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, [Объед. по парам с тек.]
    sred_znach dup
    type /nulltype eq
    {   % Среднее значение не определено
        pop (нет.)
    }
    {
        01percent_format 10 string cvs  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач)
    } ifelse
    4 index 4 index % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y, (сред_знач), x-нач, x-кон
    3 index 4 -1 roll center_print  % на стеке: x-нач, x-кон, [Объед. по парам с тек.], y
    2.5 mm sub swap
    min_znach dup
    type /nulltype eq
    {   % Минимальное значение не определено
        pop (нет.)
    }
    {
        10 string cvs   % на стеке: x-нач, x-кон, y, (мин_знач)
    } ifelse
    center_print

        % Отрисовываем разделительные линии главных столбцов статискики
    Yk dup 8 mm sub
    % На стеке yk, y
    XCols ParamInd_Nach get
    rot 2 index
    Vert_gl_st
    /Ys swap def    % Сохранили в переменной Ys координату нижней части таблицы статистики

    % Рисуем горизотнтальный разделитель для норм
    XCols 0 get dup
    XCols ParamInd_Kon 1 add get
    swap sub dup rot Ys
    newpath moveto 0 rlineto
    0 -2.5 mm rlineto
    neg 0 rlineto
    closepath
    0.3 mm setlinewidth
    stroke
    
    % Подпись нормы
    XCols 0 get 3 mm add Ys 1.8 mm sub
    Times_Regular 6 newsize
    moveto (Норма(100%)) show

    % Печатаем нулевой столбец норм 
    XCols 0 get dup XCols ParamInd_Nach get Ys  % На стеке: x0, x1, ys
    5 mm sub    % Перенесли y в низ на 7 мм
    Times_Italic 8 newsize
    3 copy (min) center_print

    % Печатаем нормы по параметрам
    Times_Regular 8 newsize
    XCols ParamInd_Nach get % на стеке: x-нач
    XCols ParamInd_Kon 1 add get    % на стеке: x-нач, x-кон
    Ys 5 mm sub % на стеке: x-нач, x-кон, y
    NormPVMin 10 string cvs % на стеке: x-нач, x-кон, y, (Норма Парам. Вл.)
    center_print

    % Отрисовываем разделительные линии главных столбцов норм
    Ys 2.5 mm sub dup 3 mm sub
    XCols ParamInd_Nach get
    rot 2 index
    Vert_gl_st
    /Yn swap def    % Сохранили в переменной Yn координату нижней части таблицы статистики

    % Рисуем замыкающую рамку таблицы статистики и норм
    XCols 0 get Yk
    2 copy
    newpath
    moveto
    Yn swap sub dup
    0 swap rlineto
    swap XCols ParamInd_Kon 1 add get
    swap sub 0 rlineto
    0 swap neg rlineto
    closepath
    0.3 mm setlinewidth
    stroke
} def

/First_Print_Az true def    % Таблица параметров влияния печатается первый раз

/Print_Table_A0z
{   % Размещает и печатает таблицу параметров влияния
    % Определим число строк данных выводимой таблицы
    Cols length 1 sub
    /Data_count swap def % Сохранили в переменную Data_count число элементов в массиве данных
    /ParamInd_Kon 0 def
    {   % Проходим по не напечатанным частям таблицы
        /DataInd_Kon 0 def
        /ParamInd_Nach ParamInd_Kon 1 add def
        Cols ParamInd_Nach Cols length ParamInd_Nach sub getinterval    % На стеке: оставшаяся часть массива столбцов
        % Определим ширину оставшейся части таблицы
        % Определим ширину нулевого столбца
        dup max_el 
        1 gt
        {   % В таблице есть элементарные строки
            Def_col_width_Az 2 mul
        }
        {
            Def_col_width_Az
        } ifelse    % На стеке ширина нулевого столбца
        swap
        {
            dup
            1 gt
            {   % В таблице существуют элементарные столбцы
                Def_col_width_Az mul    % Определили ширину необходимую для отображения главного столбца
                add
            }
            {   % В таблице нет элементарных столбцов
                pop
                Def_col_width_Az add
            } ifelse
        } forall    % Определили ширину необходимую для отображения оставшейся части таблицы

        First_Print_Az
        {   % Таблица параметров влияния печатается впервые. на стеке: Ширина оставшейся части таблицы
            pole_rigth pole_left sub    % на стеке: Ширина оставшейся части таблицы, ширина области печати
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot 1 mm sub def
        }
        {   % Таблица параметров влияния печатается не впервые для текущей структуры кабеля
            3 1 roll    % Временно перемещаем в стеке ширину оставшейся части таблицы
            pop % Удаляем yk предыдущего вывода таблицы
            /XNach swap 1 mm add def    % Попробуем вывести таблицу справа с отступом 1 мм.
            /YNach Y0 def
        } ifelse
        pole_rigth XNach sub    % на стеке: Ширина оставшейся части таблицы, ширина свободной области печати
        gt
        {   % Оставшаяся часть листа или ширина от поля до поля меньше ширины таблицы
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot 1 mm sub def
        } if 
        YNach 49 mm sub pole_bot lt
        {   % Таблица выводится в нижней части страницы и для не допускания висячей шапки переносим на др. стр.
            NewPage
            1 mm dec_bot
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot def
        } if
        % на стеке: 
        {
            % Одна и менее колонок
            % Печатаем таблицу, если она не умещается на текущем листе, то переносим на след. стараницу

            /DataInd_Nach DataInd_Kon 1 add def % Устанавливаем индекс начала данных печати

            % Печатаем первую колонку. на стеке: 
            XNach YNach % Положили на стек координаты начала таблицы
            Part_Table_A0z
            /First_Print_Az false def   % Сбросили флаг первичной печати таблицы параметров влияния
                
            DataInd_Kon Data_count lt
            {   % Не все данные отпечатаны
                NewPage
                1 mm dec_bot
                /XNach pole_left def    % Таблица выводится по левому краю
                /YNach bot def
            }
            {   % Все данные отпечатаны
                exit
            } ifelse
        } loop

        /bot bot Yk min def % Устанавливаем переменную bot равной нижней части таблицы

        
        ParamInd_Kon Cols length 1 sub ge  % Сравниваем индекс последнего напечатанного параметра с длиной массива параметров
        {   % Все столбцы напечатаны
            exit
        } if
    } loop

    % Проверяем размещение на текущем листе таблицы статистики
    Yk 19 mm sub pole_bot lt
    {   % Таблица статистики не уместится на текущем листе
        NewPage
        4 mm dec_bot
        over bot (Окончание таблицы) rigth_print
        1 mm dec_bot
        /Yk bot def
        /Y0 bot def
    } if

        Stat_Table_PV   % Печатаем таблицу статистики и норм
    /bot bot Yn min def % Запишем в переменную bot нижнюю границу таблицы норм

    % Ложим на стек xk, yk для дальнейшего использования
    XCols ParamInd_Kon 1 add get Yn
} def

/Def_row_height_Percent 5 mm def    % Высота строки в таблице процентных оценок

/Part_Table_Percent % Печатает часть таблицы процентных оценок
{   % На стеке: x0, y0
    % Рисуем шапку таблицы процентных оценок

    /XCols 6 array def  % Массив координат X главных столбцов
    XCols 0 3 index put                    % на стеке: x0, y0
    over Freq_max Null_array
    {   % Массив максимальных частот не содержит данных, нулевой столбец 20 мм
        20 mm
    }
    {       % Массив максимальных частот содержит данные, нулевой столбец 35 мм
        35 mm
    } ifelse
    add
    1 1 5
    {   % Проходим по всем главным столбцам. на стеке: x0, y0, x1, ind
        XCols swap 2 index put  % Сохранили в массив координату
        20 mm add
    } for
    pop
    % Пишем текст шапки таблицы
    Times_Regular 10 newsize
    dup 3.5 mm sub  % на стеке: x0, y0, y
    dup dup Def_row_height_Percent sub sred % на стеке: x0, y0, y, y_сред
    XCols 0 get XCols 1 get rot (Параметр) center_print
    dup XCols 1 get XCols 2 get rot (Норма) center_print
    dup Def_row_height_Percent sub
    Times_Italic 10 newsize
    XCols 1 get dup 10 mm add dup 3 1 roll 3 index (min) center_print
    XCols 2 get rot (max) center_print
    Times_Regular 10 newsize
    2.5 sub
    dup XCols 2 get XCols 3 get rot (Единица) center_print
    dup XCols 3 get XCols 4 get rot (Задано,) center_print
    dup XCols 4 get XCols 5 get rot (Измерено,) center_print
    10 sub
        dup XCols 2 get XCols 3 get rot (измерения) center_print
    dup XCols 3 get XCols 4 get rot (%) center_print
    XCols 4 get XCols 5 get rot (%) center_print
    % на стеке: x0, y0

    % Рисуем разделители главных столбцов
    dup Def_row_height_Percent 2 mul sub    % на стеке x0, y0, yk
    XCols
    {
        2 index 2 index % на стеке x0, y0, yk, x, y0, yk
        Vert_gl_st_head  % на стеке x0, y0, yk
    } forall

    % Рисуем рамку шапки таблицы
    newpath
    2 index 2 index moveto  % на стеке x0, y0, yk
    2 copy sub 0 over neg rlineto   % на стеке x0, y0, yk, dy
    XCols 5 get 2 index lineto
    0 swap rlineto  % на стеке x0, y0, yk
    closepath
    0.4 mm setlinewidth stroke  % на стеке x0, y0, yk

    % Рисуем разделитель норм
    2 copy sred % на стеке x0, y0, yk, y-сред
    newpath
    XCols 1 get over moveto
    XCols 2 get over lineto
    0.15 mm setlinewidth stroke % на стеке x0, y0, yk, y-сред
    newpath
    XCols 1 get XCols 2 get sred dup
    rot moveto
    over lineto
    0.15 mm setlinewidth stroke % на стеке x0, y0, yk

    /Yh swap def    % Установили переменную Yh

    Yh dup
    3.7 mm sub  % на стеке: x0, y0, yh, y
    /Y1 swap def    % Сохранили в переменную Y1 координату первой строки таблицы
    
    % Определяем разметку строк

    % Печатаем столбец наименований параметров (нулевой столбец)
    ParamInd_Nach 1 Rows length 1 sub
    {   % проходим по параметрам. на стеке: x0, y0, y, ind
        swap 3.7 mm sub swap
        /ParamInd_Kon over def  % Сохранили индекс последнего напечатанного параметра
        /ParamInd_el_Kon 0 def  % Сбросили индекс последней напечатаной элементарной строки
        Rows over get   % на стеке: x0, y0, y, ind, n
        dup 1 gt
        {   % Параметр содержит элементарные строки определим координату главной строки
            % на стеке: x0, y0, y, ind, n
            2 index 1.3 mm sub % на стеке: x0, y0, y, ind, n, y_el
            2 index ParamInd_Nach eq
            {   % Для первого параметра индекс начала элементарных сторок
                ParamInd_el_Nach
            }
            {   % Для остальных параметров индекс начала элементарных сторок
                0
            } ifelse
            1 4 -1 roll 2 sub
            {   % Проходим по элементарным строкам рисуем разделители
                % на стеке: x0, y0, y, ind, y_el, ind_el
                /ParamInd_el_Kon swap def   % Сохранили индекс элементарной строки
                XCols 1 get XCols 5 get 2 index
                Horiz_line_el_row   % Рисуем горизонтальную линию отделяющую элементарные строки данных
                % на стеке: x0, y0, y, ind, y_el
                dup
                Def_row_height_Percent sub
                dup pole_bot 0.1 sub lt
                {   % Следующая строка не уместится на текущем листе
                    % на стеке: x0, y0, y, ind, y_el, y_el+1
                    pop
                    exit    % на стеке: x0, y0, y, ind, y_el
                }
                {
                    swap pop    % на стеке: x0, y0, y, ind, y_el+1
                    /ParamInd_el_Kon ParamInd_el_Kon 1 add def
                } ifelse
            } for
            dup 1.3 mm add 4 -1 roll sred   % на стеке: x0, y0, ind, y_el+1, y_текста
        }
        {       % на стеке: x0, y0, y, ind, n
            pop
            over    % на стеке: x0, y0, y, ind, y
            1.3 mm sub  % на стеке: x0, y0, y, ind, y_gl
            rot % на стеке: x0, y0, ind, y_gl, y
        } ifelse
        % Печатаем название параметра

        Freq_min 3 index get    % на стеке: x0, y0, ind, y_gl, y, f_min
        dup type /nulltype eq
        {   % Минимальная частота не задана значит печатаем как обычный параметр
            pop % Удалили остатки f_min
            XCols 0 get XCols 1 get rot % на стеке: x0, y0, ind, y_gl, x0, x1, y
            Param 6 -1 roll get cvx exec    % на стеке: x0, y0, y_gl
        }
        {       % Минимальная частота задана проверяем заданность максимальной частоты
            Freq_max 4 index get % на стеке: x0, y0, ind, y_gl, y, f_min, f_max
            XCols 0 get dup 5 mm add dup 
            3 1 roll 5 index
            Param 10 -1 roll get cvx exec (\() show
            4 -1 roll moveto
            dup type /nulltype eq
            {   % Максимальная частота не задана
                pop % Удаляем остатки значение (null) от не заданой f_max
                % на стеке: x0, y0, y_gl, f_min
                () swap % на стеке: x0, y0, y_gl, (), f_min
                f_x % на стеке: x0, y0, y_gl
            }
            {       % Максимальная частота задана печатаем оба значения частоты
                % на стеке: x0, y0, y_gl, f_min, f_max
                (min) rot   % на стеке: x0, y0, y_gl, f_max, (min), f_min
                f_x zpt ( ) show    % на стеке: x0, y0, y_gl, f_max
                (max) swap f_x  % на стеке: x0, y0, y_gl
            } ifelse
            Times_Regular 10 newsize
            (\)) show
        } ifelse

        % Рисуем горизонтальную строку разделителя главных строк
        XCols 0 get XCols 5 get 2 index Horiz_line_gl_row   % на стеке: x0, y0, y_gl
        dup 
                Def_row_height_Percent sub  % на стеке: x0, y0, y_gl, y_gl+1
        pole_bot 0.1 sub lt
        {   % Следующая строка не уместится на текущем листе
            % на стеке: x0, y0, y_gl
            exit    % на стеке: x0, y0, y_gl
        } if        
    } for
    
    /Yk swap def    % Сохранили в Yk координату нижней части таблицы процентной оценки

    % на стеке: x0, y0
    % Рисуем линии разделители главных столбцов
    Yh Yk   % на стеке: x0, y0, yh, yk
    XCols
    {
        2 index 2 index Vert_gl_st
    } forall    % на стеке: x0, y0, yh, yk
    
    XCols 1 get XCols 2 get sred vline_el_cols  % Рисует вертикальную линию разделяющую элементарные столбцы
    % на стеке: x0, y0, yh, yk

    % Рисуем замыкающую рамку таблицы процентных оценок
    newpath
    3 index 2 index moveto
    3 index over lineto
    XCols 5 get dup 2 index lineto
    rot lineto closepath
    0.3 mm setlinewidth stroke
    % на стеке: x0, y0, yk

    /Percent_ind_data   % Определяет индекс первой или единственной строки данных (массива) процентных оценок.
                % в двумерном массиве данных
    {   % На стеке индекс параметра
        dup
        -1
        0 1 4 -1 roll
        {
            Rows swap get add
        } for
        Rows rot get
        1 sub sub
    } def

    /Print_Data_string  % Печатает строку данных таблицы процентных оценок
    {   % На стеке: y, ind
        Percent_Data swap get   % Получили строку данных из массива
        XCols 1 get XCols 2 get % Порочитали координаты границ столбцов
        2 copy sred dup 4 -1 roll   % на стеке: y, [Data], x2, x_ср, x_ср, x1
        swap 5 index 5 index    % на стеке: y, [Data], x2, x_ср, x1, x_ср, y, [Data]
        0 get 10 string cvs center_print    % Напечатали значение Min. на стеке: y, [Data], x2, x_ср
        over 4 index 4 index    % на стеке: y, [Data], x2, x_ср, x2, y, [Data]
        1 get 10 string cvs center_print    % Напечатали значение Max. на стеке: y, [Data], x2
        XCols 3 get dup 3 1 roll    % на стеке: y, [Data], x3, x2, x3
        4 index 4 index 2 get center_print  % Напечатали единицу измерения. на стеке: y, [Data], x3
        XCols 4 get dup 3 1 roll    % на стеке: y, [Data], x4, x3, x4
        4 index 4 index 3 get dup   % на стеке: y, [Data], x4, x3, x4, y, %Зад, %Зад
        6 1 roll                        % на стеке: y, [Data], %Зад, x4, x3, x4, y, %Зад
        10 string cvs center_print  % Напечатали % Заданный. на стеке: y, [Data], %Зад, x4
        XCols 5 get 5 -2 roll   % на стеке: %Зад, x4, x5, y, [Data]
        4 get dup   % на стеке: %Зад, x4, x5, y, %Изм, %Изм
        10 string cvs swap  % на стеке: %Зад, x4, x5, y, (%Изм), %Изм
        5 index % на стеке: %Зад, x4, x5, y, (%Изм), %Изм, %Зад
        lt  % на стеке: %Зад, x4, x5, y, (%Изм), %Зад
        {   % Процент измеренных значений меньше, процента заданых значений печатаем жирным шрифтом и бракуем кабель если %зад не 100% 
            currentfont 5 1 roll
            Times_Bold 10 newsize
            center_print
            setfont
            100 lt
            {   % Заданный процент < 100% бракуем кабель по процентной норме
                /Kab_Goden false def    % Сбросили флаг годности кабеля
            } if
        }
        {
                    center_print    % Напечатали процент измеренных значений
            pop % Удалили заданный процент
        } ifelse
    } def
    
    Y1  % Ложим на стек координату y первой строки
    % Печатаем строки таблицы процентной оценки
    Times_Regular 10 newsize
    ParamInd_Nach 1 ParamInd_Kon
    {   % Проходим по параметрам. на стеке: y, ind
        Rows over get % на стеке: y, ind, n
        over ParamInd_Nach eq
        {   % Печатается первый параметр
            over ParamInd_Kon ne
            {   % Первый параметр не является последним
                                ParamInd_el_Nach 1 rot 1 sub
            }
            {   % Первый параметр также является последним
                            pop
                ParamInd_el_Nach 1 ParamInd_el_Kon
            } ifelse
        }
        {
            over ParamInd_Kon ne
            {   % Печатается не последний параметр
                0 1 rot 1 sub
            }
            {   % Печатается последний параметр
                pop
                0 1 ParamInd_el_Kon
            } ifelse        
        } ifelse
        {   % Проходим по элементарным строкам. на стеке: y, ind, ind_el
            over Percent_ind_data add 2 index swap Print_Data_string
            swap Def_row_height_Percent sub swap
        } for
        pop
    } for
    % на стеке: x0, y0, yk

    Yk over def % Сохранили Yk
    rot pop swap pop    % Удалили со стека x0, y0
    XCols 5 get swap    % на стеке: xk, yk
} def

/Print_Table_Percent    % Размещает и печатает таблицу процентных оценок
{
    /ParamInd_Kon 0 def
    /ParamInd_el_Kon -1 def % Предустанавливаем значения индексов
    {   % Повторяем пока не достигнем конца списка параметров
                % Определим ширину таблицы
                Freq_max Null_array
        {   % Массив максимальных частот не содержит данных, ширина таблицы 100 мм
            100 mm
        }
        {       % Массив максимальных частот содержит данные, ширина таблицы 115 мм
            115 mm
        } ifelse    % На стеке ширина таблицы
        
        swap pop    % Удалили yk с предыдущего вывода таблицы
        /XNach rot 1 mm add def % Попробуем вывести таблицу справа с отступом 5 мм.
        pole_rigth 0.1 add XNach sub    % на стеке: Ширина таблицы, ширина свободной области печати
        gt
        {   % Оставшаяся часть листа меньше ширины таблицы
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot 1 mm sub def
        }
        {   % Таблица может быть выведена справа
            /YNach Y0 def
        } ifelse
        YNach 25.5 mm sub pole_bot lt
        {   % Таблица выводится в нижней части страницы и для не допускания висячей шапки переносим на др. стр.
            NewPage
            1 mm dec_bot
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot def
        } if
        % Определим индексы параметров
        Rows ParamInd_Kon get   % Определим число элементарных строк последней печатаемой главной строки
        1 sub
        ParamInd_el_Kon gt
        {   % Не все элементарные строки напечатаны
            /ParamInd_Nach ParamInd_Kon def % Индекс главного параметра не изменяем
            /ParamInd_el_Nach ParamInd_el_Kon 1 add def % Инкрементируем индекс элементарной строки
        }
        {   % В ранее напечатанном параметре отпечатаны все эл. строки
            /ParamInd_Nach ParamInd_Kon 1 add def   % Инкрементируем индекс главного параметра не изменяем
            /ParamInd_el_Nach 0 def % Сбрасываем индекс элементарной строки
        } ifelse

        XNach YNach Part_Table_Percent

        /bot bot Yk min def % Устанавливаем переменную bot равной нижней части таблицы

        ParamInd_Kon Rows length 1 sub lt  % Сравниваем индекс последнего напечатанного параметра с длиной массива параметров
        {   % Не все параметры отпечатаны
            NewPage
            /XNach pole_left def    % Таблица выводится по левому краю
            /YNach bot def 
        }
        {   % Все параметры напечатаны
            exit
        } ifelse 
    } loop
} def

/Konez  % Печатает завершающее сообщение в протоколе
{
    4 mm dec_bot
    bot 21 mm sub pole_bot lt
    {   % Блок вывода окончания протокола не поместится на текущем листе
        NewPage
        4 mm dec_bot
    } if
    pole_left 10 mm add bot moveto
    Times_Italic 10 newsize
    currentfont
    (Значения измеренных параметров вышедшие за установленные нормы выделены ) show
    Times_Bold 10 newsize
    (жирным ) show setfont (шрифтом.) show

    Times_Regular 10 newsize
%   5 mm dec_bot
%   pole_left bot moveto
%   (По результатам проведённых автоматизированных испытаний на системе САК\226ТВЧ\22652/4\226В1) show
    3.5 mm dec_bot pole_left bot moveto
    (Кабель: ) show currentfont
    ArialMT_Italic 10 newsize % ставим курсив
    CabName show (  ) show 10 CabNameStr_print  % Печатает структуру кабеля. на стеке размер шрифта
        currentfont swap setfont ( ) show (признан) Print_string_perenos
    Kab_Goden
    {   
        (годным) Print_string_perenos
    }
    {   
        currentfont Times_Bold 10 newsize (не годным) Print_string_perenos setfont
    } ifelse
    (в) Print_string_perenos (соответствии) Print_string_perenos (с) Print_string_perenos
    currentfont swap setfont
    DocNum Print_string_perenos setfont (.) show
    
    currentpoint /bot swap def pop
    10 mm dec_bot
    pole_left bot moveto
    Times_Regular 12 newsize
    (Оператор:) show
    Operator dup pole_rigth bot rot rigth_print
    newpath
    stringwidth pop pole_rigth swap sub 0.5 mm sub bot 1 mm sub 2 copy
    moveto -30 mm 0 rlineto 0.3 mm setlinewidth stroke

    Times_Italic 8 newsize
    over 30 mm sub 3 1 roll 2.5 mm sub Today center_print
} def

/Vysokovoltnye_isp  % Выводит результаты высоковольтных испытаний структуры
{
    3.5 mm dec_bot
    bot 12 mm sub pole_bot lt
    {   % Блок вывода результатов высоковольтных испытаний не поместится на текущем листе
        NewPage
        3.5 mm dec_bot
    } if
    pole_left bot moveto
    Times_Regular 10 newsize
    (Испытательное напряжение (постоянный ток) в течение 1 мин, приложенное:) show
    U_gil_gil 0 gt
    {   % Задано значение испытательного напряжения жила-жила
        3 mm dec_bot
        pole_left 10 mm add bot moveto 
        (- между жилами) show
    } if
    (- между жилами и экраном) dup stringwidth pop pole_left 25 mm add add dup
    U_gil_gil 0 gt
    {   % Задано значение испытательного напряжения жила-жила
        bot U_gil_gil 10 string cvs ( В) Concat_string rigth_print
    }
    {
        pop
    } ifelse
    U_gil_ekr 0 gt
    {   % Задано значение испытательного напряжения жила-экран
        3 mm dec_bot
        bot U_gil_ekr 10 string cvs ( В) Concat_string rigth_print
        pole_left 10 mm add bot moveto show
    }
    {
        pop pop
    } ifelse
    Probit_Num length 0 gt
    {   % Существуют пробитые элементы структуры
        3 mm dec_bot
        pole_left bot moveto
        (Пробитые ) show StructTip show ( №№: ) show
        currentfont
        Times_Bold 10 newsize
        Probit_Num length 1 sub
        0 1 2 index
        {   % Печатаем номера пробитых элементов структуры
            Probit_Num over get
            4 string cvs
            swap 2 index lt
            {   % Печатаем не последнюю структуру
                (,)
            }
            {
                (.)
            } ifelse
            Concat_string Print_string_perenos
        } for
        pop
        setfont
    }
    {       % Высоковольтные испытания выдержал
        3 mm dec_bot
        pole_left 5 mm add bot moveto
        (Выдержал) show
    } ifelse
} def

/Strukt_Header  % Пишет заголовок структуры на стеке строка описания структуры
{
    5 mm dec_bot
    bot 50 mm sub pole_bot lt
    {   % Для недопускания висячих заголовков структур
        NewPage
        5 mm dec_bot
    } if
    
    pole_left bot moveto
    Times_Bold 12 newsize
    pole_left bot moveto
    (Параметры по структуре: ) show
    Times_Regular 12 newsize
    14 1.5 div swap
    Zamena_umnog_show
    pop
    2 mm dec_bot

    /Num_al* null def   % Индекс параметра рабочего затухания полученный расчётно
} def

/Svodka_Str % Добавляет сводку по структуре кабеля на стеке n1, n2, n3 соответственно количество номинальное, 
{       % фактическое, годных элементов структуры
    % Сравним число годных и номинальное число элементов структуры
    dup 3 index lt
    {   % число годных элементов структуры меньше номинального, бракуем кабель
        /Kab_Goden false def    % Сбросили флаг годности кабеля
    } if

    3.5 mm dec_bot
    bot 10 mm sub pole_bot lt
    {   % Для не выхода за поля сводки по структурам
        NewPage
        3.5 mm dec_bot
    } if
    Times_Regular 10 newsize
    pole_left bot moveto (Номинальное количество ) show StruktTip show (:) show
    5 mm 0 rmoveto currentpoint     % На стеке: n1, n2, n3, x, y
    5 -1 roll 5 string cvs show % На стеке: n2, n3, x, y
    3 mm dec_bot
    pole_left bot moveto (Фактическое количество ) show StruktTip show (:) show
    3 mm sub 2 copy moveto
    4 -1 roll 5 string cvs show     % На стеке: n3, x, y
    3 mm sub 2 copy moveto
    rot 5 string cvs show     % На стеке: x, y
    swap 5 mm sub swap
    (годных ) StruktTip (:) Concat_string Concat_string rigth_print
    currentpoint /bot swap def pop
} def

/GruppCap   % Добавляет запись о принадлежности к группе по рабочей ёмкости структуры кабеля на стеке (группа)
{
    3.5 mm dec_bot
    bot pole_bot lt
    {   % Для не выхода за поля описания групп рабоей ёмкости
        NewPage
        3.5 mm dec_bot
    } if
    Times_Regular 10 newsize
    pole_left bot moveto (Структура соответствует  ) show show ( группе по рабочей ёмкости.) show
} def

/PrintDCr   % Добавляет запись о соответствии диапазону изменения рабочей ёмкости на стеке: норма, измерен
{
    3.5 mm dec_bot
    bot pole_bot lt
    {   % Для не выхода за поля описания групп рабоей ёмкости
        NewPage
        3.5 mm dec_bot
    } if
    pole_left bot DCr
    Times_Regular 10 newsize
    ( \(Норма: ) show over 10 string cvs show ( ) show CrEdIsm show (\) Измерено: ) show
    dup 10 string cvs 3 1 roll  % на стеке: (измерен), норма, измерен
    lt
    {       % Норма превышена
        currentfont swap
        Times_Bold 10 newsize
        show
        setfont
        /Kab_Goden false def    % Сбросили флаг годности кабеля
    }
    {
        show
    } ifelse
    ( ) show CrEdIsm show (.) show
} def

/?FirstNum  % Проверяет является ли номер на стеке началом пучка по подключению
{       % на стеке: n -> true / false
    FirstNum    % 
    {   % на стеке: n, FirstNum[i]
        over % на стеке: n, FirstNum[i], n
        eq      % на стеке: n
        {   % Элемент найден
            true exit % на стеке: n, true
        } if
    } forall
    dup type    % проверим тип на вершине стека
    /booleantype eq
    {   % выход из цикла по найденному элементу на стеке: n, true
        swap pop    % на стеке: true
    }
    {
        pop false
    } ifelse
} def

/R_iz3_zagl % Пишет заголовок для абсолютного значения комбинационных испытаний
{   % 
    4 mm dec_bot
    bot 10 mm sub pole_bot lt
    {   % Для не выхода за поля
        NewPage
        3.5 mm dec_bot
    } if 
    pole_left bot moveto
    Times_Regular 10 newsize
    (Сопротивление изоляции комбинации за время \() show 
    Time_Riz show
    (\), ) show
    EdIsm_Riz show (:) show
} def

/R_iz4_zagl % Пишет заголовок для времени достижения нормы комбинационных испытаний
{   % 
    4 mm dec_bot
    bot 10 mm sub pole_bot lt
    {   % Для не выхода за поля
        NewPage
        3.5 mm dec_bot
    } if 
    pole_left bot moveto
    Times_Regular 10 newsize
    (Время достижения нормы сопротивления изоляции комбинации \() show 
    Norma_Riz show
    (\), ) show
    EdIsm_Riz show (:) show
} def

/Komb_str   % Выводит в строку 
{
    3.5 mm dec_bot
    bot 10 mm sub pole_bot lt
    {   % Для не выхода за поля
        NewPage
        3.5 mm dec_bot
    } if
    pole_left 5 mm add bot moveto
    Times_Regular 10 newsize
    (Пучок №) show PuchNum show
    3 mm dec_bot
    NormRizMin NormRizMax   
    Times_Regular 8 newsize
    pole_left bot moveto
    0 1 Riz1 length 1 sub
    {   % Проходим по элементам данных на стеке: Norm_min, Norm_max, ind
        currentpoint pop 18 mm add pole_rigth gt
        {   % Очередной элемент не уместится на строке
            3 mm dec_bot
            pole_left bot moveto
            bot pole_bot lt
            {   % Для не выхода за поля
                NewPage
                3 mm dec_bot
                pole_left bot moveto
            } if
        } if
        dup (Кмб.) show 1 add 3 string cvs show ( = ) show
        Riz1 swap get % на стеке значение сопротивления изоляции
                dup type /stringtype eq
        {   % Значение является строкой печатаем его
            show
        }
        {   % Значение не является строкой проверим его на пренадлежность числовому типу
            % На стеке: Norm_min, Norm_max, знач.
            dup % На стеке: Norm_min, Norm_max, знач., знач.
            type dup    % На стеке: Norm_min, Norm_max, знач., тип_знач., тип_знач.
            /integertype eq swap
            /realtype eq or % На стеке: Norm_min, Norm_max, знач., true-числовое
            {   % Значение на стеке числовое сравниваем с нормами
                % На стеке: Norm_min, Norm_max, знач.
                dup abs dup % На стеке: Norm_min, Norm_max, знач., знач., знач.
                4 index % На стеке: Norm_min, Norm_max, знач., знач., знач., Norm_min
                lt  % На стеке: Norm_min, Norm_max, знач., знач., true-если меньше нормы
                swap 3 index    % % На стеке: Norm_min, Norm_max, знач., true-если меньше нормы, знач., Norm_max
                gt  % На стеке: Norm_min, Norm_max, знач., true-если меньше нормы, true-если больше нормы
                or
                {   % Значение выходит за нормы
                    Times_Bold 8 newsize
                }
                {   % Значение удовлетворяет нормам
                    Times_Regular 8 newsize
                } ifelse
                % На стеке: Norm_min, Norm_max, знач.
                ExpStr 10 string cvs
                show    % На стеке: Norm_min, Norm_max
            }
            {   % Значение на стеке не числовое печатаем его тип
                type 16 string cvs
                Times_Italic 8 newsize
                show    % На стеке: Norm_min, Norm_max

            } ifelse
        } ifelse
        Times_Regular 8 newsize
        (; ) show
    } for
    pop pop
} def

/Print_Riz_str_Norm % Печатает норму для строчной записи сопротивления изоляции
{   % На стеке параметр Tiz_0 или Riz_0
    3 mm dec_bot
    bot pole_bot lt
    {   % Для не выхода за поля
        NewPage
        3 mm dec_bot
    } if
    pole_left bot moveto
    Times_Regular 8 newsize
    (Норма(100%) ) show
    Times_Italic 10 newsize
    dup cvx exec  
    a_b
    Times_Italic 8 newsize
    /Riz_0 eq
    {   % Для сопротивления изоляции
        (min = ) show NormRizMin
    }
    {   % Для времени достижения
        (max = ) show NormRizMax
    } ifelse
    Times_Regular 8 newsize
    10 string cvs show
    ( ) show EdIsm_Riz show
    2 mm dec_bot
    pole_left bot  /Y0 bot def
} def

/RowHeigth 3.5 mm def

/Print_U_Obol   % Печатает строку об испытании оболочки кабеля на пробой
{
    4 mm dec_bot
    bot 7 mm sub pole_bot lt
    {   % Блок вывода об испытании оболочки кабеля на пробой не поместится на текущем листе
        NewPage
        3.5 mm dec_bot
    } if
    pole_left bot moveto
    Times_Regular 10 newsize
    (Кабель испытан в процессе производства на герметичность оболочки на аппарате сухого испытания ) Print_string_perenos
    (напряжением: ) U_Obol Concat_string ( кВ.) Concat_string
    Print_string_perenos
} def

/Print_Pizb % Печатает строку об избыточном давлении газа
{
    4 mm dec_bot
    bot 7 mm sub pole_bot lt
    {   % Блок вывода избыточного давления не поместится на текущем листе
        NewPage
        3.5 mm dec_bot
    } if
    pole_left bot moveto
    Times_Regular 10 newsize
    (Кабель имеет избыточное давление воздуха ) show Norm_Pizb show kgs-cm^2
    (: )  show P_izb show kgs-cm^2 (. ) show (Дата подачи воздуха: ) PizbData Concat_string
    Print_string_perenos
} def


%---------------------------------------------------------------------------------------------------
% Первая страница протокола
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'CLEAR.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
(СП ОАО \253Андижанкабель\273) dup print flush
/Times-Roman findfont 14 scalefont setfont 
Times_Bold 4 mm newsize
10 mm 280 mm moveto show
save
/RawData currentfile /ASCIIHexDecode filter def
/Data RawData << >> /DCTDecode filter def
2 mm 265 mm translate
78 40 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 321
     /Height 140
     /ImageMatrix [ 321 0 0 -140 0 140 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  restore
} exec

FFD8FFE000104A46494600010101007800780000FFDB00430002010102010102
02020202020202030503030303030604040305070607070706070708090B0908
080A0807070A0D0A0A0B0C0C0C0C07090E0F0D0C0E0B0C0C0CFFDB0043010202
02030303060303060C0807080C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CFFC0
001108008C014103012200021101031101FFC4001F0000010501010101010100
000000000000000102030405060708090A0BFFC400B510000201030302040305
0504040000017D01020300041105122131410613516107227114328191A10823
42B1C11552D1F02433627282090A161718191A25262728292A3435363738393A
434445464748494A535455565758595A636465666768696A737475767778797A
838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7
B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1
F2F3F4F5F6F7F8F9FAFFC4001F01000301010101010101010100000000000001
02030405060708090A0BFFC400B5110002010204040304070504040001027700
0102031104052131061241510761711322328108144291A1B1C109233352F015
6272D10A162434E125F11718191A262728292A35363738393A43444546474849
4A535455565758595A636465666768696A737475767778797A82838485868788
898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4
C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE2E3E4E5E6E7E8E9EAF2F3F4F5F6F7F8F9
FAFFDA000C03010002110311003F00FDFCA28A2803F981FF0083D5BFE529BE01
FF00B255A77FE9DF58AFCF1F09FF00C132BF692F1EF8574DD7742FD9EFE386B5
A26B56915FE9FA858781754B9B5BFB79503C53452A405248DD19595D490C0820
906BF43BFE0F56FF0094A6F807FEC9569DFF00A77D62BF7FBFE093BFF28B2FD9
A7FEC95785FF00F4D16B401FC81FFC358FED4DFB0E7FC5ADFF008597FB407C1F
FF00845FFE651FF848757F0FFF0064FDA3FD2BFE3CBCC8FC9F37CEF3BEE0DFE6
EFE7764FD5FF00053FE0ED9FDB4BE15F8AAE350D77C61E0FF8956735A35BA699
E24F0AD9C16B03974613AB69CB69379802B280D2347891B28582B2FF0059B5F2
07C74FF8203FEC6DFB447F65FF00C241FB3DFC3FD3FF00B1FCDF23FE118B797C
2FE679BB3779DFD98F6FE7E3CB5DBE6EFD997DBB77BEE00F803F633FF83D5FE1
C78DBFB3B49F8E9F0C7C41E05D424FB05A4BAF786275D634A795F29797735B49
E5DCDADBC6DB6458A237B294675CB322F9BFA9DFB21FFC14A3E02FEDE9A74337
C23F8ABE0FF1A5E4D6935FB6936F79E46B36D6F14E2DDE69B4F9825DC31890A0
0F2C4A18491904AC885BF287F6A0FF008323FC03AA785566F82FF193C61A1EB7
696974E6D3C6B6B6DAADAEA971B14DAC7E7DA476CF671EF0E2493CAB938914AA
650AC9F923FB667FC106FF006ACFD85FFB46F3C61F08FC41AA78674EFB7CCDE2
4F0C28D734A16767832DF4CF6DBA4B3B7319122B5E240C50392A0C720400FECF
28AFE50BFE09D1FF00075C7ED1DFB177D9F45F1F5D7FC2FCF04C5BBFD17C4F7E
F1EBD6D9FB43FEE756DB24ADBA69A32DF6B4B9C4702451792391FBDDFF0004BC
FF0082ED7C05FF0082A2F85744B3F0EF89B4FF000AFC52BCB447D43C05AC5CF9
5A9DBDC6C9DE58ED1DD517508D52DA597CCB6DC561F2DA64819BCB500FB3E8A2
8A0028A2BF247FE0AA7FF0768FC23FD8EB51D4BC19F056CF4FF8DDE3B8ED1197
59B3D4A36F08E9AF3412B213750B33DEC913FD999E083646CB2BA7DAA3963745
00FD6EAF903F6CCFF82F2FECA7FB0BFF0068D9F8C3E2E787F54F1369DF6F85BC
37E1863AE6AA2F2CF025B1992DB74767706422355BC7814B8705808E429FCC8F
EDD7FF0005A5FDA8FF00E0AEFE2AB5F08F88BC41A83689E22BB82C34FF00879E
0AB49AD74CD42E247B61143F664692E2FA47B88229234B99272933B792230DB6
BD43F616FF00835A3F6ACFDB0358D16F3C49E13FF8533E09D4332DC6B3E30C5B
DFC5125D2C12A26960FDB3ED1B7CD9234B84B78A458B3E7209236600FB3FF6BC
FF0083DC3559F519AC7E027C1BD3ED6CE1BB85E1D6BC7F74F3C9796FE41F3A36
D3ACA4410C827202C82F650638C9281A4C47F007C7EFF83973F6D2FDA0F4EF10
E9B75F19B50F0AE89E20BB370B63E15D32CF46934B4F3C4C905B5EC310BF8E34
DAA99372D23C60AC8F2067DDFAFF00FB21FF00C1983F017E10EA30EA5F173C71
E30F8C5796D7733AE9F6F1FF00C235A35CDBBC011239A286496ECC91C85E5124
579106223528555FCCFD0EFD973FE0957FB38FEC5BFD8737C33F82FF000FFC37
AB786BED1FD9BAEFF6525E6BD6DE7F9A25FF008995C79978DB966923F9A6388D
BCB184014007F207FF00194DFF000540FF00A380FDA23FE107FF00B0BF8BBFE1
1FFB5FFDFEFB3F9DF66FF67CCFB3F7D9C73FF14BFE09EDF1F7E077812FBC53E3
6F81FF00183C1FE19D2FCBFB66AFADF83751D3EC2D3CC91628FCC9E685634DD2
3A20DC4659D40E4815FDCE57C01FF07477FCA0A3E39FFDC03FF520D32803E00F
F8318FFE6E8BFEE54FFDCD57EFF57E00FF00C18C7FF3745FF72A7FEE6ABF7FA8
00A28A2800A28A2800A28A2800A28A2800A28A2800A28A2800A28A2800A28A28
00A28A2800A28A2800A28A2803F981FF0083D5BFE529BE01FF00B255A77FE9DF
58AF00FD957FE0E6EFDAF7F64ED1FC17A0E99E38F0FF00893C13E03D2A1D134D
F0BEB7E18B1360D6705AFD9ADE2926B68E0BC6F29446C185C06668D77970595B
FA0EFF0082A07ED77FB01FC02F8FBA3E8FFB54693F0BEFBE215CF87E1BCD3E4F
127C359BC4B7434B6B9B94882DC258DC048FCF8EE888F7820966DA37E4FCC1E2
5FDAEFFE08C9FB4A69D1F812EB49F81FA6C7E27BBB6B25B9B3F86BA8784E485C
CF194275486C6D9ECE3DE177C8678E311EF1237965C100F8BFE16FFC1ECFF1F7
48F1DD8DC78DBE147C1FF1078663F33ED961A226A3A3DFDC663611F977535CDD
471ED90A31DD03EE55651B4B075FB03F668FF83D5FE07FC40FB25AFC52F863F1
03E1BEA179AAA5A7DA34A9E0F116956566DE58FB5DC4BFE8D7236334A5E286D6
66D918286466F2D7A0FF008701FF00C1317F6E8FF8A4BE0EF8BBC3F67E26D3BF
E26F74FF000E3E2A26B9AA9B34FDD38921BA9EFA35B7F3278773889583888090
062AFF003FFED47FF06437FC87350F82BF1C3FE7DFFB1B40F1B693FF005C967F
B46A9687FEBB489B2C3FE79C67F8A6A00FD8EFD90FFE0A51F017F6F4D3A19BE1
1FC55F07F8D2F26B49AFDB49B7BCF2359B6B78A716EF34DA7CC12EE18C485007
96250C248C8256442DEE15FC697EDE3FF0402FDA8FFE09F5A8DECDE26F873A87
8BBC2963693DFC9E2CF064536B5A3456F0411CD7134ECB1ACD671C42420BDDC5
08630CA50BA217AF40FF00827EFF00C1CE3FB51FEC43E2A45D77C63A87C6AF06
DD5D89F50D17C717D36A374433C1E6B5AEA2E5AEADE4F2A1648D59A5B7433492
1B77739A00FDEEFF0082977FC1B75FB38FFC146FFB5BC41FD83FF0ABFE26EA1E
75C7FC257E15852DFEDB74FF006993CCBFB3C082EF7DC5C79B2C988EEA5F2913
ED28A2BF9F1FF82A9FFC1BCDF1EBFE0961A76A5E2CD62CF4FF001D7C27B5BB48
23F18E84DFBBB5134F2C56EB7D6ADFBEB591C245B98092DD64B98625B8924600
FF0041DFF04D1FF83917F671FF00828DFF0064E81FDBDFF0ABFE26EA1E4DBFFC
229E2A992DFEDB74FF00668FCBB0BCE20BBDF7171E5451E63BA97CA77FB3228A
FBFE803F981FF82437FC1D93F11FF644FB17827F682FF8483E2FFC398FED92AE
BBE6B5F78CB4F964C491279F733AC7796E24122EC9D96541719598C70476E7F6
FF00F6B2FF0082E8FECE3FB237EC6DE10F8E3A8F8CBFE12EF097C44DBFF08959
F86912EB55F12619567F26DE578B67D9B27ED1E7B45E43AF94FB666489FE30FF
0082D2FF00C1A9FE01FDA63C2BE20F88DFB38E93A7FC3FF8A56B6903C5E0FB04
B6D3BC2FE211023ABC7144A8A965792A794164575B7678479888D34B74BFCE0F
C7EF803E32FD96BE32F887E1EFC42F0F6A1E15F197856ECD96A7A65E28125BBE
03290CA4A491BA32BA4885A39237474664656201F57FFC1573FE0BE7F1C7FE0A
B3AC4BA6EB7A87FC207F0CA2F362B7F05787EF278EC2F223742789F5162DFE9F
711F976E03BAA44AD0078A1859E4DDF4FF00FC1347FE0D08F8C9FB4CFF0064F8
A7E3A6A1FF000A5FC1371E4DD7F646C5BAF156A5037D9A5DBE467CAB0F321927
4DD705A782687125990735FA01FF0006A3FECD1FB23EA3FB2C5AFC48F85F69FF
000937C6DD3FECD1F8CAEFC5515B5C6BDE0DD45AD1E0921B00A83ECBA7DC6EBB
68A58F2F3C72BC734AEF034307EB778B3C59A5F80BC2BA96BBAEEA5A7E8BA268
B692DFEA1A85FDC25B5AD85BC485E59A595C848E3445666762028049200A00F9
FF00FE09FBFF000498F80BFF0004CBF0AA59FC29F02E9FA6EB72DA0B4D43C4F7
FF00E9BAFEAC0A4025F36EDC6F58E47B68A56B787CBB71202C912135F4857E40
FF00C14BBFE0EF7F837FB337F6B785BE05E9FF00F0BA3C6D6FE75AFF006BEF6B
5F0AE9B3AFDA62DDE7E3CDBFF2E68E07DB6E1609E19B31DE02315F863FB5E7FC
159FF6A3FF0082A7FC429B42F1578EBC61AE59F8D2EE1D32CBC03E19F3ADB46B
A2D7A66B4B38F4DB738BA912778D6279C4D70C6384191D910800FEA37F6CCFF8
2F2FECA7FB0BFF0068D9F8C3E2E787F54F1369DF6F85BC37E1863AE6AA2F2CF0
25B1992DB74767706422355BC7814B8705808E429F9E1F1AFF00E0F82F00E85E
2AB787E1CFC03F1878AB446B4579EEFC49E23B6F0FDD4771BDC346B0410DEA34
6104644865524B30D802866FCE0FD90FFE0D71FDB03F6B4D3A1D4A7F0369FF00
0A744BBB49AE2DEFBC7F7ADA5492BC73884C0D651C735FC3237CEEA66B648DA3
8CB07C3C7BFF004BFE05FF00C190DF0B3C3FFDA9FF000B33E387C40F1779DE57
F66FFC231A4DA7877EC98DFE6F9DF6837FE76ECC7B76F95B363E77EE1B003E3F
FF0088D5BF6A6FFA107F67FF00FC11EAFF00FCB3AF943F6D0FF8380FF6A8FDBD
3E19F8C3C09F103E2069F37C3DF1A5DA5C5DF86AC3C39A75B5ADB24776977041
14E20376238A48A2DA5E769184603BBE58B7ECFF008B3FE0967FF0481FD9AFC2
BA9697E35F117C2FBBD6FC01692DA6BC2FFE2E5E49AFCD7166856E7CDB0B3BE4
76BC2F1BEEB7B7B7526425122076A0D0FF0087967FC11B7FE85CFD9FFF00F0C4
DCFF00F2A6803E7FFF008318FF00E6E8BFEE54FF00DCD57EFF0057C81FF04A4F
DA5BF636FDA23FE13DFF008649D37E1FE9FF00D8FF00D9FF00F095FF00C231E0
497C2FE679BF6AFB1F9DBED2DFCFC79775B71BF665FEEEFF009BEBFA0028A28A
0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A
0028A28A0028A28A00FE607FE0F56FF94A6F807FEC9569DFFA77D62B80F84FFF
000696FED35F1C7F658F0CFC56F0B7883E0FEA9A7F8C3C2B6BE2CD2345FEDBBD
8355BB8AE6D12EA0B5FDE59ADB25C32BAA7CF3AC41CF3285CBD77FFF0007AB7F
CA537C03FF0064AB4EFF00D3BEB15FBFDFF049DFF94597ECD3FF0064ABC2FF00
FA68B5A00FE54BE35FFC1BC5FB697C01F0ADBEB1AEFECFFE30BFB3B9BB5B248F
C373D9F896E83B23B82D6FA74D71324788D8191904609552C19D41C0F829FF00
057AFDB03F607F155C787742F8C7F143C3379E14B46F0ABF86FC49336A96BA02
5BBA466D174DD456586D6484C0B100B124910568C1552CA7FB4CAF2FFDA83F62
9F847FB6A7855747F8B1F0E7C1FE3EB386D2EACAD24D634C8E7BAD312E915273
6970479D6B23848CF9903A480C71B060C8A4007E28FEC55FF07B3FFC842CFF00
68CF851FF3D26B1D5BE1C27FD7111DBC9637D73FF5F0ED70B77FF3C9041F7A4A
FB7FE297EC53FB06FF00C1C75E04BEF1A787350F0FF883C4D1F97F6CF16F8367
1A3F8B34ECC8B0C7FDA104D1798DBE3D3DA187FB46D9F10ABB41B4307AF983FE
0A2FFF0006657813E24FDA35FF00D9A3C57FF0AE7566DBFF0014A789EE6E350D
065FF8F78FF7379892F2DB0AB732B7982EFCC924445F21071F8A3F11FE00FED2
FF00F0459FDA7FC31AF7883C3DE30F83BF10B41BBFB6787F590A92DADDBA4513
4A2DAEA3325A5EC623B948E78D1E58F1334332FCCC9401EFFF00F0553FF836C7
E3D7FC136B51D4B5DD1F4DD43E2FFC27B1B44BB93C5FA1699B24D3C082596E3E
DD60B24B35AC70882566B825EDC46D096956473127B7FF00C121BFE0EC9F88FF
00B227D8BC13FB417FC241F17FE1CC7F6C9575DF35AFBC65A7CB2624893CFB99
D63BCB712091764ECB2A0B8CACC63823B73EA1FB397FC1E9DE32F0A7EC8FE2AD
2FE25FC3ED3FC55F1A34EB482DFC23AD69D08B3D1B567F2D63927D5E112878E4
47569C8B30B1CE64F2952CC2894FE60FEC4FFF0004EAF8DBFF00056FF8CBE338
3E16F84F4FD5752D36D2EFC43AD5C4505B689A358BB896586D504691DADBC973
2A986DEDE3548C1C9C450432C91007F679F007E3F7837F6A5F835E1EF885F0F7
C43A7F8ABC1BE2AB4179A66A766C4C770992AC0AB00F1C88EAC8F1B85923911D
1D55D5947CC1FF000575FF00821C7C23FF0082BE78574E9FC56DA8784FE21786
ED26B6D0FC5DA3C719BA89192431DB5DC6E31756693B89BCADD1C8A448229A1F
3A52FF00CD0FFC133FFE0B05F1EBFE08B3F196FB42D2BFB40F852DFC41BFC69F
0E35E83ECF1DDDC421EDAE233E64666D3EF140DA648C29F32DE01324C9088ABF
ACDFD85BF6E9F871FF000517FD9C745F8A1F0BF5AFED5F0FEAB986E2DE6558EF
F45BC55532D8DE4419BCAB88F72E57255959244692292391803F923FF8C8EFF8
3747FE0A39FF0042AFC40F0AFF00BF73A0F8D34795FF00E01F6AD3EE3CAFF624
8E48BFE585CDBFEEBAFF00F82987FC171FF686FF0082CB7C42B1F07AA6A1E1DF
06EAB77FD97A37C39F0849752C7ADBCD7A925AA5E2292FA95E074B544CA2C624
855A1821791F77F47DFF0005C7FF008245697FF057CFD91D7C2906A3A7F86FE2
1784EEDB58F08EB97368924715C18D924B2B890234C9677036799E49CAC90DBC
A565F2444FFCC17EC87FB437C50FF820F7FC14BA1D77C45F0F74F1E38F875773
693AFF00867C43691348F6F3205985B5CED90DBC9240E1A1BDB62C1A39011E7D
BCD2472807DDDFF04A3FF83423C77FB48E8F178C7F692D43C41F087C33379525
87862C12DDBC49AB412DA9904D2BB9923D3B6492420C534324E4C7708F15B908
EDFA5FF16BF6A9FF00827BFF00C1BA3A7368FA0F877C1FA27C42B1B492C1B42F
085847AD78DA7B79E7B6BA786F2F2690CD1C644F0DC225FDD461E2854421FCA4
41F981FF000553FF0083BBBE287ED1FA8EA5E14FD9CE3D43E12FC3DBAB44824D
72F2DA2FF84BAFCBC12A5C289164961B18F32AEC6B726E15AD9255B88F79893F
1C6803F67BF6E9FF0083CD7E327C51D635AD23E03F853C3FF0BBC332621B0D6F
57B65D63C487CBBA6717015C9B183CD80468F6EF0DCF965A52B3B128C9F983FB
4BFF00C140FE38FED91F6B8FE297C59F881E38D3EF3557D6FF00B2F55D6E79B4
AB5BC6F3079B6F65BBECD6FB5669511618D16347288157E5AF1FA2800A28A280
3F7FBFE0C63FF9BA2FFB953FF7355FBFD5F803FF000631FF00CDD17FDCA9FF00
B9AAFDFEA0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28
A0028A28A0028A28A0028A28A0028A28A00FE747FE0EEBFD88BE347ED29FF052
4F04EBBF0E7E10FC50F1FE8969F0D6C2C27D43C37E15BED56D61B85D53557685
A5822745902491B14272048A718619FCB1FF008784FED4DF013FE285FF0085E1
FB40782FFE10BFF8917FC23DFF000996AFA77F617D97F71F63FB379CBE4793B3
CBF2B6AECD9B70318AFE8FBFE0B57FF07217FC39F3F6A7D03E19FF00C299FF00
8589FDB9E15B7F13FF00697FC25BFD91E479B77796DE4795F629F763EC9BB7EF
19F331B46DC9F8FF00FE239CFF00AB5DFF00CC91FF00DEBA00F883F668FF0083
ACFF006C9FD9DFEC96FA8F8D7C3FF14349D3F4A4D2AD6C3C65A1C571E5ECF2C2
5CBDD5A9B7BC9EE02C654C93CF26FF0035D9C3B90EBFA7FF00B0B7FC1E6BF06F
E28E8FA2E91F1E3C29E20F85DE269330DFEB7A45B36B1E1B3E5DAAB9B82A84DF
41E6CE2444B7486E7CB0D1169D81764F0FB9FF008289FF00C11D7F6DCF1559E9
FE3CFD9FF50F84B67A0DA4F716BA9A784DFC3D6B76EEF0A98245F0DDD3CD3484
0DC8678CC68125C3A33ED93CFF00E3F7FC1A59E1EF8D5F0F7C43E3BFD8CBF686
F07FC68D134BBB36D0E8579A9595D49BE2B212CD6C357B2736B25E3CAD0EC8A5
82DA358EE90C93284DF2007F45DF0B7E2CF857E38F812C7C53E09F13787FC61E
19D53CCFB1EAFA26A30EA16177E5C8D149E5CF0B346FB644743B49C32303C822
B9FF00DAABE16FC38F8D1FB38F8D3C37F17AC7C3FA87C32D434A99BC489ADCCB
6F61059C4BE6BDC493165F23C9D82513874685A25915D19030FE38FE05FED2FF
00B477FC10DFF6C9D52C74BBBF107C3BF1B7847558A3F13F84F5095DB4AD73CA
57D90DF5BA388AEEDDE1B891A29558FC97026B7954B24B5F7F7FC149FF00E0EB
5FF86E8FF82540F857A1F85FC41E07F8BBE35FB3E9BE3BBCB4F93443A72991AE
974EB84BA172BF6A68EDD1E19E27416F71750B3CBF2CAE01F963F1FAD7C1BF1A
BF6B8F10DAFC04F04F8C34BF06F8A3C406DBC17E17BC9CEAFACEC9A4096F6C3C
B52F248EEC02440CD228748CCD70EA6693FAEDFF008228FF00C128F41FF824BF
EC6DA5F837CAF0FEA5F11B5BC5FF008DBC49A6DBC8BFDB379BA43142AF293235
BDAC7279310C46AD8926F2A2927941FC80FF008332BFE09D1FF0B2BE3B78AFF6
97F105BEED27E1CF9BE18F0A7EF3FD6EB1736E3ED93FC93061E458CEB1EC9626
8E4FED3DCAC1EDF8FE8FA803F147FE0EFBFF008267FC23D73F660BEFDA696FB4
FF0005FC58D0EEF4FD1E55431C6BF1052595204B6910B297BCB7837CC9320693
ECF692C6EAF1C713DBFE487FC10BFF00E0B37AF7FC11E7F68EBFD4A4D27FE124
F865E3CFB2DA78CF478638C5FBC5034BE45DD9CAD8C5C41E7CC444EC22996474
728C639E1D0FF83867FE0AA76FFF00054FFDBCEF358F0A6A5A85D7C27F02DA0D
0BC1D1CF14F6AB749C3DD6A06DE4918249713E407D9148D6F059ACB1AC91903D
03FE0A7FFF0006EEF89BFE09B5FF0004D1F84DF1835ED574FB7F1C5F5DCD61F1
1343BAF11DA3C7A7DC5CB97D361D323F2A33712470248B7691CD3912299220D6
F1CB2A007F47BFB6F7FC159FE02FFC13F3E01687F11BE2078EB4F9344F185A3D
DF84E0D13FE26975E2E02DBED0BF6158894923746880B8774B7537106F9504A8
4FF227FF00053AFF0082826BDFF053BFDB27C51F17BC41E1FF000FF85E6D6FCA
B5B3D334AB68D7ECB6702F976E97170A8B25E5C08C287B897E66C05511429143
1F87EB3E2CD57C47A769367A86A5A85F59E8368D61A6417170F2C7A75BB4F2DC
3430AB12238CCF3CF2945C0324D236373B139F40051451400515F487FC13F7FE
0931F1EBFE0A69E2A4B3F853E05D4352D122BB169A8789EFFF00D0B40D248780
4BE6DDB8D8D24697314AD6F0F99706325922702BA0FF0082BFFF00C12B755FF8
2447C7DF06FC39D77C61A7F8CB5BF11782ACBC53A84F6160F6B6BA7DC4D73776
F2DA44CEE5E78D1ED18ACEC91170E33146462803E4FA28A2803F7FBFE0C63FF9
BA2FFB953FF7355FBFD5F803FF000631FF00CDD17FDCA9FF00B9AAFDFEA0028A
28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A
28A0028A28A0028A28A00FE607FE0F56FF0094A6F807FEC9569DFF00A77D62BE
B0FD88BFE0D14FD9B7F694FD8BFE10FC46D77C6DF1C2D35BF1FF0082B46F126A
10586B1A5C76B0DC5E58C3712A44AFA73BAC61E460A19D88006589E4FC9FFF00
07AB7FCA537C03FF0064AB4EFF00D3BEB15FABFF00F0482FF82D37ECA7AB7EC0
BF08FC1375F1DBE1FF0086FC4DF0DFE1FF0087344D7ACFC4F7C7C3BF67BC8B4E
8E1962864BF5863BAD924122B35BB48ABF21240742C01F9A1FB507FC193FF173
E1E7855750F84FF16BC1FF00132F2DAD2EAE2EF4CD634C93C35753BC68AD0416
8C25BA8659263E62E6792DE34223CB956668FF003C7C5DF0B7F6ACFF00821BFE
D1DA76A5A858FC40F81BE36E16CF52B5987D835C8A36B5BA92DD6E2167B3D46D
D59AD4CD06E9A2DDB5254C82B5FD9E7C2DF8B3E15F8E3E04B1F14F827C4DE1FF
0018786754F33EC7ABE89A8C3A8585DF97234527973C2CD1BED911D0ED270C8C
0F208ACFF8FDF007C1BFB52FC1AF10FC3DF885E1ED3FC55E0DF155A1B2D4F4CB
C5263B84C8652194878E4475574910AC91C888E8CAEAAC003F007F64FF00F82E
07C05FF82C5FC1ABBF81BFF0504D17C1FA27888DA45A6F843E2759E99F6492DE
59CDAC524A6E02C834BBC69E28AE1E7511D84B1A3A4D1C5144239FF1C7E2C7C0
CFF8467F6A7F137C33F02EA9FF000B43FB3FC5775E18F0F6A5A15B7DA3FE12DD
976F6D6D3DA450BCBBFED38468D23793779AA159F209FD0EFF0083867FE0DE6D
57FE09A3E2ABCF8A9F0AECF50D6BE00EB57604B1167B9BAF01DC4AE152D6E5CE
5E4B37760905CB92412B0CC4C86296E7CC3FE0D8AFD973FE1A83FE0B25F0BFED
9A1FF6E787FE1DFDA7C6DAB7FA6FD97FB3FEC511FB0DCF1223C9B353974EFDDA
6EDDBBE7468849800FEA37FE09AFFB21DBFEC17FB067C2AF8470C3A7C379E0BF
0FC16FAB3585D4F736B73AA4999F509E279C090C72DE4B712A82AA1448004450
117E31FF0083AE3FE0A2FF00F0C5DFF04E3BAF00E8B71E578DBE3E7DA7C316BF
BBDDF66D1D513FB5A7F9E19226DD0CD15A6C2D1C83FB43CD8DB301C7E9F57F22
5FF07477ED7B6FFB5A7FC1607C73069B369F77A27C29B4B7F0058DC5BDACF6F2
4AF66D2CB7AB3094FCD247A85CDF421D156368E18CAEE1FBC700F882DBE00F8C
AEBE015E7C525F0F6A03E1ED8F8820F0ACBAEBA84B56D526B69AE92D23248324
82081E470818461A2DE57CE8B7FA07C79FF828AFC5CFDA4BF660F859F073C57E
2CD42FBE1EFC20B492DF43D30CF232CCED2CCD1CF72CEEC6592082616900E23B
7B7896389137CAD27F45DAD7EC67E15FF825BFFC1AA1F103C03F1534EF0FC3AB
49F0FF0051BEF10F99A2C33EEF146A64FD82397C833ACF716B7D3E9F691DE6E6
03EC504A1A2445F2FF00961A0028A28A002BF6BBFE08CDFF000699F8CBE32F8A
AC7C73FB54683A87837E1EB5A477BA7F8561D645A6BFAACDBECE7885EC491486
DECE481EEA2963F3ADEF639131B62C6E3F407FC1B1DFF06F3695F0F7C2BE0EFD
A8BE3459E9FAD78935AB4B6D7FE1E7874B25CDAE876F2A2CD6DAB5CE32925E3A
3249047C8B605646CDC1516BFB9D401CFF00C2DF84FE15F81DE04B1F0B7827C3
3E1FF07F8674BF33EC7A4689A743A7D85A799234B2797042AB1A6E91DDCED032
CEC4F249AFE687FE0F56FF0094A6F807FEC9569DFF00A77D62BFA7EAFE607FE0
F56FF94A6F807FEC9569DFFA77D62803F2068A28A00FD1FF00F824FF00C59F15
7C0EFF008231FF00C141BC53E09F137883C1FE26D2FF00E15CFD8F57D13519B4
FBFB4F335CBA8A4F2E7859644DD1BBA1DA4655D81E0915FB1FFF00068A7ED0BE
3EFDA53FE09B7E36D77E2378E3C61E3FD6ED3E255FD841A8789359B9D56EA1B7
5D2F4A7585659DDDD630F248C101C03231C658E7F143FE09E1FF002828FF0082
8AFF00DD35FF00D482E2B3FF00E097FF00B5DFEDF9F00BE016B1A3FECAFA4FC5
0BEF87B73E209AF35093C37F0D61F12DA8D51ADAD9250D70F6370524F223B526
3DE00055B68DF9201F6FFF00C1DD7FB6EFC68FD9AFFE0A49E09D0BE1CFC5EF8A
1E00D12EFE1AD85FCFA7F86FC557DA55ACD70DAA6AA8D334504A88D2148E352E
46488D4670A31FA9FF00F071E7C59F157C0EFF008231FC64F14F827C4DE20F07
F89B4BFEC4FB1EAFA26A3369F7F69E66B9A7C527973C2CB226E8DDD0ED232AEC
0F048AFE5CBFE0A81F1C7F697F8FBF1F747D63F6A8B2F1858FC42B6F0FC367A7
C7E24F09A786AE8E96B7372F115B74B7B70F1F9F25D0126C2490CBB8ECC0FE93
7FE0EC0F8A5A0FC3FF00F82257C46D2757BEFB1EA1E38D5744D13448BC9924FB
6DE26A76F7ED1655484C5AD8DD49B9CAAFEEB6E7732AB007E20FEC55E08FF829
D7FC144BE166A1E36F83BF13BF680F1878674BD564D12EAF3FE171BE9FE55E47
0C333C5E5DD6A3148711DC42DB82953BF00E4103D7FF00E0839FB5C7ED35FF00
0FF0F007C21F8BDF18BE306B9FD87AAF89744F12786F5BF1C5EEAF61F6CB2D23
530F14886E24826F2AE210430DCBBA35652700D7E807FC1953FF0028B2F1F7FD
955D47FF004D1A3D7E7FFF00C134FF00E5724F11FF00D955F88FFF00A4DAED00
73FF00F071E7FC1427E3EFC0EFF82CE7C64F0B7827E387C60F07F8674BFEC4FB
1E91A278CB51D3EC2D3CCD0F4F964F2E086658D3748EEE7681967627924D7ED7
FF00C1C33FF0553B8FF82587EC1979AC785352D3ED7E2C78EAEC685E0E8E78A0
BA6B57E1EEB5036F248A5E3B783203EC9635B89ECD658DA39083FCF8FF00C1D1
DFF29D7F8E7FF700FF00D47F4CAF40FDBDFF00697F157FC1CB5FF05ABF06FC38
F04DDFF67F80975597C29E0F92296696187478A596E2FBC40F6D74F00FB44B6B
13DCB42AB0C8D15B5B5B9DF2441DC03BFF00F837C7E397C7DFF82947C53FDA53
E0EF8A7E337C40F1A7FC269F003C51A56916BE32F16EA3A8E9567A8DD4D61670
5CBA48F2ECDBF68606448D9C23B800E4839FA0F8FF00F6B0FF008357BF6D0F84
3E1DF893E3CD43C59F07756B437175A06897DA86ADE17B8D2E5BE6FED182C61B
C5B5862D52138B9061D855EE6032398EE258DF43FE0CA9FF0094A6F8FBFEC956
A3FF00A77D1EBED0FF0083D82DBE17CFFB23FC256F105E6A16BF1621F105E3F8
362B7B29678EF2C3CB857558E67F352186304E9EE242B2CC648E38E3411C93CB
1807CDFF00F075FF00FC1427E2A7C28FDBEBE1B7FC29DF8E1F103C35E09F12FC
2AD2F5DB5FF8437C657767A56ABE7EA3AA6CBC4FB2CCB14BE642B0E2519DC8A9
824015EA1FF07397FC152BE2E789FF006F3F86FF00B27FECE3E32F18785BC576
977649AD49E1BD724D0EEB56D6F54F2934ED35AE310958E38268A52CB706DE43
A82F9815ED415FC51FDABFF690F88FFB48F873E0F4BF112CFCB87C13F0FED3C1
FE13BFFECD6B3FED6D0EC6FAFA3B7933C473F95219ED3CE8C007EC7B5F74CB2B
B7DBFF00F0434F8EBA0FEDC7FF000710687F16FE3F78BBC3FA7F883C43AAEA1E
20D26CF57B492F6C357D725430E9BA5DB497123FD97ECFE6ABD9991DCA369F6D
047FBD788800FDCEFF00837A7FE097FE3EFF00824D7EC5FE27F873F11B57F07E
B5ADEB5E35BAF12413F86EEAE6E6D52DE5B1B0B754669E085C481ED642404230
57E624903F203FE0E6AFF82D17C5C97FE0A5DAD7C37F847F163C61E05F06FC25
B48B4599BC19E2C92D23D635491127BD9677B431BF990BBA599825790432594A
4796F2CA95FD1F7ED0BF1AF4BFD9AFE0178E3E236BB6FA85DE89E01F0FDFF893
5082C23492EA6B7B3B692E254895D911A4291B050CEA09232C0723F952FF0082
19F86BE1EFEDA1FF000504F8BDF10BF69AF8B5E1FF000169FE21F0AF897FB4B5
DBFF001468DE1B9B55D63C450CFA7DC7950DC801F36B7DA94C3C88BCB8658EDF
7E159629403F6BBFE0D56FDBE355FDB63FE09A3FD97E30F126A1E26F885F0C7C
4179A3EAF7DAC7889F57D6754B7B8737B697B71E6E668E322796D63DECE1869C
FB5B831C7F387FC1E53FB58FC54FD97FFE19C7FE159FC4BF881F0EFF00B73FE1
26FED2FF008463C4377A47F68795FD91E579DF67913CCD9E6C9B77676F98F8C6
E39F83FF00E0D56FDA9EE3F630FF0082C0FF00C2B7D7B56D3E2D13E295A5E783
2F9A2F14407465D520633D95C23C4D25ADF48F2C1259DBB46E439D4C98A460FB
24FAC3FE0F9CFF009B5DFF00B9AFFF0070B401FB1DFF0004CAF166ABE3DFF826
DFECF9AEEBBA96A1AD6B7AD7C35F0E5FEA1A85FDC3DCDD5FDC4BA5DB3CB34B2B
92F248EECCCCEC49624924935FCE8FFC3C27E3EFFC448FFF00082FFC2F0F8C1F
F084FF00C34AFF00617FC23DFF000996A3FD95FD9DFF00094791F63FB379DE57
D9FC9FDDF95B766CF9718E2B3FF67AFF0082837FC1583C17F00BC0FA3FC39D03
E384DF0F749F0FD859F8624B0F8316F7F6AFA5C76D1A5A18AE0E98E668CC0232
B21762E30DB9B393F30FEC45E26F1978D3FE0B95F08758F88D1EA10FC42D5BE3
AE8D79E278EFEC0585D26A92788217BB12DB84410C82732068C2284395DAB8C0
00FED328A28A0028A28A0028A28A00FC71FF008385BFE0DE9F8D1FF0565FDB43
C31F11BE1CF89FE17E8BA268BE0AB5F0DCF0789351BEB6BA7B88AFAFEE19D560
B3990C652EA300970721BE500027F343E3A7FC1A1BFB64FC24FECBFEC0D17E1F
FC50FED0F37CFF00F8463C4F15BFF666CD9B7CEFED35B3CF99BDB6F95E663CA7
DDB329BBFABDA2803F883F1AFC2DFDA6BFE092FF0014E69352B1F8C1F00FC4DA
8FDB7448F54B39AF743FED98ADE688DCC56D7B032C7796E2416EE5A192489B30
B8241463FABDFF0004A3FF0083C535EF0FEB117847F6B4B7FEDED267F2A2B3F1
CF87F478E2BFB495EE8F98FA8DA4252292DD219461ECE259516D40F26E5E52E9
FD0778B3C27A5F8F7C2BA9685AEE99A7EB5A26B5692D86A1A7DFDBA5CDADFDBC
A852586589C14923746656460430241041AFE707FE0E19FF0083656DFF0064BF
0ADE7C6DFD9BB45D426F869A4DA07F1678405CCF7F75E1848D006D4ADA4959E6
9ACC81BA7576692DCEE9416B72E2D403FA2EFF008A57E3DFC2CFF997FC69E09F
1A695FF4C751D2B5DD3AEA1FF81453DBCD0BFF00B48E8FDC1AFCF0FF008215FF
00C10E2E3FE0925FB4FF00ED21AA4CDA7EBDE14F115DE97A5FC3ED76FE381B5F
6D2D2292EAF1253182238CCF3DBC0D8319B8934C3298224F233F007FC1A23FF0
588B7F857E2A93F657F88DAC69F61E1DF125DCDA8F80B53D4B509C341AA4CF12
BE891AB6E8523B83E64F080611F68332FEFA5BB8D57FA2EA00E3FF00685F8D7A
5FECD7F00BC71F11B5DB7D42EF44F00F87EFFC49A841611A497535BD9DB49712
A44AEC88D2148D8286750491960391FC31F84FE275BDF7C7DD37C67F11B4FD43
E2559CDE208B5AF13D8DFEB13C175E2A437226BB8A5BD1BA6492E0798AD38DD2
03217E5857F5FBFF00070EFC6BD57E017FC1173F680D7747B7D3EE6F2FBC3F1F
86E44BC8DDE316FAADE5BE9770E02B29F3160BC959092409150B2B282A7F8D2A
00FE83BFE0F08FF828ADBF8F7F647FD9FF00C0DF0EFC59A7DE7837E33DA378FF
00528EDE79EDB50BFD2D23B67D25A6B72E8EB6770F713CA12E21CB4DA7C65763
DBB8AFE7C6BA0F197C52D7BE207873C27A4EAF7DF6CD3FC0FA549A268917931C
7F62B37BEBBBF68B2AA0BE6EAFAEA4DCE59BF7BB73B555579FA002BF47FF00E0
D98FF8251D9FFC14B3F6E1935BF16C5E6FC32F835F62F106B96ED6F6B750EB77
8D3E6CB4B9E2989CDBCFE45CBCA7CA915A2B69223E5B4F1C8BF9C15FD86FFC1B
61FB21DBFEC83FF047EF8570343A7AEB7F122D0F8FF57B8B3BA9E78EF1F52549
6D188940F2E44D3D6C21748D4462481C8DE4991C03EEFA28A2800AFE607FE0F5
6FF94A6F807FEC9569DFFA77D62BFA7EAFE607FE0F56FF0094A6F807FEC9569D
FF00A77D62803F2068A28A00FBFF00FE09E1FF002828FF00828AFF00DD35FF00
D482E2BF5FFF00E0CA9FF945978FBFECAAEA3FFA68D1EBE3FF00F8341BF65CF0
27EDA5F027F6BFF867F13343FF008493C13E25FF008433FB4B4DFB6DC59FDA7C
8B8D5AE62FDEDBC91CABB668636F95C676E0E4120FEEF7EC55FB057C27FF0082
76FC2CD43C13F077C29FF087F86754D564D6EEACFF00B4EF350F36F2486185E5
F32EA5964198EDE15DA1828D9903249201FCF0FF00C1EADFF294DF00FF00D92A
D3BFF4EFAC57A87FC1E39FF0540D2FE2A78D34AFD95F43D1F5086F3E1AF8820F
1278A750BEB5458E7B8934A8DF4F4B2952762D1F91A95D79C25854F9890EC62A
1B77EC77EDABFF000466FD9B3FE0A25F14F4FF001B7C62F86FFF00098789B4BD
2A3D12D6F3FE120D534FF2ACE39A69922F2ED6E628CE24B899B7152C77E09C00
07E00FFC1613E16E83F1C7FE0ED16F04F8A6C7FB53C33E30F881E02D1357B3F3
A483ED7677361A2C33C5E646CB226E8DD977232B0CE410706803DC3FE089BFF0
72A7ECDBFF0004CBFF0082757837E14F897E1EFC5097C65A6DDEA37FE20D43C3
7A1696D6BAB5C4F7B33C5334B25EC32CD22DA7D9612F2202040A809445AF883F
644FF82A07807E017FC17DF56FDAA358D1FC6173F0F6FBC6BE2CF1247A7D9DAD
B3EB22DF5587524B743134EB0F98A6F22DE04C400AFB59B033FD077FC42E3FB0
9FFD10DFFCBCFC41FF00C9D5F901FF00075AFF00C12E3E04FF00C135FF00E142
FF00C294F02FFC217FF09A7FC243FDB3FF0013AD4352FB67D97FB2FC8FF8FB9E
5D9B7ED137DCDB9DFCE70B800F00FF0083A3BFE53AFF001CFF00EE01FF00A8FE
995FADFF00F0688FFC12B2DFF670FD9824FDA33C57A6EA16BF10BE2D5A4D65A1
C73CB3C2B61E1AF36278C9B778D0799773DB8B81266556B75B368993CC943FD9
FF00B51FFC1057F64FFDB4BE3B6B9F133E267C29FF008493C6DE25FB3FF696A5
FF000936B167F69F22DE2B68BF756F771C4BB618635F950676E4E4924FD5FE13
F09E97E02F0AE9BA1685A669FA2E89A2DA4561A7E9F616E96D6B616F12048A18
A2401238D1155551400A0000002803F991FF00832A7FE529BE3EFF00B255A8FF
00E9DF47AF00FF008293FED01E2AFF0083807FE0B5634CF870BFDA5A7F88355B
7F02780375B4C61B7D1E0964C6A13F976AB7296ECCF77A84A6589E4B78A69158
B2C031FD26FECADFF0441FD98FF621F15788B5DF853F0EF50F04EB7E2AF0FDCF
85F50D42C3C5FAD9BA36170F13CA914AF78CF6F26F862659A1293214051D4D1F
B21FFC10EBF657FD843E32C3F10BE16FC25D3FC3BE32B4B49ACAD753B8D6351D
564B24980590C2B79713243232650C918593CB9244DDB2475600FC11FF0083BF
7E16E83F03BF6FAF837E09F0B58FF65F867C1FF05744D1348B3F3A49FEC9676D
A8EAD0C1179923348FB63455DCECCC719249C9AE83FE0ED3FD8ABFE1873FE0A3
9E0FF8E9F0FF0050FF00845FFE170799AEC7FD933FD8AF348F10E9AF6FF69BC8
3C88A3F27CDF3ACEE04A24799EE9AEE462B94CFEEF7EDABFF0466FD9B3FE0A25
F14F4FF1B7C62F86FF00F098789B4BD2A3D12D6F3FE120D534FF002ACE39A699
22F2ED6E628CE24B899B7152C77E09C0007A07EDABFB057C27FF0082897C2CD3
FC13F18BC29FF09878674BD563D6ED6CFF00B4EF34FF002AF238668525F32D65
8A4388EE265DA58A9DF923201001F883FF0005D8FF0082DF59FEDAFF00F041AF
81B168375F61F137C74D55A1F1C5858DBDABD9D94BA10864D42C5C34D34D6BBE
FE7D32EED973E6BDAEC6919049B24F943F62FF00F8354BF692FDB7BF660F07FC
56D0B5CF85FE15D13C6D68F7FA7E9FE28BCD52C75316FE6BA4533C4961227973
222CD13ABB0786589C1C357EE77FC42E3FB09FFD10DFFCBCFC41FF00C9D5F6FF
00C27F85BA0FC0EF859E19F04F85AC7FB2FC33E0FD2AD744D22CFCE927FB259D
B4290C1179923348FB63455DCECCC719249C9A00FE38FF006F1FF82727C71FF8
20E7ED4FF0D6F3C45A9F87CF89A3FB378C3C2DE24F0F473DF6951DE59DDE5630
F796B1472DC4124504924251D552E202D912015F777FC1D8DFB50697FB6A7EC8
FF00B0B7C58D1D74F86CFC7DE1FF00106B125A59EA29A8C7A65C491E866E2C8C
EAAA1E4B79FCD81F2AA4490B865460547EE77EDCFF00F04B8F813FF0528FF845
FF00E175F817FE134FF842FED7FD8DFF0013AD434DFB1FDABC8F3FFE3D278B7E
EFB3C3F7F7636718CB6780F889FF000415FD93FE2BFC09F873F0CFC41F0A7EDF
E09F84DFDA7FF08A69BFF0936B117F657F68DC2DCDE7EF52ED6597CC9955BF7A
EFB7185DA38A00EFFF00E093BFF28B2FD9A7FEC95785FF00F4D16B5FCC17FCED
35FF007755FF00BB757F5BBF09FE16E83F03BE167867C13E16B1FECBF0CF83F4
AB5D1348B3F3A49FEC9676D0A43045E648CD23ED8D15773B331C6492726BE60F
F870AFEC9FFF000D4FFF000BAFFE154FFC5CDFF84AFF00E136FED9FF00849B58
FF0090C7DAFEDBF69F23ED7E47FC7C7CFE5F97E5FF000ECDBF2D007D7F451450
0145145001451450014514500159FE2CF09E97E3DF0AEA5A16BBA669FAD689AD
5A4B61A869F7F6E9736B7F6F2A14961962705248DD199591810C0904106B428A
00FE28FF006F5FD9EF5EFF00823E7FC155FC57E11F096BDFF136F83FE2BB3D6F
C29AB37977B3411620D4B4B967124091497090CB6DE6AF95E5195640032609FE
CB3F67AF8D7A5FED29F00BC0FF0011B42B7D42D344F1F787EC3C49A7C17F1A47
750DBDE5B4771124AA8CE8B204914305760083862393FCD0FF00C1E7BE13D2FC
39FF00055EF0BDE69FA669F6379AF7C35D36FF00539EDEDD229351B85D4353B7
59A66500C9208208220ED92238635CED4503F67FFE0D97F166ABE34FF821CFC0
8BCD6352D4356BC86D356B08E7BCB879E44B7B6D6AFEDEDE10CC4911C5045144
883848E345501540001E61FF0007797C74FF008549FF00046DD6BC3FFD97FDA1
FF000B43C57A3F863CFF00B4F95FD99E54AFAB79FB76379B9FECCF2B66531E7E
FDC766C6FC10FD86FE00F837C73FF048CFDB9BE216B1E1ED3F52F197802D3C0D
65E1CD4EE14C9268C97FAFEDBC30A93B164912DA243201E608CC88AC125955FF
006BFF00E0F56FF94597807FECAAE9DFFA68D62BF203FE09E1FF002828FF0082
8AFF00DD35FF00D482E2803E00A28A2800AFBFFF00E228DFDBB3FE8B97FE599E
1FFF00E41AF8028A00FBFF00FE228DFDBB3FE8B97FE599E1FF00FE41A3FE228D
FDBB3FE8B97FE599E1FF00FE41AF8028A00FE9FBFE0DD0D53C49FF000572FD90
3C7BF163E3C7C46F8C1E24F1B27C40B9D1239F44F88BAEF84EC20B3834AD29A3
8A3B0D1EEED2CE3F9A5918B24219D9D998B139AF8BFF00E0F20FD8F7C0FF00B3
5F8ABF67DD77C343C6177ADF8AAD35EB0D4B50F1278CF59F135D4D6F66FA73DB
42B2EA57570F1471BDEDD3048CA8267624138C7DA1FF000654FF00CA2CBC7DFF
00655751FF00D3468F5E3FFF0007A27C2DD7BE38FC53FD8DFC13E16B1FED4F13
78C355F10E89A459F9D1C1F6BBCB99B428608BCC919634DD23AAEE765519C920
64D007E787FC1B8BFF00047DD2BFE0AC1FB5C6AEDE39FED05F84FF000C2D2DF5
4F11C5673A4326B171348CB67A617122CD1473886E5DE6895888ED5E30D0C934
52AFED7FED55FF000408FF0082757EC6FF00B38F8D3E2978DBE0BFD8FC33E07D
2A6D56F36F8E35B8E6BAD8BFBBB683CED4A38DAE2690A43146CEBE64B2C680E5
857D7DFF0004C5FF00827AF857FE097DFB1B785FE11F85AEBFB5BFB27CDBCD5F
5B92C61B4B9F106A3336F9EEA558C7FBB1461DA478E08608CC9279618FE00FFC
1D93FF000579FF0086BBFDA3BFE19F7C137BE67C39F841AABFF6EB4BA5F9136A
1E28B76B9B59F64AE4C8D6F6B1C8F02ED5883CAF72C7CE8C5BC8003EA0FF0083
2EFC45A0F8BFE29FED91AB785BC3BFF087F86754D57C3D77A4683F6F9350FEC4
B3926D75E0B4FB4C80493F951958FCD7019F66E2324D7EBF7ED6DF18BC55F0EE
EBE1AF85FC132787F4FF00137C54F15BF862CF57D6F4F9B53B0D17CAD1F53D5E
49E4B3867B692E77C7A5BC0116E61D8D72B29671118A4FC61FF8318FFE6E8BFE
E54FFDCD57EBF7837FE2F2FF00C1473C59E208FE7D27E09F8563F04DACF0FEEF
76B1ACBDA6ADAB5B4EAFF349E4D8D9F86658648C2C63FB46E90BCAEA52DC00FF
008573FB537FD164FD9FFF00F0CDEAFF00FCD3D687ECA3F167C7DAA7C4CF89BF
0EFE2A6A3E0FD4BC65E09BBD3F53D32EFC37A1DCE8F6BAA787EFED00B5BC6826
BCBDF2E43A85A6B56C50DC6FC582C86344963690D67F6DED2F46FF008285E93F
B3FCBA1EA10DE6A3E0A6F16BF88AE264874F37125D4B0D9E930F5335E4D058EB
174532A561D3247512A898C19FF19BFE2D87FC1413E0BF8A47EE74FF00887A56
B9F0E2F63B4F966D475110A6B9A64B7438125BDADAE93E2048D98B3C32EAA446
9B6E6E1D003B0FDB77E35EABFB35FEC5FF0017BE236856FA7DDEB7E01F056B3E
24D3E0BF8DE4B59AE2CEC66B889255464768CBC6A182BA9209C303C8E3FF00E1
5CFED4DFF4593F67FF00FC337ABFFF0034F47FC158BFE5165FB4B7FD92AF147F
E9A2EABE80A00F9FFF00E15CFED4DFF4593F67FF00FC337ABFFF0034F47FC2B9
FDA9BFE8B27ECFFF00F866F57FFE69EB8FFD9EBF6B1FDA4BF694F805E07F88DA
17C13F81F69A278FBC3F61E24D3E0BFF008C1AA47750DBDE5B4771124AA9E1A7
4590248A182BB0041C311C9EC3FE163FED4DFF00446FF67FFF00C3C9ABFF00F3
31401C7DDFED9BE3EF11FF00C12BFE0F7C5DD1D3C1FA67C42F8A569F0FD24379
A65CDE68DA75C788B51D22CEE2416AB7514D24710D465748CDCA92510339E49E
C3FE15CFED4DFF004593F67FFF00C337ABFF00F34F5E61F13FE0A6ABFB35FF00
C1297F67EF873AEDC69F77ADF803C41F07FC37A84F60EF25ACD7167E29F0E5BC
AF133AA3B465E362A59149046541E07D9F401F3FFF00C2B9FDA9BFE8B27ECFFF
00F866F57FFE69E8FD9A3E287C54FF0086A7F88DF0CFE266BDF0FF00C51FF08B
F857C39E27D3752F0C785AEFC3FF00F212BBD76DA58268AE351BEDFB3FB26365
7574FF005AE0A9C035C7FECF5FB58FED25FB4A7C02F03FC46D0BE09FC0FB4D13
C7DE1FB0F1269F05FF00C60D523BA86DEF2DA3B8892554F0D3A2C812450C15D8
020E188E4F61FB347C2FF8A9FF000D4FF11BE267C4CD07E1FF0085FF00E128F0
AF873C31A6E9BE18F14DDF883FE41B77AEDCCB3CD2DC69D63B37FF006B46AA8A
8FFEA9C96190280343F6CFF8B3E3EF016B7F07FC35F0E751F07E8BADFC4EF1AC
BE1B9F52F1268773AD5AD85BC5A06B1AAB3ADB417966ED233E991C6099805123
1DAC40159FFF000AE7F6A6FF00A2C9FB3FFF00E19BD5FF00F9A7A3F6C8FF0093
8AFD93BFECAADF7FEA11E2BAEC3F6C2F8F9AAFECD7F040F89742F0F69FE29D6E
EFC41A0F86F4FD36FF00557D2AD66B8D5B59B2D2A2796E520B878A38DEF56462
B0C8488C80B939001C7FFC2B9FDA9BFE8B27ECFF00FF00866F57FF00E69EB80F
DAC7C5BFB537ECBFFB2C7C4BF899FF000B43F67FD73FE15DF85754F13FF66FFC
2A4D5ED7FB43EC5692DCF91E6FFC24AFE5EFF2B6EFD8DB77676B6307AF83F6A0
F8D1E02F8DFF000BFC35F11BE167C2FD1744F89DE20B9F0DC1A9786FE23DF6B5
756171168DA96AAAED6D3E89668D1B26992464898153229DAC0115A1FF000562
FF0094597ED2DFF64ABC51FF00A68BAA00E7F4DF1FFC7DF8E3FB407C67D23C13
E37F83FE0FF0CFC33F15DA7862CEDF5BF87BA8EBB7F77E6787F47D5649E4B887
5BB38FFD66A6E8116118589496624D741FB347C50F8A9FF0D4FF0011BE19FC4C
D7BE1FF8A3FE117F0AF873C4FA6EA5E18F0B5DF87FFE42577AEDB4B04D15C6A3
7DBF67F64C6CAEAE9FEB5C1538068FD8DFFE4E2BF6B1FF00B2AB63FF00A84785
28F873FF00294DF8C9FF0064ABC07FFA77F19D007D0145145001451450014514
50014514500145145007F303FF0007AB7FCA537C03FF0064AB4EFF00D3BEB15F
AFFF00F06B8FFCA0A3E067FDC7FF00F520D4EBF203FE0F56FF0094A6F807FEC9
569DFF00A77D62BF5FFF00E0D71FF94147C0CFFB8FFF00EA41A9D007807FC1EA
DFF28B2F00FF00D955D3BFF4D1AC57E407FC13C3FE5051FF000515FF00BA6BFF
00A905C57EBFFF00C1EADFF28B2F00FF00D955D3BFF4D1AC57E407FC13C3FE50
51FF000515FF00BA6BFF00A905C5007C0145145007A07EC9DF033FE1A83F6A7F
869F0CFF00B53FB0FF00E16278AF4BF0C7F697D9BED5FD9FF6DBB8ADBCFF002B
7A799B3CDDDB37AEEDB8DCB9C8FDBEFF008818FF00EAE8BFF31BFF00F7D2BF20
7FE093BFF294DFD9A7FECAAF85FF00F4EF6B5FDBE5007E00FF00C40C7FF5745F
F98DFF00FBE947FC40C7FF005745FF0098DFFF00BE95FBFD45007C01FF0006F8
7EC31FF0ED7F83BF1E3E0A7FC251FF0009A7FC217F154FFC4E7FB37FB3BED9F6
AF0C7876F7FD479B2ECDBF68D9FEB1B3B37719DA3EBFF19FECD1E15F881FB477
80FE296AD69F6CF137C37D2B58D2B41F36286486CBFB51AC7ED3729B90C89702
3B110AC91BAFEEAE6E5183093E5F3FFD8DFF00E4E2BF6B1FFB2AB63FFA847852
BE50FF0082E17FC150F55FF825D7EDE7FB1BF88AF35BD42CFE16F8AAEFC4DA3F
8F74F495CDADC583FF0063A25EC912C52BBC964F29B94F293CE6092C2ACAB712
6E00F40FF838F3F6DEF1F7EC19FF0004B9F15F89BE1CE87A85F6B7E26BB8FC25
3EB96935CC2DE0BB7BD86746D5BCC830F1C88EB1C30B99230971756ED972A229
3F8F2AFEF73E2C7C2DD07E38FC2CF137827C5363FDA9E19F1869575A26AF67E7
4907DAECEE6178678BCC8D9644DD1BB2EE465619C820E0D7F187FF000580FF00
826C6BDFF04ADFDB87C49F0CF523F68F0FDC6ED6FC217ED7B1DD4DA968734F34
7692CE5123DB70BE4C914AA638C79B0C850189A37700FD5EFF008318FF00E6E8
BFEE54FF00DCD57EBF7FC132FF00E2A8FD93B4FF0088327EFA6F8CDAAEA7F11E
2BA9BE6BF9B4ED5EF25BCD222BC7E4B5C5AE91269B645433A44B6490C6EF0C51
9AFC01FF008362BFE2B7FD9C7F6A1F85507EF350F8F7AAF833E1C2C2BF2CCFA7
5F2EBCDADCB048DFBB8EE2DF428357BA89A5CA196D635D93332412FF004FD401
F0078C3FD37FE131FDA587EFBFE111FDA02CBFB32E350F9BFB17C3DA663C0FAD
FDB9BFE58E9F67F69F16EAD16D956187ED02EE5DBBEEE03F4FFEDEBF0B75EF8B
7FB2778AECFC2563FDADE36D07EC7E2CF0A69ED3470C3A9EB9A3DE41AB6976B3
B48CAA2DE6BEB2B68E5F9E326279009622448BE013FF00C138FE3EDCFEC3DABF
C0593E3A7C1F93C33E20F0ADF785754D5DBE116A275BD4BEDD04B15EEA53CFFF
00091F9726A17124F35CCB3BC67CDB89A491958B303F67F84EDB55B3F0AE9B0E
BB79A7EA5ADC569126A1776164F656B75701009648A07966786367DC56369642
A0805DC8DC403E6FFF008284FC52D07E38FF00C117FE3878DBC2D7DFDA9E19F1
87C15D7B5BD22F3C9920FB5D9DCE85713412F9722AC89BA3756DAEAAC338201C
8AFA82BE00F89DFF001427FC117FF6C0F84CDFF3427C2BE33F04D92C7F35B5BE
8FFD84DA96876D148DFBC97ECDA26A5A55B4924C3CC69EDA72CF3713CBF7FD00
7CBFF09FFE09CBE28F81DF0B3C33E09F0B7ED45FB40697E19F07E956BA269167
FD9DE0C9FEC9676D0A43045E649E1F691F6C68ABB9D998E32493935D07FC21BF
1DBF677FF4CD1FC59FF0D05E1F5FDEDF693E2A874FD0BC551F791AC2FAC6DEDF
4E9F091848ACAEAD2DF7CD3BBC9A9C312AC6BE61FB117C21F8B5FB4A7EC5FF00
087E236BBFB54FC70B4D6FC7FE0AD1BC49A84161A2782A3B586E2F2C61B89522
57D01DD630F23050CEC40032C4F27DFF00F63DF8D7AAFC7CF82035AD76DF4F87
5BD2BC41AF785B5092C2378AD6FAE347D66F74996EE289D9DE18EE1EC9A7581A
494C22611996629E6B80797FEDB5F14B41F8D1FB1D7837C49E1BBEFED0D2750F
8ABF0F151DA192DE68258BC79A2C535BCF0CAAB2C1710CC92452C12A24B0CB14
91C888E8CA3EA0AF803F6C5FF8A57F692F8A9A0587FA3E93AC78AFE0478DAF20
FBDE76B175E3B1A4DC5CEE6CB2EFB1D07498BCB52231F64DE103C92BC9F7FD00
7CBFF09FFE09CBE28F81DF0B3C33E09F0B7ED45FB40697E19F07E956BA269167
FD9DE0C9FEC9676D0A43045E649E1F691F6C68ABB9D998E32493935D07EC2FE2
0F17FF00C25BF1DBC23E2DF1D7883E227FC2BBF8810689A4EADADD9E9B6B7FF6
397C35A0EA4629069F6B6B036DB8D42E70DE506DACA096DA0D7987EC45F087E2
D7ED29FB17FC21F88DAEFED53F1C2D35BF1FF82B46F126A1058689E0A8ED61B8
BCB186E254895F407758C3C8C1433B1000CB13C9F7FF00D98BF6628FF66B83C6
934DE34F1878FF005BF1F7880789358D63C48BA7477535C2E9D63A7222A585A5
ADBA46B6FA7DB80045924312C4B7001C7FED91FF002715FB277FD955BEFF00D4
23C5747FC14B3FE4DD7C39FF006557E1C7FEA6FA151F19FF00E2AAFF00828E7C
07D02FFF00D2349D1FC2BE30F1B59C1F77C9D62D5F44D26DEE772E19B658EBDA
B45E5B1319FB5EF285E389E33FE0A59FF26EBE1CFF00B2ABF0E3FF00537D0A80
0FDB23FE4E2BF64EFF00B2AB7DFF00A8478AE8FF0082B17FCA2CBF696FFB255E
28FF00D345D51FB647FC9C57EC9DFF006556FBFF00508F15D1FF000562FF0094
597ED2DFF64ABC51FF00A68BAA003F637FF938AFDAC7FECAAD8FFEA11E14AD0F
8B3FB185F78FBE3EEA5F11BC35F183E287C31D6F5AF0FE9DE1BD4A0F0DDBE817
36B7F6F6173A85C5B3B2EA5A65E3AC8AFA9DD0263740C0AE549506B3FF00637F
F938AFDAC7FECAAD8FFEA11E14AE7FC7FA67C40F8E3FB7D78DFC13A47C67F881
F0CFC33E0FF87FE17D6EDECFC31A6F87E6FB5DE6A3A8F88E1B89669352D36F24
FF0057A65AAAAA3228C39C12D9A00E83FE199FE357823FD2BC2DFB4A7883C41A
849FBA92DFE23F82F45D634A488F25E38B468746B95B80CAA15DEE9E208D2830
B332491761F053E3E6ABE28F155C782FE20787B4FF0003FC48B5B46D4D74BB2D
55F55D3359B00E886F34DBD920B77BA8E279628AE11E08A6B69A48C3C7E4DC59
DC5D71FF000BFC41E2FF00813FB53E83F0A7C45E3AF107C53D3FC6FE15D67C59
63AD7886CF4DB3D5747974BBBD26D66B53FD9D6B6B6D3DBCCBAB40F1E6049617
B69F74B70B711A5A9FF0507FF8A57C39F09FC756FF003EADE03F8ABE18FB0432
736D37F6CDF2F85EEBCD51866D963AF5E491ED65C4F1C0CDBD15E29003E80A28
A2800A28A2800A28A2800A28A2803F981FF83D5BFE529BE01FFB255A77FE9DF5
8A3FE0971FF075AFFC3B5FF613F02FC15FF850BFF09A7FC217F6FF00F89CFF00
C26DFD9BF6CFB56A1737BFEA3EC12ECDBF68D9FEB1B3B37719DA3F63FF00E0A8
1FF06F4FC17FF82B2FC7DD1FE237C46F13FC50D175BD17C3F0F86E083C37A8D8
DB5ABDBC5737370AECB3D9CCE642F75202438180BF282093F387FC4153FB2CFF
00D0FDFB407FE0F348FF00E565007E607FC16AFF00E0E42FF87C1FECB1A07C33
FF008533FF000AEFFB0FC576FE27FED2FF0084B7FB5FCFF2AD2F2DBC8F2BEC50
6DCFDAF76FDE71E5E369DD91E7FF00F04F0FF94147FC1457FEE9AFFEA41715FA
FF00FF001054FECB3FF43F7ED01FF83CD23FF9595EBFF067FE0D7FF805F03BF6
4EF8D1F07749F177C60B8F0CFC74FEC3FEDEBABBD574E7BFB4FEC9BC7BCB6FB2
BAD8AC69BA47224F323932B80BB0F3401FC91515FD3F7FC4153FB2CFFD0FDFB4
07FE0F348FFE5651FF001054FECB3FF43F7ED01FF83CD23FF959401F803FF049
DFF94A6FECD3FF006557C2FF00FA77B5AFEDF2BF2C7F67AFF83453F66DFD9AFE
3EF81FE23685E36F8E177ADF803C4161E24D3E0BFD634B92D66B8B3B98EE2249
5534E4768CBC6A182BA9209C303C8FD4EA0028A28A00F9FF00F637FF00938AFD
AC7FECAAD8FF00EA11E14AFC81FF0083E73FE6D77FEE6BFF00DC2D7EBF7883F6
17D5BFE16EF8EBC5DE12F8EDF183E1DFFC2C4D560D6F56D2744B4F0D5D587DB2
2D36CB4D12C6750D22EA75DD6FA7DB657CD2BB95880BB88AFE7C7FE0EFD9FC71
E01FDB43E17FC39F12FC50F187C4ED1345F057FC249A6CFE24B0D1ADAEAC2E2F
EFAE6DEE515B4DB1B3468D934CB520488E5486C300C45007E807FC1A23FF0005
53B7FDA3FF0066093F673F15EA5A85D7C42F84B6935E68724F14F32DFF0086BC
D892306E1E471E65A4F702DC4788956DDACD6257F2E529F57FFC17CFFE094767
FF000559FD87B50D134D8BCAF89BE03F3FC41E0AB88ADED4CD7978B0386D2DE5
98A7976F7988D18896355963B695F7AC1E5B7F245FB2E7ED47E3BFD8BBE3B687
F133E19EB9FF0008D78DBC37F68FECDD4BEC56F79F66F3EDE5B697F75711C913
6E866917E6438DD9182011F5FF00FC451BFB767FD172FF00CB33C3FF00FC8340
1F57FF00C195FF0005355F88FF00B4FF00C50F135D5C69F2F837E1EDA69DA98B
17774BA5F104F16A56561791ED5F9A38F4FB9D7A174790266FA26F2DDD12487F
7BBF6C2F8C5E2AF86FA3F81FC3BE0193C3F67E3DF89FE2B83C31A1DF6BFA7CD7
FA469DB2D6EB53BD9EE61867826936E9BA6DF885239177DCB5B2BB246D2489F8
E3FF0006B37C65F8CDFF00050FD47F696BAD73E3878C3C03245E20D27C557ABE
0CF0C7852CA3D5F54D4E0B982EEEE74B8D2274123A6976A4988461E432C8E1E4
95DCFEBF7C36FD8C2FBC31F19744F1AF8C3E307C50F8B179E17B4BB8744D3FC5
36FA043A7E93717223492FE28B4ED32D0FDB040B2DBA4CECC6386F2EE35C2DC4
9B8033FF00E15CFED4DFF4593F67FF00FC337ABFFF0034F5D07ECB3F18BC55E2
EF11FC40F03FC4093C3F378DBE1C6AB6D6D25EE93A7CDA4DB788B4EBBB182EED
B5382C279EE2582DCCD25E588637132493E937655D487821F60AF0FF008B3FB1
85F78FBE3EEA5F11BC35F183E287C31D6F5AF0FE9DE1BD4A0F0DDBE81736B7F6
F6173A85C5B3B2EA5A65E3AC8AFA9DD0263740C0AE549506803E70FF0082C27F
C5AED1FE3A6A23F73A7FC61FD9ABC63A15EDD5DFCB08D4741B5B9BCD32CED5F8
1F689ED75AF104F244C5DE48B4B0F188D6DEE0BFDFF5F207ED17FF000493BAFD
AC7C1D0F87FE207ED29FB406BFA4DBFDBBCB83EC9E10B5DBF6CD2EF749B9F9A0
D051BE7B1D46F22E4FCBE76F5C3A23AF7FFF000C6DF117FE8EC7F680FF00C147
823FF99EA00E7FE13FFC1397C51F03BE167867C13E16FDA8BF680D2FC33E0FD2
AD744D22CFFB3BC193FD92CEDA148608BCC93C3ED23ED8D15773B331C6492726
BD83F65CFD9BF41FD923E04E87E00F0EDE788354D3F45FB44D2EA5AEEA526A5A
AEAF7973712DD5E5F5DDC49CC97171753CF3C8C02AEF95B6AA2ED51E7FFF000C
6DF117FE8EC7F680FF00C147823FF99EA3FE1DEFA3F8FBF73F17BC79F103E3E6
9317FA8D0BC6C74B8F4119E5BED1A6E99656567A87CCB1489FDA10DCF912411C
90792FBD9803C03E347FC5E9F047893E3A2FC9A4F8F3E2AFC2BF0AF84FCBE23B
FF000F68DE3DB1FB3EA47EF2C9F6CBED4355B88278646867D3A4D2E455476977
7DFF005E7FFB4EFECF767FB507C229BC2379AF7883C2FF00F135D275BB4D5B44
FB2FDBF4FBCD3752B6D4AD658C5D413C0D8B8B48B2B244EACBB811CE479FFF00
C31B7C45FF00A3B1FDA03FF051E08FFE67A8033FC27FF04A7F84BE02F0AE9BA1
685A87C70D1744D16D22B0D3F4FB0F8DDE35B6B5B0B78902450C5126AA1238D1
155551400A0000002BE70FDA2BC033FC0EF8AFF153E1EF86FC6FF182DFC33AA7
FC294DCB77F133C43A85FDA7F6B78FF51D3B52FB2DF5C5EC97769F69B3862864
FB3CB1E55077C9AFA7FF00E18DBE22FF00D1D8FED01FF828F047FF0033D5E41F
B647EC932FECEFFB277C7EF8BDA97C4AF881F13BC6DA0F85749F1659DCF8A62D
1E186397C1B7977E22D2AD4C5A6D859A9B792F9E413E7F7AF13954962215D403
E9FF00817FB317847F675FED493C3B0F882EB50D6BCA5BED53C43E24D4BC47AA
DC450EF30DB9BDD4679EE7ECF134B3BC70093CA8DEE27754569A466F2FFDB135
9B8F8CBF1F7E11FC15D2F49D4354B3BAF1058F8FFC6DA9593C1B7C29A5E8D723
50D31A6679374725F6B565650449E54867B7B6D5B6796D6ED2C5F903FF0004D1
FF00838D7F697FF82B37EDFBF0BFE066B1AA783FE10E89E2ABBD46E2FF005DF0
0682875974B5D22FEE92053ABB6A16AB1B4B144588B7F330802BA82D9FDDEF82
9F0534AF81BE15B8B1B1B8D4355D4B55BB6D4F5CD7353749753F115FBA224979
75222A23485238E3548D1218618618218E18218A2400F2FF00DB23FE4E2BF64E
FF00B2AB7DFF00A8478AE8FF0082B17FCA2CBF696FFB255E28FF00D345D5761F
B4EFECC51FED290782E687C69E30F006B7E01F101F1268FAC786D74E92EA1B86
D3AFB4E7464BFB4BAB778DADF50B80418B209521815E7CBFE2C7FC1397C51F1C
7E16789BC13E29FDA8BF680D53C33E30D2AEB44D5ECFFB3BC1907DAECEE61786
78BCC8FC3EB226E8DD977232B0CE410706803A0FD8DFFE4E2BF6B1FF00B2AB63
FF00A847852B43E2CFEC617DE3EF8FBA97C46F0D7C60F8A1F0C75BD6BC3FA778
6F5283C376FA05CDADFDBD85CEA1716CECBA969978EB22BEA774098DD0302B95
2541ACFF00107EC2FAB7FC2DDF1D78BBC25F1DBE307C3BFF008589AAC1ADEADA
4E8969E1ABAB0FB645A6D969A258CEA1A45D4EBBADF4FB6CAF9A5772B1017711
47FC31B7C45FFA3B1FDA03FF00051E08FF00E67A803B0F829FB3147F0B7C5571
E25F1078D3C61F143C6525A36996DE20F14AE9CB75A65833A48F676D1585A5A5
AC31C92C6924AE9089A73140269244B6B6587CFF00F686F16695FB497ED3FF00
0F7E0F689A969FAD47E0BF1041E38F88F656D7092AE916FA744977A3DA5DB444
CB69793EAD36937F6D13F942E6DF49BFCBBC68F0CDA1FF000C55E34D47FD1F58
FDA7FF00680D6349B8FDDDF58793E15D37EDD01E2487ED563A2DBDE5BEF5CAF9
B6B3C33C79DD1CB1B8571EC1F0B7E16E83F05FC0963E1BF0DD8FF67E93A7F98C
88D3497134F2CB234B35C4F34ACD2CF7134CF24B2CF2BBCB34B2C9248EEEECC4
03A0A28A2803FFD9>

/Zavod (СП ОАО "Андижанкабель") def
%%EOF
PrinTitle

/CabName (КЦПппВП \(пучок В\/В исп.\)) def
/CabNameStruct (5x2x0,5) def
/DocNum (ТУ 16.К17\226040\2262003) def
/CabelLengt (6600) def
/Netto (547.8) def
/TipName (14 П) def
/BarabanNum (25) def
/ZakazNum () def
/SertNum () def
/Brutto (723) def
/IspData (10.01.2011) def
/Temperatur (19) def

Head_isp

/Operator (Лотарева Ю.А.) def

/Today (6.12.2017 г.) def
/FirstNum [ ] def

/Y0 bot def pole_left bot

/Param [ /NumNum /Rgil /DR ] def
/EdIsm [ (Пары) (Ом/км) (%) ] def
/Cols  [ 1 2 1 ] def

/NormRgilMin 84 def
/NormRgilMax 95.9 def
/Rgil1 [ 92.6 91.7 91.2 90.5 89.8 ] def
/Rgil2 [ 92.4 91.6 91.2 90.7 89.9 ] def

/NormDRMin -Inf def
/NormDRMax 1 def
/DR1 [ 0.138 0.081 0.026 0.115 0.050 ] def

Print_Table_I

/Param [ /NumNum /Tiz ] def
/EdIsm [ (Комб.) (сек) ] def
/Cols  [ 1 1 ] def

/NormTizMin -Inf def
/NormTizMax 180 def
/Tiz1 [ 28 33 29 29 5 ] def

/NormRizMin 6500 def
/EdIsmNormRiz (МОм/км) def

Komb_Riz

/Param [ /Rgil /DR ] def
/Rows [ 1 1 ] def
/Freq_min [ null null ] def
/Freq_max [ null null ] def

/Percent_Data [
[ 84 95.9 (Ом/км) 100 100 ]
[ () 1 (%) 100 100 ]
] def


Print_Table_Percent

/StructTip (пары) def

/U_gil_gil 1500 def /U_gil_ekr 0 def
/Probit_Num [ ] def

Vysokovoltnye_isp

/StruktTip (пар) def
5 5 5 Svodka_Str

Konez
showpage
